{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-IZ4ZA4LQ.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"1055-FGpf9RzrHyHhgC/qJoGZBZP3vys\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/log.js\nvar require_log = __commonJS({\n  \"node_modules/refractor/lang/log.js\"(exports, module) {\n    module.exports = log;\n    log.displayName = \"log\";\n    log.aliases = [];\n    function log(Prism) {\n      Prism.languages.log = {\n        string: {\n          // Single-quoted strings must not be confused with plain text. E.g. Can't isn't Susan's Chris' toy\n          pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?![st] | \\w)(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n          greedy: true\n        },\n        exception: {\n          pattern: /(^|[^\\w.])[a-z][\\w.]*(?:Error|Exception):.*(?:(?:\\r\\n?|\\n)[ \\t]*(?:at[ \\t].+|\\.{3}.*|Caused by:.*))+(?:(?:\\r\\n?|\\n)[ \\t]*\\.\\.\\. .*)?/,\n          lookbehind: true,\n          greedy: true,\n          alias: [\"javastacktrace\", \"language-javastacktrace\"],\n          inside: Prism.languages[\"javastacktrace\"] || {\n            keyword: /\\bat\\b/,\n            function: /[a-z_][\\w$]*(?=\\()/,\n            punctuation: /[.:()]/\n          }\n        },\n        level: [\n          {\n            pattern: /\\b(?:ALERT|CRIT|CRITICAL|EMERG|EMERGENCY|ERR|ERROR|FAILURE|FATAL|SEVERE)\\b/,\n            alias: [\"error\", \"important\"]\n          },\n          {\n            pattern: /\\b(?:WARN|WARNING|WRN)\\b/,\n            alias: [\"warning\", \"important\"]\n          },\n          {\n            pattern: /\\b(?:DISPLAY|INF|INFO|NOTICE|STATUS)\\b/,\n            alias: [\"info\", \"keyword\"]\n          },\n          {\n            pattern: /\\b(?:DBG|DEBUG|FINE)\\b/,\n            alias: [\"debug\", \"keyword\"]\n          },\n          {\n            pattern: /\\b(?:FINER|FINEST|TRACE|TRC|VERBOSE|VRB)\\b/,\n            alias: [\"trace\", \"comment\"]\n          }\n        ],\n        property: {\n          pattern: /((?:^|[\\]|])[ \\t]*)[a-z_](?:[\\w-]|\\b\\/\\b)*(?:[. ]\\(?\\w(?:[\\w-]|\\b\\/\\b)*\\)?)*:(?=\\s)/im,\n          lookbehind: true\n        },\n        separator: {\n          pattern: /(^|[^-+])-{3,}|={3,}|\\*{3,}|- - /m,\n          lookbehind: true,\n          alias: \"comment\"\n        },\n        url: /\\b(?:file|ftp|https?):\\/\\/[^\\s|,;'\"]*[^\\s|,;'\">.]/,\n        email: {\n          pattern: /(^|\\s)[-\\w+.]+@[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)+(?=\\s)/,\n          lookbehind: true,\n          alias: \"url\"\n        },\n        \"ip-address\": {\n          pattern: /\\b(?:\\d{1,3}(?:\\.\\d{1,3}){3})\\b/,\n          alias: \"constant\"\n        },\n        \"mac-address\": {\n          pattern: /\\b[a-f0-9]{2}(?::[a-f0-9]{2}){5}\\b/i,\n          alias: \"constant\"\n        },\n        domain: {\n          pattern: /(^|\\s)[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)*\\.[a-z][a-z0-9-]+(?=\\s)/,\n          lookbehind: true,\n          alias: \"constant\"\n        },\n        uuid: {\n          pattern: /\\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\b/i,\n          alias: \"constant\"\n        },\n        hash: {\n          pattern: /\\b(?:[a-f0-9]{32}){1,2}\\b/i,\n          alias: \"constant\"\n        },\n        \"file-path\": {\n          pattern: /\\b[a-z]:[\\\\/][^\\s|,;:(){}\\[\\]\"']+|(^|[\\s:\\[\\](>|])\\.{0,2}\\/\\w[^\\s|,;:(){}\\[\\]\"']*/i,\n          lookbehind: true,\n          greedy: true,\n          alias: \"string\"\n        },\n        date: {\n          pattern: RegExp(\n            /\\b\\d{4}[-/]\\d{2}[-/]\\d{2}(?:T(?=\\d{1,2}:)|(?=\\s\\d{1,2}:))/.source + \"|\" + /\\b\\d{1,4}[-/ ](?:\\d{1,2}|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)[-/ ]\\d{2,4}T?\\b/.source + \"|\" + /\\b(?:(?:Fri|Mon|Sat|Sun|Thu|Tue|Wed)(?:\\s{1,2}(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep))?|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)\\s{1,2}\\d{1,2}\\b/.source,\n            \"i\"\n          ),\n          alias: \"number\"\n        },\n        time: {\n          pattern: /\\b\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,:]\\d+)?(?:\\s?[+-]\\d{2}:?\\d{2}|Z)?\\b/,\n          alias: \"number\"\n        },\n        boolean: /\\b(?:false|null|true)\\b/i,\n        number: {\n          pattern: /(^|[^.\\w])(?:0x[a-f0-9]+|0o[0-7]+|0b[01]+|v?\\d[\\da-f]*(?:\\.\\d+)*(?:e[+-]?\\d+)?[a-z]{0,3}\\b)\\b(?!\\.\\w)/i,\n          lookbehind: true\n        },\n        operator: /[;:?<=>~/@!$%&+\\-|^(){}*#]/,\n        punctuation: /[\\[\\].,]/\n      };\n    }\n  }\n});\n\nexport {\n  require_log\n};\n//# sourceMappingURL=chunk-IZ4ZA4LQ.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00040179200004786253
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-IZ4ZA4LQ.js (200) â€” 2024-07-28T11:41:34.587Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-IZ4ZA4LQ.js"
        }
      ]
    }
  ]
}