{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-VFFRVCSV.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"c6a-dIgdx5bgQKqmkNqbCisCeqx+Emk\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  require_scheme\n} from \"/node_modules/.vite/deps/chunk-DI4ICUJB.js?v=b39bb78e\";\nimport {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/lilypond.js\nvar require_lilypond = __commonJS({\n  \"node_modules/refractor/lang/lilypond.js\"(exports, module) {\n    var refractorScheme = require_scheme();\n    module.exports = lilypond;\n    lilypond.displayName = \"lilypond\";\n    lilypond.aliases = [];\n    function lilypond(Prism) {\n      Prism.register(refractorScheme);\n      (function(Prism2) {\n        var schemeExpression = /\\((?:[^();\"#\\\\]|\\\\[\\s\\S]|;.*(?!.)|\"(?:[^\"\\\\]|\\\\.)*\"|#(?:\\{(?:(?!#\\})[\\s\\S])*#\\}|[^{])|<expr>)*\\)/.source;\n        var recursivenessLog2 = 5;\n        for (var i = 0; i < recursivenessLog2; i++) {\n          schemeExpression = schemeExpression.replace(/<expr>/g, function() {\n            return schemeExpression;\n          });\n        }\n        schemeExpression = schemeExpression.replace(/<expr>/g, /[^\\s\\S]/.source);\n        var lilypond2 = Prism2.languages.lilypond = {\n          comment: /%(?:(?!\\{).*|\\{[\\s\\S]*?%\\})/,\n          \"embedded-scheme\": {\n            pattern: RegExp(\n              /(^|[=\\s])#(?:\"(?:[^\"\\\\]|\\\\.)*\"|[^\\s()\"]*(?:[^\\s()]|<expr>))/.source.replace(\n                /<expr>/g,\n                function() {\n                  return schemeExpression;\n                }\n              ),\n              \"m\"\n            ),\n            lookbehind: true,\n            greedy: true,\n            inside: {\n              scheme: {\n                pattern: /^(#)[\\s\\S]+$/,\n                lookbehind: true,\n                alias: \"language-scheme\",\n                inside: {\n                  \"embedded-lilypond\": {\n                    pattern: /#\\{[\\s\\S]*?#\\}/,\n                    greedy: true,\n                    inside: {\n                      punctuation: /^#\\{|#\\}$/,\n                      lilypond: {\n                        pattern: /[\\s\\S]+/,\n                        alias: \"language-lilypond\",\n                        inside: null\n                        // see below\n                      }\n                    }\n                  },\n                  rest: Prism2.languages.scheme\n                }\n              },\n              punctuation: /#/\n            }\n          },\n          string: {\n            pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n            greedy: true\n          },\n          \"class-name\": {\n            pattern: /(\\\\new\\s+)[\\w-]+/,\n            lookbehind: true\n          },\n          keyword: {\n            pattern: /\\\\[a-z][-\\w]*/i,\n            inside: {\n              punctuation: /^\\\\/\n            }\n          },\n          operator: /[=|]|<<|>>/,\n          punctuation: {\n            pattern: /(^|[a-z\\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\\d))|[_^]\\.?|[.!])|[{}()[\\]<>^~]|\\\\[()[\\]<>\\\\!]|--|__/,\n            lookbehind: true\n          },\n          number: /\\b\\d+(?:\\/\\d+)?\\b/\n        };\n        lilypond2[\"embedded-scheme\"].inside[\"scheme\"].inside[\"embedded-lilypond\"].inside[\"lilypond\"].inside = lilypond2;\n        Prism2.languages.ly = lilypond2;\n      })(Prism);\n    }\n  }\n});\n\nexport {\n  require_lilypond\n};\n//# sourceMappingURL=chunk-VFFRVCSV.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00011187500786036253
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-VFFRVCSV.js (200) â€” 2024-07-28T11:41:34.630Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-VFFRVCSV.js"
        }
      ]
    }
  ]
}