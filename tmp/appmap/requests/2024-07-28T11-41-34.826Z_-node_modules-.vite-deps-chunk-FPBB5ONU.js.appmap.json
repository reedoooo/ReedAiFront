{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-FPBB5ONU.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"e29-1+CHQocx/BkOagYnK+A4erTaIFA\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/batch.js\nvar require_batch = __commonJS({\n  \"node_modules/refractor/lang/batch.js\"(exports, module) {\n    module.exports = batch;\n    batch.displayName = \"batch\";\n    batch.aliases = [];\n    function batch(Prism) {\n      ;\n      (function(Prism2) {\n        var variable = /%%?[~:\\w]+%?|!\\S+!/;\n        var parameter = {\n          pattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\n          alias: \"attr-name\",\n          inside: {\n            punctuation: /:/\n          }\n        };\n        var string = /\"(?:[\\\\\"]\"|[^\"])*\"(?!\")/;\n        var number = /(?:\\b|-)\\d+\\b/;\n        Prism2.languages.batch = {\n          comment: [\n            /^::.*/m,\n            {\n              pattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n              lookbehind: true\n            }\n          ],\n          label: {\n            pattern: /^:.*/m,\n            alias: \"property\"\n          },\n          command: [\n            {\n              // FOR command\n              pattern: /((?:^|[&(])[ \\t]*)for(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* \\S+ in \\([^)]+\\) do/im,\n              lookbehind: true,\n              inside: {\n                keyword: /\\b(?:do|in)\\b|^for\\b/i,\n                string,\n                parameter,\n                variable,\n                number,\n                punctuation: /[()',]/\n              }\n            },\n            {\n              // IF command\n              pattern: /((?:^|[&(])[ \\t]*)if(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|(?!\")(?:(?!==)\\S)+)?(?:==| (?:equ|geq|gtr|leq|lss|neq) )(?:\"[^\"]*\"|[^\\s\"]\\S*))/im,\n              lookbehind: true,\n              inside: {\n                keyword: /\\b(?:cmdextversion|defined|errorlevel|exist|not)\\b|^if\\b/i,\n                string,\n                parameter,\n                variable,\n                number,\n                operator: /\\^|==|\\b(?:equ|geq|gtr|leq|lss|neq)\\b/i\n              }\n            },\n            {\n              // ELSE command\n              pattern: /((?:^|[&()])[ \\t]*)else\\b/im,\n              lookbehind: true,\n              inside: {\n                keyword: /^else\\b/i\n              }\n            },\n            {\n              // SET command\n              pattern: /((?:^|[&(])[ \\t]*)set(?: \\/[a-z](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n              lookbehind: true,\n              inside: {\n                keyword: /^set\\b/i,\n                string,\n                parameter,\n                variable: [variable, /\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],\n                number,\n                operator: /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\n                punctuation: /[()',]/\n              }\n            },\n            {\n              // Other commands\n              pattern: /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:\"(?:[\\\\\"]\"|[^\"])*\"(?!\")|[^\"^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/m,\n              lookbehind: true,\n              inside: {\n                keyword: /^\\w+\\b/,\n                string,\n                parameter,\n                label: {\n                  pattern: /(^\\s*):\\S+/m,\n                  lookbehind: true,\n                  alias: \"property\"\n                },\n                variable,\n                number,\n                operator: /\\^/\n              }\n            }\n          ],\n          operator: /[&@]/,\n          punctuation: /[()']/\n        };\n      })(Prism);\n    }\n  }\n});\n\nexport {\n  require_batch\n};\n//# sourceMappingURL=chunk-FPBB5ONU.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00015658291522413492
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-FPBB5ONU.js (200) â€” 2024-07-28T11:41:34.826Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-FPBB5ONU.js"
        }
      ]
    }
  ]
}