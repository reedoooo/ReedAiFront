{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-BI43XOSO.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"13c6-dDabb/+PIT26pDEvS/Z+3PiO2l0\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/erlang.js\nvar require_erlang = __commonJS({\n  \"node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/erlang.js\"(exports, module) {\n    function erlang(hljs) {\n      const BASIC_ATOM_RE = \"[a-z'][a-zA-Z0-9_']*\";\n      const FUNCTION_NAME_RE = \"(\" + BASIC_ATOM_RE + \":\" + BASIC_ATOM_RE + \"|\" + BASIC_ATOM_RE + \")\";\n      const ERLANG_RESERVED = {\n        keyword: \"after and andalso|10 band begin bnot bor bsl bzr bxor case catch cond div end fun if let not of orelse|10 query receive rem try when xor\",\n        literal: \"false true\"\n      };\n      const COMMENT = hljs.COMMENT(\"%\", \"$\");\n      const NUMBER = {\n        className: \"number\",\n        begin: \"\\\\b(\\\\d+(_\\\\d+)*#[a-fA-F0-9]+(_[a-fA-F0-9]+)*|\\\\d+(_\\\\d+)*(\\\\.\\\\d+(_\\\\d+)*)?([eE][-+]?\\\\d+)?)\",\n        relevance: 0\n      };\n      const NAMED_FUN = {\n        begin: \"fun\\\\s+\" + BASIC_ATOM_RE + \"/\\\\d+\"\n      };\n      const FUNCTION_CALL = {\n        begin: FUNCTION_NAME_RE + \"\\\\(\",\n        end: \"\\\\)\",\n        returnBegin: true,\n        relevance: 0,\n        contains: [\n          {\n            begin: FUNCTION_NAME_RE,\n            relevance: 0\n          },\n          {\n            begin: \"\\\\(\",\n            end: \"\\\\)\",\n            endsWithParent: true,\n            returnEnd: true,\n            relevance: 0\n            // \"contains\" defined later\n          }\n        ]\n      };\n      const TUPLE = {\n        begin: /\\{/,\n        end: /\\}/,\n        relevance: 0\n        // \"contains\" defined later\n      };\n      const VAR1 = {\n        begin: \"\\\\b_([A-Z][A-Za-z0-9_]*)?\",\n        relevance: 0\n      };\n      const VAR2 = {\n        begin: \"[A-Z][a-zA-Z0-9_]*\",\n        relevance: 0\n      };\n      const RECORD_ACCESS = {\n        begin: \"#\" + hljs.UNDERSCORE_IDENT_RE,\n        relevance: 0,\n        returnBegin: true,\n        contains: [\n          {\n            begin: \"#\" + hljs.UNDERSCORE_IDENT_RE,\n            relevance: 0\n          },\n          {\n            begin: /\\{/,\n            end: /\\}/,\n            relevance: 0\n            // \"contains\" defined later\n          }\n        ]\n      };\n      const BLOCK_STATEMENTS = {\n        beginKeywords: \"fun receive if try case\",\n        end: \"end\",\n        keywords: ERLANG_RESERVED\n      };\n      BLOCK_STATEMENTS.contains = [\n        COMMENT,\n        NAMED_FUN,\n        hljs.inherit(hljs.APOS_STRING_MODE, {\n          className: \"\"\n        }),\n        BLOCK_STATEMENTS,\n        FUNCTION_CALL,\n        hljs.QUOTE_STRING_MODE,\n        NUMBER,\n        TUPLE,\n        VAR1,\n        VAR2,\n        RECORD_ACCESS\n      ];\n      const BASIC_MODES = [\n        COMMENT,\n        NAMED_FUN,\n        BLOCK_STATEMENTS,\n        FUNCTION_CALL,\n        hljs.QUOTE_STRING_MODE,\n        NUMBER,\n        TUPLE,\n        VAR1,\n        VAR2,\n        RECORD_ACCESS\n      ];\n      FUNCTION_CALL.contains[1].contains = BASIC_MODES;\n      TUPLE.contains = BASIC_MODES;\n      RECORD_ACCESS.contains[1].contains = BASIC_MODES;\n      const DIRECTIVES = [\n        \"-module\",\n        \"-record\",\n        \"-undef\",\n        \"-export\",\n        \"-ifdef\",\n        \"-ifndef\",\n        \"-author\",\n        \"-copyright\",\n        \"-doc\",\n        \"-vsn\",\n        \"-import\",\n        \"-include\",\n        \"-include_lib\",\n        \"-compile\",\n        \"-define\",\n        \"-else\",\n        \"-endif\",\n        \"-file\",\n        \"-behaviour\",\n        \"-behavior\",\n        \"-spec\"\n      ];\n      const PARAMS = {\n        className: \"params\",\n        begin: \"\\\\(\",\n        end: \"\\\\)\",\n        contains: BASIC_MODES\n      };\n      return {\n        name: \"Erlang\",\n        aliases: [\"erl\"],\n        keywords: ERLANG_RESERVED,\n        illegal: \"(</|\\\\*=|\\\\+=|-=|/\\\\*|\\\\*/|\\\\(\\\\*|\\\\*\\\\))\",\n        contains: [\n          {\n            className: \"function\",\n            begin: \"^\" + BASIC_ATOM_RE + \"\\\\s*\\\\(\",\n            end: \"->\",\n            returnBegin: true,\n            illegal: \"\\\\(|#|//|/\\\\*|\\\\\\\\|:|;\",\n            contains: [\n              PARAMS,\n              hljs.inherit(hljs.TITLE_MODE, {\n                begin: BASIC_ATOM_RE\n              })\n            ],\n            starts: {\n              end: \";|\\\\.\",\n              keywords: ERLANG_RESERVED,\n              contains: BASIC_MODES\n            }\n          },\n          COMMENT,\n          {\n            begin: \"^-\",\n            end: \"\\\\.\",\n            relevance: 0,\n            excludeEnd: true,\n            returnBegin: true,\n            keywords: {\n              $pattern: \"-\" + hljs.IDENT_RE,\n              keyword: DIRECTIVES.map((x) => `${x}|1.5`).join(\" \")\n            },\n            contains: [PARAMS]\n          },\n          NUMBER,\n          hljs.QUOTE_STRING_MODE,\n          RECORD_ACCESS,\n          VAR1,\n          VAR2,\n          TUPLE,\n          {\n            begin: /\\.$/\n          }\n          // relevance booster\n        ]\n      };\n    }\n    module.exports = erlang;\n  }\n});\n\nexport {\n  require_erlang\n};\n//# sourceMappingURL=chunk-BI43XOSO.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00017795793246477842
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-BI43XOSO.js (200) â€” 2024-07-28T11:41:39.948Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-BI43XOSO.js"
        }
      ]
    }
  ]
}