{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-OLBN5AMM.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"a84-Z3hZi/wm0s7InPiq9OotTarpQ1k\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  require_ruby\n} from \"/node_modules/.vite/deps/chunk-GY6G7ADM.js?v=b39bb78e\";\nimport {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/crystal.js\nvar require_crystal = __commonJS({\n  \"node_modules/refractor/lang/crystal.js\"(exports, module) {\n    var refractorRuby = require_ruby();\n    module.exports = crystal;\n    crystal.displayName = \"crystal\";\n    crystal.aliases = [];\n    function crystal(Prism) {\n      Prism.register(refractorRuby);\n      (function(Prism2) {\n        Prism2.languages.crystal = Prism2.languages.extend(\"ruby\", {\n          keyword: [\n            /\\b(?:__DIR__|__END_LINE__|__FILE__|__LINE__|abstract|alias|annotation|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|ifdef|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|ptr|require|rescue|return|select|self|sizeof|struct|super|then|type|typeof|undef|uninitialized|union|unless|until|when|while|with|yield)\\b/,\n            {\n              pattern: /(\\.\\s*)(?:is_a|responds_to)\\?/,\n              lookbehind: true\n            }\n          ],\n          number: /\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\\da-fA-F_]*[\\da-fA-F]|(?:\\d(?:[\\d_]*\\d)?)(?:\\.[\\d_]*\\d)?(?:[eE][+-]?[\\d_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/,\n          operator: [/->/, Prism2.languages.ruby.operator],\n          punctuation: /[(){}[\\].,;\\\\]/\n        });\n        Prism2.languages.insertBefore(\"crystal\", \"string-literal\", {\n          attribute: {\n            pattern: /@\\[.*?\\]/,\n            inside: {\n              delimiter: {\n                pattern: /^@\\[|\\]$/,\n                alias: \"punctuation\"\n              },\n              attribute: {\n                pattern: /^(\\s*)\\w+/,\n                lookbehind: true,\n                alias: \"class-name\"\n              },\n              args: {\n                pattern: /\\S(?:[\\s\\S]*\\S)?/,\n                inside: Prism2.languages.crystal\n              }\n            }\n          },\n          expansion: {\n            pattern: /\\{(?:\\{.*?\\}|%.*?%)\\}/,\n            inside: {\n              content: {\n                pattern: /^(\\{.)[\\s\\S]+(?=.\\}$)/,\n                lookbehind: true,\n                inside: Prism2.languages.crystal\n              },\n              delimiter: {\n                pattern: /^\\{[\\{%]|[\\}%]\\}$/,\n                alias: \"operator\"\n              }\n            }\n          },\n          char: {\n            pattern: /'(?:[^\\\\\\r\\n]{1,2}|\\\\(?:.|u(?:[A-Fa-f0-9]{1,4}|\\{[A-Fa-f0-9]{1,6}\\})))'/,\n            greedy: true\n          }\n        });\n      })(Prism);\n    }\n  }\n});\n\nexport {\n  require_crystal\n};\n//# sourceMappingURL=chunk-OLBN5AMM.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00014283403288573027
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-OLBN5AMM.js (200) â€” 2024-07-28T11:41:34.798Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-OLBN5AMM.js"
        }
      ]
    }
  ]
}