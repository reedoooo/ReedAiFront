{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-TGAKDUGG.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"185b-OpWMxWK656LNq0GhmYom7WPVZas\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/puppet.js\nvar require_puppet = __commonJS({\n  \"node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/puppet.js\"(exports, module) {\n    function puppet(hljs) {\n      const PUPPET_KEYWORDS = {\n        keyword: (\n          /* language keywords */\n          \"and case default else elsif false if in import enherits node or true undef unless main settings $string \"\n        ),\n        literal: (\n          /* metaparameters */\n          \"alias audit before loglevel noop require subscribe tag owner ensure group mode name|0 changes context force incl lens load_path onlyif provider returns root show_diff type_check en_address ip_address realname command environment hour monute month monthday special target weekday creates cwd ogoutput refresh refreshonly tries try_sleep umask backup checksum content ctime force ignore links mtime purge recurse recurselimit replace selinux_ignore_defaults selrange selrole seltype seluser source souirce_permissions sourceselect validate_cmd validate_replacement allowdupe attribute_membership auth_membership forcelocal gid ia_load_module members system host_aliases ip allowed_trunk_vlans description device_url duplex encapsulation etherchannel native_vlan speed principals allow_root auth_class auth_type authenticate_user k_of_n mechanisms rule session_owner shared options device fstype enable hasrestart directory present absent link atboot blockdevice device dump pass remounts poller_tag use message withpath adminfile allow_virtual allowcdrom category configfiles flavor install_options instance package_settings platform responsefile status uninstall_options vendor unless_system_user unless_uid binary control flags hasstatus manifest pattern restart running start stop allowdupe auths expiry gid groups home iterations key_membership keys managehome membership password password_max_age password_min_age profile_membership profiles project purge_ssh_keys role_membership roles salt shell uid baseurl cost descr enabled enablegroups exclude failovermethod gpgcheck gpgkey http_caching include includepkgs keepalive metadata_expire metalink mirrorlist priority protect proxy proxy_password proxy_username repo_gpgcheck s3_enabled skip_if_unavailable sslcacert sslclientcert sslclientkey sslverify mounted\"\n        ),\n        built_in: (\n          /* core facts */\n          \"architecture augeasversion blockdevices boardmanufacturer boardproductname boardserialnumber cfkey dhcp_servers domain ec2_ ec2_userdata facterversion filesystems ldom fqdn gid hardwareisa hardwaremodel hostname id|0 interfaces ipaddress ipaddress_ ipaddress6 ipaddress6_ iphostnumber is_virtual kernel kernelmajversion kernelrelease kernelversion kernelrelease kernelversion lsbdistcodename lsbdistdescription lsbdistid lsbdistrelease lsbmajdistrelease lsbminordistrelease lsbrelease macaddress macaddress_ macosx_buildversion macosx_productname macosx_productversion macosx_productverson_major macosx_productversion_minor manufacturer memoryfree memorysize netmask metmask_ network_ operatingsystem operatingsystemmajrelease operatingsystemrelease osfamily partitions path physicalprocessorcount processor processorcount productname ps puppetversion rubysitedir rubyversion selinux selinux_config_mode selinux_config_policy selinux_current_mode selinux_current_mode selinux_enforced selinux_policyversion serialnumber sp_ sshdsakey sshecdsakey sshrsakey swapencrypted swapfree swapsize timezone type uniqueid uptime uptime_days uptime_hours uptime_seconds uuid virtual vlans xendomains zfs_version zonenae zones zpool_version\"\n        )\n      };\n      const COMMENT = hljs.COMMENT(\"#\", \"$\");\n      const IDENT_RE = \"([A-Za-z_]|::)(\\\\w|::)*\";\n      const TITLE = hljs.inherit(hljs.TITLE_MODE, {\n        begin: IDENT_RE\n      });\n      const VARIABLE = {\n        className: \"variable\",\n        begin: \"\\\\$\" + IDENT_RE\n      };\n      const STRING = {\n        className: \"string\",\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          VARIABLE\n        ],\n        variants: [\n          {\n            begin: /'/,\n            end: /'/\n          },\n          {\n            begin: /\"/,\n            end: /\"/\n          }\n        ]\n      };\n      return {\n        name: \"Puppet\",\n        aliases: [\"pp\"],\n        contains: [\n          COMMENT,\n          VARIABLE,\n          STRING,\n          {\n            beginKeywords: \"class\",\n            end: \"\\\\{|;\",\n            illegal: /=/,\n            contains: [\n              TITLE,\n              COMMENT\n            ]\n          },\n          {\n            beginKeywords: \"define\",\n            end: /\\{/,\n            contains: [\n              {\n                className: \"section\",\n                begin: hljs.IDENT_RE,\n                endsParent: true\n              }\n            ]\n          },\n          {\n            begin: hljs.IDENT_RE + \"\\\\s+\\\\{\",\n            returnBegin: true,\n            end: /\\S/,\n            contains: [\n              {\n                className: \"keyword\",\n                begin: hljs.IDENT_RE\n              },\n              {\n                begin: /\\{/,\n                end: /\\}/,\n                keywords: PUPPET_KEYWORDS,\n                relevance: 0,\n                contains: [\n                  STRING,\n                  COMMENT,\n                  {\n                    begin: \"[a-zA-Z_]+\\\\s*=>\",\n                    returnBegin: true,\n                    end: \"=>\",\n                    contains: [\n                      {\n                        className: \"attr\",\n                        begin: hljs.IDENT_RE\n                      }\n                    ]\n                  },\n                  {\n                    className: \"number\",\n                    begin: \"(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b\",\n                    relevance: 0\n                  },\n                  VARIABLE\n                ]\n              }\n            ],\n            relevance: 0\n          }\n        ]\n      };\n    }\n    module.exports = puppet;\n  }\n});\n\nexport {\n  require_puppet\n};\n//# sourceMappingURL=chunk-TGAKDUGG.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.001351166982203722
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-TGAKDUGG.js (200) â€” 2024-07-28T11:41:36.888Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-TGAKDUGG.js"
        }
      ]
    }
  ]
}