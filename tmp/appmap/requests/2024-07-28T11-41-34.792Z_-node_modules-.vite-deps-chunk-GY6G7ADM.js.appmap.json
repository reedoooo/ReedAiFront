{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-GY6G7ADM.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"1a62-8rVKBE6OvdqGR3mvHVfbGM5sJ4c\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/ruby.js\nvar require_ruby = __commonJS({\n  \"node_modules/refractor/lang/ruby.js\"(exports, module) {\n    module.exports = ruby;\n    ruby.displayName = \"ruby\";\n    ruby.aliases = [\"rb\"];\n    function ruby(Prism) {\n      ;\n      (function(Prism2) {\n        Prism2.languages.ruby = Prism2.languages.extend(\"clike\", {\n          comment: {\n            pattern: /#.*|^=begin\\s[\\s\\S]*?^=end/m,\n            greedy: true\n          },\n          \"class-name\": {\n            pattern: /(\\b(?:class|module)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+|\\b[A-Z_]\\w*(?=\\s*\\.\\s*new\\b)/,\n            lookbehind: true,\n            inside: {\n              punctuation: /[.\\\\]/\n            }\n          },\n          keyword: /\\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\\b/,\n          operator: /\\.{2,3}|&\\.|===|<?=>|[!=]?~|(?:&&|\\|\\||<<|>>|\\*\\*|[+\\-*/%<>!^&|=])=?|[?:]/,\n          punctuation: /[(){}[\\].,;]/\n        });\n        Prism2.languages.insertBefore(\"ruby\", \"operator\", {\n          \"double-colon\": {\n            pattern: /::/,\n            alias: \"punctuation\"\n          }\n        });\n        var interpolation = {\n          pattern: /((?:^|[^\\\\])(?:\\\\{2})*)#\\{(?:[^{}]|\\{[^{}]*\\})*\\}/,\n          lookbehind: true,\n          inside: {\n            content: {\n              pattern: /^(#\\{)[\\s\\S]+(?=\\}$)/,\n              lookbehind: true,\n              inside: Prism2.languages.ruby\n            },\n            delimiter: {\n              pattern: /^#\\{|\\}$/,\n              alias: \"punctuation\"\n            }\n          }\n        };\n        delete Prism2.languages.ruby.function;\n        var percentExpression = \"(?:\" + [\n          /([^a-zA-Z0-9\\s{(\\[<=])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n          /\\((?:[^()\\\\]|\\\\[\\s\\S]|\\((?:[^()\\\\]|\\\\[\\s\\S])*\\))*\\)/.source,\n          /\\{(?:[^{}\\\\]|\\\\[\\s\\S]|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\})*\\}/.source,\n          /\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S]|\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\])*\\]/.source,\n          /<(?:[^<>\\\\]|\\\\[\\s\\S]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)*>/.source\n        ].join(\"|\") + \")\";\n        var symbolName = /(?:\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|(?:\\b[a-zA-Z_]\\w*|[^\\s\\0-\\x7F]+)[?!]?|\\$.)/.source;\n        Prism2.languages.insertBefore(\"ruby\", \"keyword\", {\n          \"regex-literal\": [\n            {\n              pattern: RegExp(\n                /%r/.source + percentExpression + /[egimnosux]{0,6}/.source\n              ),\n              greedy: true,\n              inside: {\n                interpolation,\n                regex: /[\\s\\S]+/\n              }\n            },\n            {\n              pattern: /(^|[^/])\\/(?!\\/)(?:\\[[^\\r\\n\\]]+\\]|\\\\.|[^[/\\\\\\r\\n])+\\/[egimnosux]{0,6}(?=\\s*(?:$|[\\r\\n,.;})#]))/,\n              lookbehind: true,\n              greedy: true,\n              inside: {\n                interpolation,\n                regex: /[\\s\\S]+/\n              }\n            }\n          ],\n          variable: /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n          symbol: [\n            {\n              pattern: RegExp(/(^|[^:]):/.source + symbolName),\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              pattern: RegExp(\n                /([\\r\\n{(,][ \\t]*)/.source + symbolName + /(?=:(?!:))/.source\n              ),\n              lookbehind: true,\n              greedy: true\n            }\n          ],\n          \"method-definition\": {\n            pattern: /(\\bdef\\s+)\\w+(?:\\s*\\.\\s*\\w+)?/,\n            lookbehind: true,\n            inside: {\n              function: /\\b\\w+$/,\n              keyword: /^self\\b/,\n              \"class-name\": /^\\w+/,\n              punctuation: /\\./\n            }\n          }\n        });\n        Prism2.languages.insertBefore(\"ruby\", \"string\", {\n          \"string-literal\": [\n            {\n              pattern: RegExp(/%[qQiIwWs]?/.source + percentExpression),\n              greedy: true,\n              inside: {\n                interpolation,\n                string: /[\\s\\S]+/\n              }\n            },\n            {\n              pattern: /(\"|')(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\#\\r\\n])*\\1/,\n              greedy: true,\n              inside: {\n                interpolation,\n                string: /[\\s\\S]+/\n              }\n            },\n            {\n              pattern: /<<[-~]?([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n              alias: \"heredoc-string\",\n              greedy: true,\n              inside: {\n                delimiter: {\n                  pattern: /^<<[-~]?[a-z_]\\w*|\\b[a-z_]\\w*$/i,\n                  inside: {\n                    symbol: /\\b\\w+/,\n                    punctuation: /^<<[-~]?/\n                  }\n                },\n                interpolation,\n                string: /[\\s\\S]+/\n              }\n            },\n            {\n              pattern: /<<[-~]?'([a-z_]\\w*)'[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n              alias: \"heredoc-string\",\n              greedy: true,\n              inside: {\n                delimiter: {\n                  pattern: /^<<[-~]?'[a-z_]\\w*'|\\b[a-z_]\\w*$/i,\n                  inside: {\n                    symbol: /\\b\\w+/,\n                    punctuation: /^<<[-~]?'|'$/\n                  }\n                },\n                string: /[\\s\\S]+/\n              }\n            }\n          ],\n          \"command-literal\": [\n            {\n              pattern: RegExp(/%x/.source + percentExpression),\n              greedy: true,\n              inside: {\n                interpolation,\n                command: {\n                  pattern: /[\\s\\S]+/,\n                  alias: \"string\"\n                }\n              }\n            },\n            {\n              pattern: /`(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|[^\\\\`#\\r\\n])*`/,\n              greedy: true,\n              inside: {\n                interpolation,\n                command: {\n                  pattern: /[\\s\\S]+/,\n                  alias: \"string\"\n                }\n              }\n            }\n          ]\n        });\n        delete Prism2.languages.ruby.string;\n        Prism2.languages.insertBefore(\"ruby\", \"number\", {\n          builtin: /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\\b/,\n          constant: /\\b[A-Z][A-Z0-9_]*(?:[?!]|\\b)/\n        });\n        Prism2.languages.rb = Prism2.languages.ruby;\n      })(Prism);\n    }\n  }\n});\n\nexport {\n  require_ruby\n};\n//# sourceMappingURL=chunk-GY6G7ADM.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00017058290541172028
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-GY6G7ADM.js (200) â€” 2024-07-28T11:41:34.792Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-GY6G7ADM.js"
        }
      ]
    }
  ]
}