{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-KRQ2V7S2.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"1115-cZ/Ky07vB5THv3qTtKpUgqczolY\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/livescript.js\nvar require_livescript = __commonJS({\n  \"node_modules/refractor/lang/livescript.js\"(exports, module) {\n    module.exports = livescript;\n    livescript.displayName = \"livescript\";\n    livescript.aliases = [];\n    function livescript(Prism) {\n      Prism.languages.livescript = {\n        comment: [\n          {\n            pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n            lookbehind: true\n          },\n          {\n            pattern: /(^|[^\\\\])#.*/,\n            lookbehind: true\n          }\n        ],\n        \"interpolated-string\": {\n          /* Look-behind and look-ahead prevents wrong behavior of the greedy pattern\n           * forcing it to match \"\"\"-quoted string when it would otherwise match \"-quoted first. */\n          pattern: /(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,\n          lookbehind: true,\n          greedy: true,\n          inside: {\n            variable: {\n              pattern: /(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,\n              lookbehind: true\n            },\n            interpolation: {\n              pattern: /(^|[^\\\\])#\\{[^}]+\\}/m,\n              lookbehind: true,\n              inside: {\n                \"interpolation-punctuation\": {\n                  pattern: /^#\\{|\\}$/,\n                  alias: \"variable\"\n                }\n                // See rest below\n              }\n            },\n            string: /[\\s\\S]+/\n          }\n        },\n        string: [\n          {\n            pattern: /('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n            greedy: true\n          },\n          {\n            pattern: /<\\[[\\s\\S]*?\\]>/,\n            greedy: true\n          },\n          /\\\\[^\\s,;\\])}]+/\n        ],\n        regex: [\n          {\n            pattern: /\\/\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|(?!\\/\\/)[^\\\\\\[])+\\/\\/[gimyu]{0,5}/,\n            greedy: true,\n            inside: {\n              comment: {\n                pattern: /(^|[^\\\\])#.*/,\n                lookbehind: true\n              }\n            }\n          },\n          {\n            pattern: /\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/[gimyu]{0,5}/,\n            greedy: true\n          }\n        ],\n        keyword: {\n          pattern: /(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,\n          lookbehind: true\n        },\n        \"keyword-operator\": {\n          pattern: /(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?: not|nt)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,\n          lookbehind: true,\n          alias: \"operator\"\n        },\n        boolean: {\n          pattern: /(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,\n          lookbehind: true\n        },\n        argument: {\n          // Don't match .&. nor &&\n          pattern: /(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,\n          lookbehind: true,\n          alias: \"variable\"\n        },\n        number: /\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,\n        identifier: /[a-z_](?:-?[a-z]|[\\d_])*/i,\n        operator: [\n          // Spaced .\n          {\n            pattern: /( )\\.(?= )/,\n            lookbehind: true\n          },\n          // Full list, in order:\n          // .= .~ .. ...\n          // .&. .^. .<<. .>>. .>>>.\n          // := :: ::=\n          // &&\n          // || |>\n          // < << <<< <<<<\n          // <- <-- <-! <--!\n          // <~ <~~ <~! <~~!\n          // <| <= <?\n          // > >> >= >?\n          // - -- -> -->\n          // + ++\n          // @ @@\n          // % %%\n          // * **\n          // ! != !~=\n          // !~> !~~>\n          // !-> !-->\n          // ~ ~> ~~> ~=\n          // = ==\n          // ^ ^^\n          // / ?\n          /\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/\n        ],\n        punctuation: /[(){}\\[\\]|.,:;`]/\n      };\n      Prism.languages.livescript[\"interpolated-string\"].inside[\"interpolation\"].inside.rest = Prism.languages.livescript;\n    }\n  }\n});\n\nexport {\n  require_livescript\n};\n//# sourceMappingURL=chunk-KRQ2V7S2.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00012916605919599533
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-KRQ2V7S2.js (200) â€” 2024-07-28T11:41:34.641Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-KRQ2V7S2.js"
        }
      ]
    }
  ]
}