{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-Y23GTMTE.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"db9-FKrPpq24As/960Hb+PAxmhwj09E\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/v.js\nvar require_v = __commonJS({\n  \"node_modules/refractor/lang/v.js\"(exports, module) {\n    module.exports = v;\n    v.displayName = \"v\";\n    v.aliases = [];\n    function v(Prism) {\n      ;\n      (function(Prism2) {\n        var interpolationExpr = {\n          pattern: /[\\s\\S]+/,\n          inside: null\n        };\n        Prism2.languages.v = Prism2.languages.extend(\"clike\", {\n          string: {\n            pattern: /r?([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            alias: \"quoted-string\",\n            greedy: true,\n            inside: {\n              interpolation: {\n                pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[^{}]*\\}|\\w+(?:\\.\\w+(?:\\([^\\(\\)]*\\))?|\\[[^\\[\\]]+\\])*)/,\n                lookbehind: true,\n                inside: {\n                  \"interpolation-variable\": {\n                    pattern: /^\\$\\w[\\s\\S]*$/,\n                    alias: \"variable\"\n                  },\n                  \"interpolation-punctuation\": {\n                    pattern: /^\\$\\{|\\}$/,\n                    alias: \"punctuation\"\n                  },\n                  \"interpolation-expression\": interpolationExpr\n                }\n              }\n            }\n          },\n          \"class-name\": {\n            pattern: /(\\b(?:enum|interface|struct|type)\\s+)(?:C\\.)?\\w+/,\n            lookbehind: true\n          },\n          keyword: /(?:\\b(?:__global|as|asm|assert|atomic|break|chan|const|continue|defer|else|embed|enum|fn|for|go(?:to)?|if|import|in|interface|is|lock|match|module|mut|none|or|pub|return|rlock|select|shared|sizeof|static|struct|type(?:of)?|union|unsafe)|\\$(?:else|for|if)|#(?:flag|include))\\b/,\n          number: /\\b(?:0x[a-f\\d]+(?:_[a-f\\d]+)*|0b[01]+(?:_[01]+)*|0o[0-7]+(?:_[0-7]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?)\\b/i,\n          operator: /~|\\?|[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\.?/,\n          builtin: /\\b(?:any(?:_float|_int)?|bool|byte(?:ptr)?|charptr|f(?:32|64)|i(?:8|16|64|128|nt)|rune|size_t|string|u(?:16|32|64|128)|voidptr)\\b/\n        });\n        interpolationExpr.inside = Prism2.languages.v;\n        Prism2.languages.insertBefore(\"v\", \"string\", {\n          char: {\n            pattern: /`(?:\\\\`|\\\\?[^`]{1,2})`/,\n            // using {1,2} instead of `u` flag for compatibility\n            alias: \"rune\"\n          }\n        });\n        Prism2.languages.insertBefore(\"v\", \"operator\", {\n          attribute: {\n            pattern: /(^[\\t ]*)\\[(?:deprecated|direct_array_access|flag|inline|live|ref_only|typedef|unsafe_fn|windows_stdcall)\\]/m,\n            lookbehind: true,\n            alias: \"annotation\",\n            inside: {\n              punctuation: /[\\[\\]]/,\n              keyword: /\\w+/\n            }\n          },\n          generic: {\n            pattern: /<\\w+>(?=\\s*[\\)\\{])/,\n            inside: {\n              punctuation: /[<>]/,\n              \"class-name\": /\\w+/\n            }\n          }\n        });\n        Prism2.languages.insertBefore(\"v\", \"function\", {\n          \"generic-function\": {\n            // e.g. foo<T>( ...\n            pattern: /\\b\\w+\\s*<\\w+>(?=\\()/,\n            inside: {\n              function: /^\\w+/,\n              generic: {\n                pattern: /<\\w+>/,\n                inside: Prism2.languages.v.generic.inside\n              }\n            }\n          }\n        });\n      })(Prism);\n    }\n  }\n});\n\nexport {\n  require_v\n};\n//# sourceMappingURL=chunk-Y23GTMTE.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.0005159160355105996
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-Y23GTMTE.js (200) â€” 2024-07-28T11:41:34.107Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-Y23GTMTE.js"
        }
      ]
    }
  ]
}