{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/@tiptap_react.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/src/hooks/useTipTapEditor.jsx",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'a736498f'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"15b6c-wjK2hV8kwUNWwb0B6MVi7I6cw7M\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  CommandManager,\n  Editor,\n  Extension,\n  InputRule,\n  Mark2 as Mark,\n  Node,\n  NodePos,\n  NodeView,\n  PasteRule,\n  Plugin,\n  PluginKey,\n  Tracker,\n  callOrReturn,\n  combineTransactionSteps,\n  createChainableState,\n  createDocument,\n  createNodeFromContent,\n  createStyleTag,\n  defaultBlockAt,\n  deleteProps,\n  elementFromString,\n  escapeForRegEx,\n  findChildren,\n  findChildrenInRange,\n  findDuplicates,\n  findParentNode,\n  findParentNodeClosestToPos,\n  fromString,\n  generateHTML,\n  generateJSON,\n  generateText,\n  getAttributes,\n  getAttributesFromExtensions,\n  getChangedRanges,\n  getDebugJSON,\n  getExtensionField,\n  getHTMLFromFragment,\n  getMarkAttributes,\n  getMarkRange,\n  getMarkType,\n  getMarksBetween,\n  getNodeAtPosition,\n  getNodeAttributes,\n  getNodeType,\n  getRenderedAttributes,\n  getSchema,\n  getSchemaByResolvedExtensions,\n  getSchemaTypeByName,\n  getSchemaTypeNameByName,\n  getSplittedAttributes,\n  getText,\n  getTextBetween,\n  getTextContentFromNodes,\n  getTextSerializersFromSchema,\n  index,\n  injectExtensionAttributesToParseRule,\n  inputRulesPlugin,\n  isActive,\n  isAtEndOfNode,\n  isAtStartOfNode,\n  isEmptyObject,\n  isExtensionRulesEnabled,\n  isFunction,\n  isList,\n  isMacOS,\n  isMarkActive,\n  isNodeActive,\n  isNodeEmpty,\n  isNodeSelection,\n  isNumber,\n  isPlainObject,\n  isRegExp,\n  isString,\n  isTextSelection,\n  isiOS,\n  markInputRule,\n  markPasteRule,\n  mergeAttributes,\n  mergeDeep,\n  minMax,\n  nodeInputRule,\n  nodePasteRule,\n  objectIncludes,\n  pasteRulesPlugin,\n  posToDOMRect,\n  removeDuplicates,\n  resolveFocusPosition,\n  selectionToInsertionEnd,\n  splitExtensions,\n  textInputRule,\n  textPasteRule,\n  textblockTypeInputRule,\n  wrappingInputRule\n} from \"/node_modules/.vite/deps/chunk-3FZAEXWV.js?v=b39bb78e\";\nimport {\n  applyStyles_default,\n  createPopper\n} from \"/node_modules/.vite/deps/chunk-6F3VBANY.js?v=b39bb78e\";\nimport {\n  require_react_dom\n} from \"/node_modules/.vite/deps/chunk-W6L2VRDA.js?v=b39bb78e\";\nimport {\n  require_react\n} from \"/node_modules/.vite/deps/chunk-ZMLY2J2T.js?v=b39bb78e\";\nimport {\n  __toESM\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/tippy.js/dist/tippy.esm.js\nvar BOX_CLASS = \"tippy-box\";\nvar CONTENT_CLASS = \"tippy-content\";\nvar BACKDROP_CLASS = \"tippy-backdrop\";\nvar ARROW_CLASS = \"tippy-arrow\";\nvar SVG_ARROW_CLASS = \"tippy-svg-arrow\";\nvar TOUCH_OPTIONS = {\n  passive: true,\n  capture: true\n};\nvar TIPPY_DEFAULT_APPEND_TO = function TIPPY_DEFAULT_APPEND_TO2() {\n  return document.body;\n};\nfunction hasOwnProperty(obj, key) {\n  return {}.hasOwnProperty.call(obj, key);\n}\nfunction getValueAtIndexOrReturn(value, index2, defaultValue) {\n  if (Array.isArray(value)) {\n    var v = value[index2];\n    return v == null ? Array.isArray(defaultValue) ? defaultValue[index2] : defaultValue : v;\n  }\n  return value;\n}\nfunction isType(value, type) {\n  var str = {}.toString.call(value);\n  return str.indexOf(\"[object\") === 0 && str.indexOf(type + \"]\") > -1;\n}\nfunction invokeWithArgsOrReturn(value, args) {\n  return typeof value === \"function\" ? value.apply(void 0, args) : value;\n}\nfunction debounce(fn, ms) {\n  if (ms === 0) {\n    return fn;\n  }\n  var timeout;\n  return function(arg) {\n    clearTimeout(timeout);\n    timeout = setTimeout(function() {\n      fn(arg);\n    }, ms);\n  };\n}\nfunction removeProperties(obj, keys) {\n  var clone = Object.assign({}, obj);\n  keys.forEach(function(key) {\n    delete clone[key];\n  });\n  return clone;\n}\nfunction splitBySpaces(value) {\n  return value.split(/\\s+/).filter(Boolean);\n}\nfunction normalizeToArray(value) {\n  return [].concat(value);\n}\nfunction pushIfUnique(arr, value) {\n  if (arr.indexOf(value) === -1) {\n    arr.push(value);\n  }\n}\nfunction unique(arr) {\n  return arr.filter(function(item, index2) {\n    return arr.indexOf(item) === index2;\n  });\n}\nfunction getBasePlacement(placement) {\n  return placement.split(\"-\")[0];\n}\nfunction arrayFrom(value) {\n  return [].slice.call(value);\n}\nfunction removeUndefinedProps(obj) {\n  return Object.keys(obj).reduce(function(acc, key) {\n    if (obj[key] !== void 0) {\n      acc[key] = obj[key];\n    }\n    return acc;\n  }, {});\n}\nfunction div() {\n  return document.createElement(\"div\");\n}\nfunction isElement(value) {\n  return [\"Element\", \"Fragment\"].some(function(type) {\n    return isType(value, type);\n  });\n}\nfunction isNodeList(value) {\n  return isType(value, \"NodeList\");\n}\nfunction isMouseEvent(value) {\n  return isType(value, \"MouseEvent\");\n}\nfunction isReferenceElement(value) {\n  return !!(value && value._tippy && value._tippy.reference === value);\n}\nfunction getArrayOfElements(value) {\n  if (isElement(value)) {\n    return [value];\n  }\n  if (isNodeList(value)) {\n    return arrayFrom(value);\n  }\n  if (Array.isArray(value)) {\n    return value;\n  }\n  return arrayFrom(document.querySelectorAll(value));\n}\nfunction setTransitionDuration(els, value) {\n  els.forEach(function(el) {\n    if (el) {\n      el.style.transitionDuration = value + \"ms\";\n    }\n  });\n}\nfunction setVisibilityState(els, state) {\n  els.forEach(function(el) {\n    if (el) {\n      el.setAttribute(\"data-state\", state);\n    }\n  });\n}\nfunction getOwnerDocument(elementOrElements) {\n  var _element$ownerDocumen;\n  var _normalizeToArray = normalizeToArray(elementOrElements), element = _normalizeToArray[0];\n  return element != null && (_element$ownerDocumen = element.ownerDocument) != null && _element$ownerDocumen.body ? element.ownerDocument : document;\n}\nfunction isCursorOutsideInteractiveBorder(popperTreeData, event) {\n  var clientX = event.clientX, clientY = event.clientY;\n  return popperTreeData.every(function(_ref) {\n    var popperRect = _ref.popperRect, popperState = _ref.popperState, props = _ref.props;\n    var interactiveBorder = props.interactiveBorder;\n    var basePlacement = getBasePlacement(popperState.placement);\n    var offsetData = popperState.modifiersData.offset;\n    if (!offsetData) {\n      return true;\n    }\n    var topDistance = basePlacement === \"bottom\" ? offsetData.top.y : 0;\n    var bottomDistance = basePlacement === \"top\" ? offsetData.bottom.y : 0;\n    var leftDistance = basePlacement === \"right\" ? offsetData.left.x : 0;\n    var rightDistance = basePlacement === \"left\" ? offsetData.right.x : 0;\n    var exceedsTop = popperRect.top - clientY + topDistance > interactiveBorder;\n    var exceedsBottom = clientY - popperRect.bottom - bottomDistance > interactiveBorder;\n    var exceedsLeft = popperRect.left - clientX + leftDistance > interactiveBorder;\n    var exceedsRight = clientX - popperRect.right - rightDistance > interactiveBorder;\n    return exceedsTop || exceedsBottom || exceedsLeft || exceedsRight;\n  });\n}\nfunction updateTransitionEndListener(box, action, listener) {\n  var method = action + \"EventListener\";\n  [\"transitionend\", \"webkitTransitionEnd\"].forEach(function(event) {\n    box[method](event, listener);\n  });\n}\nfunction actualContains(parent, child) {\n  var target = child;\n  while (target) {\n    var _target$getRootNode;\n    if (parent.contains(target)) {\n      return true;\n    }\n    target = target.getRootNode == null ? void 0 : (_target$getRootNode = target.getRootNode()) == null ? void 0 : _target$getRootNode.host;\n  }\n  return false;\n}\nvar currentInput = {\n  isTouch: false\n};\nvar lastMouseMoveTime = 0;\nfunction onDocumentTouchStart() {\n  if (currentInput.isTouch) {\n    return;\n  }\n  currentInput.isTouch = true;\n  if (window.performance) {\n    document.addEventListener(\"mousemove\", onDocumentMouseMove);\n  }\n}\nfunction onDocumentMouseMove() {\n  var now = performance.now();\n  if (now - lastMouseMoveTime < 20) {\n    currentInput.isTouch = false;\n    document.removeEventListener(\"mousemove\", onDocumentMouseMove);\n  }\n  lastMouseMoveTime = now;\n}\nfunction onWindowBlur() {\n  var activeElement = document.activeElement;\n  if (isReferenceElement(activeElement)) {\n    var instance = activeElement._tippy;\n    if (activeElement.blur && !instance.state.isVisible) {\n      activeElement.blur();\n    }\n  }\n}\nfunction bindGlobalEventListeners() {\n  document.addEventListener(\"touchstart\", onDocumentTouchStart, TOUCH_OPTIONS);\n  window.addEventListener(\"blur\", onWindowBlur);\n}\nvar isBrowser = typeof window !== \"undefined\" && typeof document !== \"undefined\";\nvar isIE11 = isBrowser ? (\n  // @ts-ignore\n  !!window.msCrypto\n) : false;\nfunction createMemoryLeakWarning(method) {\n  var txt = method === \"destroy\" ? \"n already-\" : \" \";\n  return [method + \"() was called on a\" + txt + \"destroyed instance. This is a no-op but\", \"indicates a potential memory leak.\"].join(\" \");\n}\nfunction clean(value) {\n  var spacesAndTabs = /[ \\t]{2,}/g;\n  var lineStartWithSpaces = /^[ \\t]*/gm;\n  return value.replace(spacesAndTabs, \" \").replace(lineStartWithSpaces, \"\").trim();\n}\nfunction getDevMessage(message) {\n  return clean(\"\\n  %ctippy.js\\n\\n  %c\" + clean(message) + \"\\n\\n  %c👷‍ This is a development-only message. It will be removed in production.\\n  \");\n}\nfunction getFormattedMessage(message) {\n  return [\n    getDevMessage(message),\n    // title\n    \"color: #00C584; font-size: 1.3em; font-weight: bold;\",\n    // message\n    \"line-height: 1.5\",\n    // footer\n    \"color: #a6a095;\"\n  ];\n}\nvar visitedMessages;\nif (true) {\n  resetVisitedMessages();\n}\nfunction resetVisitedMessages() {\n  visitedMessages = /* @__PURE__ */ new Set();\n}\nfunction warnWhen(condition, message) {\n  if (condition && !visitedMessages.has(message)) {\n    var _console;\n    visitedMessages.add(message);\n    (_console = console).warn.apply(_console, getFormattedMessage(message));\n  }\n}\nfunction errorWhen(condition, message) {\n  if (condition && !visitedMessages.has(message)) {\n    var _console2;\n    visitedMessages.add(message);\n    (_console2 = console).error.apply(_console2, getFormattedMessage(message));\n  }\n}\nfunction validateTargets(targets) {\n  var didPassFalsyValue = !targets;\n  var didPassPlainObject = Object.prototype.toString.call(targets) === \"[object Object]\" && !targets.addEventListener;\n  errorWhen(didPassFalsyValue, [\"tippy() was passed\", \"`\" + String(targets) + \"`\", \"as ... (78936 more characters)"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.002517709042876959
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/@tiptap_react.js (200) — 2024-07-28T11:41:33.700Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/@tiptap_react.js"
        }
      ]
    }
  ]
}