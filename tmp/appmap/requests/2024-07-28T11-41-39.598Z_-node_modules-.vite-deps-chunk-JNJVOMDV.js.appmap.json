{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-JNJVOMDV.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"114e-irjKvy6pz2k/UTTrX8gumeUE1wk\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/hy.js\nvar require_hy = __commonJS({\n  \"node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/hy.js\"(exports, module) {\n    function hy(hljs) {\n      var SYMBOLSTART = \"a-zA-Z_\\\\-!.?+*=<>&#'\";\n      var SYMBOL_RE = \"[\" + SYMBOLSTART + \"][\" + SYMBOLSTART + \"0-9/;:]*\";\n      var keywords = {\n        $pattern: SYMBOL_RE,\n        \"builtin-name\": (\n          // keywords\n          \"!= % %= & &= * ** **= *= *map + += , --build-class-- --import-- -= . / // //= /= < << <<= <= = > >= >> >>= @ @= ^ ^= abs accumulate all and any ap-compose ap-dotimes ap-each ap-each-while ap-filter ap-first ap-if ap-last ap-map ap-map-when ap-pipe ap-reduce ap-reject apply as-> ascii assert assoc bin break butlast callable calling-module-name car case cdr chain chr coll? combinations compile compress cond cons cons? continue count curry cut cycle dec def default-method defclass defmacro defmacro-alias defmacro/g! defmain defmethod defmulti defn defn-alias defnc defnr defreader defseq del delattr delete-route dict-comp dir disassemble dispatch-reader-macro distinct divmod do doto drop drop-last drop-while empty? end-sequence eval eval-and-compile eval-when-compile even? every? except exec filter first flatten float? fn fnc fnr for for* format fraction genexpr gensym get getattr global globals group-by hasattr hash hex id identity if if* if-not if-python2 import in inc input instance? integer integer-char? integer? interleave interpose is is-coll is-cons is-empty is-even is-every is-float is-instance is-integer is-integer-char is-iterable is-iterator is-keyword is-neg is-none is-not is-numeric is-odd is-pos is-string is-symbol is-zero isinstance islice issubclass iter iterable? iterate iterator? keyword keyword? lambda last len let lif lif-not list* list-comp locals loop macro-error macroexpand macroexpand-1 macroexpand-all map max merge-with method-decorator min multi-decorator multicombinations name neg? next none? nonlocal not not-in not? nth numeric? oct odd? open or ord partition permutations pos? post-route postwalk pow prewalk print product profile/calls profile/cpu put-route quasiquote quote raise range read read-str recursive-replace reduce remove repeat repeatedly repr require rest round route route-with-methods rwm second seq set-comp setattr setv some sorted string string? sum switch symbol? take take-nth take-while tee try unless unquote unquote-splicing vars walk when while with with* with-decorator with-gensyms xi xor yield yield-from zero? zip zip-longest | |= ~\"\n        )\n      };\n      var SIMPLE_NUMBER_RE = \"[-+]?\\\\d+(\\\\.\\\\d+)?\";\n      var SYMBOL = {\n        begin: SYMBOL_RE,\n        relevance: 0\n      };\n      var NUMBER = {\n        className: \"number\",\n        begin: SIMPLE_NUMBER_RE,\n        relevance: 0\n      };\n      var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null });\n      var COMMENT = hljs.COMMENT(\n        \";\",\n        \"$\",\n        {\n          relevance: 0\n        }\n      );\n      var LITERAL = {\n        className: \"literal\",\n        begin: /\\b([Tt]rue|[Ff]alse|nil|None)\\b/\n      };\n      var COLLECTION = {\n        begin: \"[\\\\[\\\\{]\",\n        end: \"[\\\\]\\\\}]\"\n      };\n      var HINT = {\n        className: \"comment\",\n        begin: \"\\\\^\" + SYMBOL_RE\n      };\n      var HINT_COL = hljs.COMMENT(\"\\\\^\\\\{\", \"\\\\}\");\n      var KEY = {\n        className: \"symbol\",\n        begin: \"[:]{1,2}\" + SYMBOL_RE\n      };\n      var LIST = {\n        begin: \"\\\\(\",\n        end: \"\\\\)\"\n      };\n      var BODY = {\n        endsWithParent: true,\n        relevance: 0\n      };\n      var NAME = {\n        className: \"name\",\n        relevance: 0,\n        keywords,\n        begin: SYMBOL_RE,\n        starts: BODY\n      };\n      var DEFAULT_CONTAINS = [LIST, STRING, HINT, HINT_COL, COMMENT, KEY, COLLECTION, NUMBER, LITERAL, SYMBOL];\n      LIST.contains = [hljs.COMMENT(\"comment\", \"\"), NAME, BODY];\n      BODY.contains = DEFAULT_CONTAINS;\n      COLLECTION.contains = DEFAULT_CONTAINS;\n      return {\n        name: \"Hy\",\n        aliases: [\"hylang\"],\n        illegal: /\\S/,\n        contains: [hljs.SHEBANG(), LIST, STRING, HINT, HINT_COL, COMMENT, KEY, COLLECTION, NUMBER, LITERAL]\n      };\n    }\n    module.exports = hy;\n  }\n});\n\nexport {\n  require_hy\n};\n//# sourceMappingURL=chunk-JNJVOMDV.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.000199749949388206
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-JNJVOMDV.js (200) â€” 2024-07-28T11:41:39.598Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-JNJVOMDV.js"
        }
      ]
    }
  ]
}