{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-SJCMKXB6.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"10ea-nFfLoRxhSz73sdgJuBJtwMtaXsk\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/haskell.js\nvar require_haskell = __commonJS({\n  \"node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/haskell.js\"(exports, module) {\n    function haskell(hljs) {\n      const COMMENT = {\n        variants: [\n          hljs.COMMENT(\"--\", \"$\"),\n          hljs.COMMENT(\n            /\\{-/,\n            /-\\}/,\n            {\n              contains: [\"self\"]\n            }\n          )\n        ]\n      };\n      const PRAGMA = {\n        className: \"meta\",\n        begin: /\\{-#/,\n        end: /#-\\}/\n      };\n      const PREPROCESSOR = {\n        className: \"meta\",\n        begin: \"^#\",\n        end: \"$\"\n      };\n      const CONSTRUCTOR = {\n        className: \"type\",\n        begin: \"\\\\b[A-Z][\\\\w']*\",\n        // TODO: other constructors (build-in, infix).\n        relevance: 0\n      };\n      const LIST = {\n        begin: \"\\\\(\",\n        end: \"\\\\)\",\n        illegal: '\"',\n        contains: [\n          PRAGMA,\n          PREPROCESSOR,\n          {\n            className: \"type\",\n            begin: \"\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?\"\n          },\n          hljs.inherit(hljs.TITLE_MODE, {\n            begin: \"[_a-z][\\\\w']*\"\n          }),\n          COMMENT\n        ]\n      };\n      const RECORD = {\n        begin: /\\{/,\n        end: /\\}/,\n        contains: LIST.contains\n      };\n      return {\n        name: \"Haskell\",\n        aliases: [\"hs\"],\n        keywords: \"let in if then else case of where do module import hiding qualified type data newtype deriving class instance as default infix infixl infixr foreign export ccall stdcall cplusplus jvm dotnet safe unsafe family forall mdo proc rec\",\n        contains: [\n          // Top-level constructions.\n          {\n            beginKeywords: \"module\",\n            end: \"where\",\n            keywords: \"module where\",\n            contains: [\n              LIST,\n              COMMENT\n            ],\n            illegal: \"\\\\W\\\\.|;\"\n          },\n          {\n            begin: \"\\\\bimport\\\\b\",\n            end: \"$\",\n            keywords: \"import qualified as hiding\",\n            contains: [\n              LIST,\n              COMMENT\n            ],\n            illegal: \"\\\\W\\\\.|;\"\n          },\n          {\n            className: \"class\",\n            begin: \"^(\\\\s*)?(class|instance)\\\\b\",\n            end: \"where\",\n            keywords: \"class family instance where\",\n            contains: [\n              CONSTRUCTOR,\n              LIST,\n              COMMENT\n            ]\n          },\n          {\n            className: \"class\",\n            begin: \"\\\\b(data|(new)?type)\\\\b\",\n            end: \"$\",\n            keywords: \"data family type newtype deriving\",\n            contains: [\n              PRAGMA,\n              CONSTRUCTOR,\n              LIST,\n              RECORD,\n              COMMENT\n            ]\n          },\n          {\n            beginKeywords: \"default\",\n            end: \"$\",\n            contains: [\n              CONSTRUCTOR,\n              LIST,\n              COMMENT\n            ]\n          },\n          {\n            beginKeywords: \"infix infixl infixr\",\n            end: \"$\",\n            contains: [\n              hljs.C_NUMBER_MODE,\n              COMMENT\n            ]\n          },\n          {\n            begin: \"\\\\bforeign\\\\b\",\n            end: \"$\",\n            keywords: \"foreign import export ccall stdcall cplusplus jvm dotnet safe unsafe\",\n            contains: [\n              CONSTRUCTOR,\n              hljs.QUOTE_STRING_MODE,\n              COMMENT\n            ]\n          },\n          {\n            className: \"meta\",\n            begin: \"#!\\\\/usr\\\\/bin\\\\/env runhaskell\",\n            end: \"$\"\n          },\n          // \"Whitespaces\".\n          PRAGMA,\n          PREPROCESSOR,\n          // Literals and names.\n          // TODO: characters.\n          hljs.QUOTE_STRING_MODE,\n          hljs.C_NUMBER_MODE,\n          CONSTRUCTOR,\n          hljs.inherit(hljs.TITLE_MODE, {\n            begin: \"^[_a-z][\\\\w']*\"\n          }),\n          COMMENT,\n          {\n            // No markup, relevance booster\n            begin: \"->|<-\"\n          }\n        ]\n      };\n    }\n    module.exports = haskell;\n  }\n});\n\nexport {\n  require_haskell\n};\n//# sourceMappingURL=chunk-SJCMKXB6.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00020766700617969036
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-SJCMKXB6.js (200) â€” 2024-07-28T11:41:39.927Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-SJCMKXB6.js"
        }
      ]
    }
  ]
}