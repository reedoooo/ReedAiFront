{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-E7EXQB4J.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"a92-w9dbMV2ASHZVb4RciFi3mDoLkF0\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/dot.js\nvar require_dot = __commonJS({\n  \"node_modules/refractor/lang/dot.js\"(exports, module) {\n    module.exports = dot;\n    dot.displayName = \"dot\";\n    dot.aliases = [\"gv\"];\n    function dot(Prism) {\n      ;\n      (function(Prism2) {\n        var ID = \"(?:\" + [\n          // an identifier\n          /[a-zA-Z_\\x80-\\uFFFF][\\w\\x80-\\uFFFF]*/.source,\n          // a number\n          /-?(?:\\.\\d+|\\d+(?:\\.\\d*)?)/.source,\n          // a double-quoted string\n          /\"[^\"\\\\]*(?:\\\\[\\s\\S][^\"\\\\]*)*\"/.source,\n          // HTML-like string\n          /<(?:[^<>]|(?!<!--)<(?:[^<>\"']|\"[^\"]*\"|'[^']*')+>|<!--(?:[^-]|-(?!->))*-->)*>/.source\n        ].join(\"|\") + \")\";\n        var IDInside = {\n          markup: {\n            pattern: /(^<)[\\s\\S]+(?=>$)/,\n            lookbehind: true,\n            alias: [\"language-markup\", \"language-html\", \"language-xml\"],\n            inside: Prism2.languages.markup\n          }\n        };\n        function withID(source, flags) {\n          return RegExp(\n            source.replace(/<ID>/g, function() {\n              return ID;\n            }),\n            flags\n          );\n        }\n        Prism2.languages.dot = {\n          comment: {\n            pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|^#.*/m,\n            greedy: true\n          },\n          \"graph-name\": {\n            pattern: withID(\n              /(\\b(?:digraph|graph|subgraph)[ \\t\\r\\n]+)<ID>/.source,\n              \"i\"\n            ),\n            lookbehind: true,\n            greedy: true,\n            alias: \"class-name\",\n            inside: IDInside\n          },\n          \"attr-value\": {\n            pattern: withID(/(=[ \\t\\r\\n]*)<ID>/.source),\n            lookbehind: true,\n            greedy: true,\n            inside: IDInside\n          },\n          \"attr-name\": {\n            pattern: withID(/([\\[;, \\t\\r\\n])<ID>(?=[ \\t\\r\\n]*=)/.source),\n            lookbehind: true,\n            greedy: true,\n            inside: IDInside\n          },\n          keyword: /\\b(?:digraph|edge|graph|node|strict|subgraph)\\b/i,\n          \"compass-point\": {\n            pattern: /(:[ \\t\\r\\n]*)(?:[ewc_]|[ns][ew]?)(?![\\w\\x80-\\uFFFF])/,\n            lookbehind: true,\n            alias: \"builtin\"\n          },\n          node: {\n            pattern: withID(/(^|[^-.\\w\\x80-\\uFFFF\\\\])<ID>/.source),\n            lookbehind: true,\n            greedy: true,\n            inside: IDInside\n          },\n          operator: /[=:]|-[->]/,\n          punctuation: /[\\[\\]{};,]/\n        };\n        Prism2.languages.gv = Prism2.languages.dot;\n      })(Prism);\n    }\n  }\n});\n\nexport {\n  require_dot\n};\n//# sourceMappingURL=chunk-E7EXQB4J.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.0002395410556346178
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-E7EXQB4J.js (200) â€” 2024-07-28T11:41:34.776Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-E7EXQB4J.js"
        }
      ]
    }
  ]
}