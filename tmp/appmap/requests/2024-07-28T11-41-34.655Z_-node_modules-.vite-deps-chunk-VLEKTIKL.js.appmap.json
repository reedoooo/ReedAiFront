{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-VLEKTIKL.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"e77-R8I36MXCIMEOpwzXh+cUxkqm/0k\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  require_typescript\n} from \"/node_modules/.vite/deps/chunk-ZTSKPG3R.js?v=b39bb78e\";\nimport {\n  require_javadoclike\n} from \"/node_modules/.vite/deps/chunk-HGKWTGLG.js?v=b39bb78e\";\nimport {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/jsdoc.js\nvar require_jsdoc = __commonJS({\n  \"node_modules/refractor/lang/jsdoc.js\"(exports, module) {\n    var refractorJavadoclike = require_javadoclike();\n    var refractorTypescript = require_typescript();\n    module.exports = jsdoc;\n    jsdoc.displayName = \"jsdoc\";\n    jsdoc.aliases = [];\n    function jsdoc(Prism) {\n      Prism.register(refractorJavadoclike);\n      Prism.register(refractorTypescript);\n      (function(Prism2) {\n        var javascript = Prism2.languages.javascript;\n        var type = /\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})+\\}/.source;\n        var parameterPrefix = \"(@(?:arg|argument|param|property)\\\\s+(?:\" + type + \"\\\\s+)?)\";\n        Prism2.languages.jsdoc = Prism2.languages.extend(\"javadoclike\", {\n          parameter: {\n            // @param {string} foo - foo bar\n            pattern: RegExp(\n              parameterPrefix + /(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?=\\s|$)/.source\n            ),\n            lookbehind: true,\n            inside: {\n              punctuation: /\\./\n            }\n          }\n        });\n        Prism2.languages.insertBefore(\"jsdoc\", \"keyword\", {\n          \"optional-parameter\": {\n            // @param {string} [baz.foo=\"bar\"] foo bar\n            pattern: RegExp(\n              parameterPrefix + /\\[(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?:=[^[\\]]+)?\\](?=\\s|$)/.source\n            ),\n            lookbehind: true,\n            inside: {\n              parameter: {\n                pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n                lookbehind: true,\n                inside: {\n                  punctuation: /\\./\n                }\n              },\n              code: {\n                pattern: /(=)[\\s\\S]*(?=\\]$)/,\n                lookbehind: true,\n                inside: javascript,\n                alias: \"language-javascript\"\n              },\n              punctuation: /[=[\\]]/\n            }\n          },\n          \"class-name\": [\n            {\n              pattern: RegExp(\n                /(@(?:augments|class|extends|interface|memberof!?|template|this|typedef)\\s+(?:<TYPE>\\s+)?)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/.source.replace(\n                  /<TYPE>/g,\n                  function() {\n                    return type;\n                  }\n                )\n              ),\n              lookbehind: true,\n              inside: {\n                punctuation: /\\./\n              }\n            },\n            {\n              pattern: RegExp(\"(@[a-z]+\\\\s+)\" + type),\n              lookbehind: true,\n              inside: {\n                string: javascript.string,\n                number: javascript.number,\n                boolean: javascript.boolean,\n                keyword: Prism2.languages.typescript.keyword,\n                operator: /=>|\\.\\.\\.|[&|?:*]/,\n                punctuation: /[.,;=<>{}()[\\]]/\n              }\n            }\n          ],\n          example: {\n            pattern: /(@example\\s+(?!\\s))(?:[^@\\s]|\\s+(?!\\s))+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n            lookbehind: true,\n            inside: {\n              code: {\n                pattern: /^([\\t ]*(?:\\*\\s*)?)\\S.*$/m,\n                lookbehind: true,\n                inside: javascript,\n                alias: \"language-javascript\"\n              }\n            }\n          }\n        });\n        Prism2.languages.javadoclike.addSupport(\"javascript\", Prism2.languages.jsdoc);\n      })(Prism);\n    }\n  }\n});\n\nexport {\n  require_jsdoc\n};\n//# sourceMappingURL=chunk-VLEKTIKL.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00018900004215538502
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-VLEKTIKL.js (200) â€” 2024-07-28T11:41:34.655Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-VLEKTIKL.js"
        }
      ]
    }
  ]
}