{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-VJMYJG5C.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"ee2-nXB/cy/LRlO+/Zi4HrMDPhRqbBo\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/kotlin.js\nvar require_kotlin = __commonJS({\n  \"node_modules/refractor/lang/kotlin.js\"(exports, module) {\n    module.exports = kotlin;\n    kotlin.displayName = \"kotlin\";\n    kotlin.aliases = [\"kt\", \"kts\"];\n    function kotlin(Prism) {\n      ;\n      (function(Prism2) {\n        Prism2.languages.kotlin = Prism2.languages.extend(\"clike\", {\n          keyword: {\n            // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n            pattern: /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n            lookbehind: true\n          },\n          function: [\n            {\n              pattern: /(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,\n              greedy: true\n            },\n            {\n              pattern: /(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,\n              lookbehind: true,\n              greedy: true\n            }\n          ],\n          number: /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n          operator: /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n        });\n        delete Prism2.languages.kotlin[\"class-name\"];\n        var interpolationInside = {\n          \"interpolation-punctuation\": {\n            pattern: /^\\$\\{?|\\}$/,\n            alias: \"punctuation\"\n          },\n          expression: {\n            pattern: /[\\s\\S]+/,\n            inside: Prism2.languages.kotlin\n          }\n        };\n        Prism2.languages.insertBefore(\"kotlin\", \"string\", {\n          // https://kotlinlang.org/spec/expressions.html#string-interpolation-expressions\n          \"string-literal\": [\n            {\n              pattern: /\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/,\n              alias: \"multiline\",\n              inside: {\n                interpolation: {\n                  pattern: /\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n                  inside: interpolationInside\n                },\n                string: /[\\s\\S]+/\n              }\n            },\n            {\n              pattern: /\"(?:[^\"\\\\\\r\\n$]|\\\\.|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/,\n              alias: \"singleline\",\n              inside: {\n                interpolation: {\n                  pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n                  lookbehind: true,\n                  inside: interpolationInside\n                },\n                string: /[\\s\\S]+/\n              }\n            }\n          ],\n          char: {\n            // https://kotlinlang.org/spec/expressions.html#character-literals\n            pattern: /'(?:[^'\\\\\\r\\n]|\\\\(?:.|u[a-fA-F0-9]{0,4}))'/,\n            greedy: true\n          }\n        });\n        delete Prism2.languages.kotlin[\"string\"];\n        Prism2.languages.insertBefore(\"kotlin\", \"keyword\", {\n          annotation: {\n            pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n            alias: \"builtin\"\n          }\n        });\n        Prism2.languages.insertBefore(\"kotlin\", \"function\", {\n          label: {\n            pattern: /\\b\\w+@|@\\w+\\b/,\n            alias: \"symbol\"\n          }\n        });\n        Prism2.languages.kt = Prism2.languages.kotlin;\n        Prism2.languages.kts = Prism2.languages.kotlin;\n      })(Prism);\n    }\n  }\n});\n\nexport {\n  require_kotlin\n};\n//# sourceMappingURL=chunk-VJMYJG5C.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.0004331669770181179
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-VJMYJG5C.js (200) â€” 2024-07-28T11:41:34.640Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-VJMYJG5C.js"
        }
      ]
    }
  ]
}