{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-4X3RRP47.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"1fff-ke+qPJ0M4vTEWGMvSBc1W1xsjXk\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/kotlin.js\nvar require_kotlin = __commonJS({\n  \"node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/kotlin.js\"(exports, module) {\n    var decimalDigits = \"[0-9](_*[0-9])*\";\n    var frac = `\\\\.(${decimalDigits})`;\n    var hexDigits = \"[0-9a-fA-F](_*[0-9a-fA-F])*\";\n    var NUMERIC = {\n      className: \"number\",\n      variants: [\n        // DecimalFloatingPointLiteral\n        // including ExponentPart\n        { begin: `(\\\\b(${decimalDigits})((${frac})|\\\\.)?|(${frac}))[eE][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n        // excluding ExponentPart\n        { begin: `\\\\b(${decimalDigits})((${frac})[fFdD]?\\\\b|\\\\.([fFdD]\\\\b)?)` },\n        { begin: `(${frac})[fFdD]?\\\\b` },\n        { begin: `\\\\b(${decimalDigits})[fFdD]\\\\b` },\n        // HexadecimalFloatingPointLiteral\n        { begin: `\\\\b0[xX]((${hexDigits})\\\\.?|(${hexDigits})?\\\\.(${hexDigits}))[pP][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n        // DecimalIntegerLiteral\n        { begin: \"\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\b\" },\n        // HexIntegerLiteral\n        { begin: `\\\\b0[xX](${hexDigits})[lL]?\\\\b` },\n        // OctalIntegerLiteral\n        { begin: \"\\\\b0(_*[0-7])*[lL]?\\\\b\" },\n        // BinaryIntegerLiteral\n        { begin: \"\\\\b0[bB][01](_*[01])*[lL]?\\\\b\" }\n      ],\n      relevance: 0\n    };\n    function kotlin(hljs) {\n      const KEYWORDS = {\n        keyword: \"abstract as val var vararg get set class object open private protected public noinline crossinline dynamic final enum if else do while for when throw try catch finally import package is in fun override companion reified inline lateinit init interface annotation data sealed internal infix operator out by constructor super tailrec where const inner suspend typealias external expect actual\",\n        built_in: \"Byte Short Char Int Long Boolean Float Double Void Unit Nothing\",\n        literal: \"true false null\"\n      };\n      const KEYWORDS_WITH_LABEL = {\n        className: \"keyword\",\n        begin: /\\b(break|continue|return|this)\\b/,\n        starts: {\n          contains: [\n            {\n              className: \"symbol\",\n              begin: /@\\w+/\n            }\n          ]\n        }\n      };\n      const LABEL = {\n        className: \"symbol\",\n        begin: hljs.UNDERSCORE_IDENT_RE + \"@\"\n      };\n      const SUBST = {\n        className: \"subst\",\n        begin: /\\$\\{/,\n        end: /\\}/,\n        contains: [hljs.C_NUMBER_MODE]\n      };\n      const VARIABLE = {\n        className: \"variable\",\n        begin: \"\\\\$\" + hljs.UNDERSCORE_IDENT_RE\n      };\n      const STRING = {\n        className: \"string\",\n        variants: [\n          {\n            begin: '\"\"\"',\n            end: '\"\"\"(?=[^\"])',\n            contains: [\n              VARIABLE,\n              SUBST\n            ]\n          },\n          // Can't use built-in modes easily, as we want to use STRING in the meta\n          // context as 'meta-string' and there's no syntax to remove explicitly set\n          // classNames in built-in modes.\n          {\n            begin: \"'\",\n            end: \"'\",\n            illegal: /\\n/,\n            contains: [hljs.BACKSLASH_ESCAPE]\n          },\n          {\n            begin: '\"',\n            end: '\"',\n            illegal: /\\n/,\n            contains: [\n              hljs.BACKSLASH_ESCAPE,\n              VARIABLE,\n              SUBST\n            ]\n          }\n        ]\n      };\n      SUBST.contains.push(STRING);\n      const ANNOTATION_USE_SITE = {\n        className: \"meta\",\n        begin: \"@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\\\s*:(?:\\\\s*\" + hljs.UNDERSCORE_IDENT_RE + \")?\"\n      };\n      const ANNOTATION = {\n        className: \"meta\",\n        begin: \"@\" + hljs.UNDERSCORE_IDENT_RE,\n        contains: [\n          {\n            begin: /\\(/,\n            end: /\\)/,\n            contains: [\n              hljs.inherit(STRING, {\n                className: \"meta-string\"\n              })\n            ]\n          }\n        ]\n      };\n      const KOTLIN_NUMBER_MODE = NUMERIC;\n      const KOTLIN_NESTED_COMMENT = hljs.COMMENT(\n        \"/\\\\*\",\n        \"\\\\*/\",\n        {\n          contains: [hljs.C_BLOCK_COMMENT_MODE]\n        }\n      );\n      const KOTLIN_PAREN_TYPE = {\n        variants: [\n          {\n            className: \"type\",\n            begin: hljs.UNDERSCORE_IDENT_RE\n          },\n          {\n            begin: /\\(/,\n            end: /\\)/,\n            contains: []\n            // defined later\n          }\n        ]\n      };\n      const KOTLIN_PAREN_TYPE2 = KOTLIN_PAREN_TYPE;\n      KOTLIN_PAREN_TYPE2.variants[1].contains = [KOTLIN_PAREN_TYPE];\n      KOTLIN_PAREN_TYPE.variants[1].contains = [KOTLIN_PAREN_TYPE2];\n      return {\n        name: \"Kotlin\",\n        aliases: [\"kt\", \"kts\"],\n        keywords: KEYWORDS,\n        contains: [\n          hljs.COMMENT(\n            \"/\\\\*\\\\*\",\n            \"\\\\*/\",\n            {\n              relevance: 0,\n              contains: [\n                {\n                  className: \"doctag\",\n                  begin: \"@[A-Za-z]+\"\n                }\n              ]\n            }\n          ),\n          hljs.C_LINE_COMMENT_MODE,\n          KOTLIN_NESTED_COMMENT,\n          KEYWORDS_WITH_LABEL,\n          LABEL,\n          ANNOTATION_USE_SITE,\n          ANNOTATION,\n          {\n            className: \"function\",\n            beginKeywords: \"fun\",\n            end: \"[(]|$\",\n            returnBegin: true,\n            excludeEnd: true,\n            keywords: KEYWORDS,\n            relevance: 5,\n            contains: [\n              {\n                begin: hljs.UNDERSCORE_IDENT_RE + \"\\\\s*\\\\(\",\n                returnBegin: true,\n                relevance: 0,\n                contains: [hljs.UNDERSCORE_TITLE_MODE]\n              },\n              {\n                className: \"type\",\n                begin: /</,\n                end: />/,\n                keywords: \"reified\",\n                relevance: 0\n              },\n              {\n                className: \"params\",\n                begin: /\\(/,\n                end: /\\)/,\n                endsParent: true,\n                keywords: KEYWORDS,\n                relevance: 0,\n                contains: [\n                  {\n                    begin: /:/,\n                    end: /[=,\\/]/,\n                    endsWithParent: true,\n                    contains: [\n                      KOTLIN_PAREN_TYPE,\n                      hljs.C_LINE_COMMENT_MODE,\n                      KOTLIN_NESTED_COMMENT\n                    ],\n                    relevance: 0\n                  },\n                  hljs.C_LINE_COMMENT_MODE,\n                  KOTLIN_NESTED_COMMENT,\n                  ANNOTATION_USE_SITE,\n                  ANNOTATION,\n                  STRING,\n                  hljs.C_NUMBER_MODE\n                ]\n              },\n              KOTLIN_NESTED_COMMENT\n            ]\n          },\n          {\n            className: \"class\",\n            beginKeywords: \"class interface trait\",\n            // remove 'trait' when removed from KEYWORDS\n            end: /[:\\{(]|$/,\n            excludeEnd: true,\n            illegal: \"extends implements\",\n            contains: [\n              {\n                beginKeywords: \"public protected internal private constructor\"\n              },\n              hljs.UNDERSCORE_TITLE_MODE,\n              {\n                className: \"type\",\n                begin: /</,\n                end: />/,\n                excludeBegin: true,\n                excludeEnd: true,\n                relevance: 0\n              },\n              {\n                className: \"type\",\n                begin: /[,:]\\s*/,\n                end: /[<\\(,]|$/,\n                excludeBegin: true,\n                returnEnd: true\n              },\n              ANNOTATION_USE_SITE,\n              ANNOTATION\n            ]\n          },\n          STRING,\n          {\n            className: \"meta\",\n            begin: \"^#!/usr/bin/env\",\n            end: \"$\",\n            illegal: \"\\n\"\n          },\n          KOTLIN_NUMBER_MODE\n        ]\n      };\n    }\n    module.exports = kotlin;\n  }\n});\n\nexport {\n  require_kotlin\n};\n//# sourceMappingURL=chunk-4X3RRP47.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00010179099626839161
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-4X3RRP47.js (200) — 2024-07-28T11:41:39.586Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-4X3RRP47.js"
        }
      ]
    }
  ]
}