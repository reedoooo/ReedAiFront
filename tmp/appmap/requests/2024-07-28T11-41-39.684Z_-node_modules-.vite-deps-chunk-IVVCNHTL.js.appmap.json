{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-IVVCNHTL.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"1010-mlrTFSz2gF1J1krOr1obvrHp87k\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/groovy.js\nvar require_groovy = __commonJS({\n  \"node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/groovy.js\"(exports, module) {\n    function source(re) {\n      if (!re) return null;\n      if (typeof re === \"string\") return re;\n      return re.source;\n    }\n    function lookahead(re) {\n      return concat(\"(?=\", re, \")\");\n    }\n    function concat(...args) {\n      const joined = args.map((x) => source(x)).join(\"\");\n      return joined;\n    }\n    function variants(variants2, obj = {}) {\n      obj.variants = variants2;\n      return obj;\n    }\n    function groovy(hljs) {\n      const IDENT_RE = \"[A-Za-z0-9_$]+\";\n      const COMMENT = variants([\n        hljs.C_LINE_COMMENT_MODE,\n        hljs.C_BLOCK_COMMENT_MODE,\n        hljs.COMMENT(\n          \"/\\\\*\\\\*\",\n          \"\\\\*/\",\n          {\n            relevance: 0,\n            contains: [\n              {\n                // eat up @'s in emails to prevent them to be recognized as doctags\n                begin: /\\w+@/,\n                relevance: 0\n              },\n              {\n                className: \"doctag\",\n                begin: \"@[A-Za-z]+\"\n              }\n            ]\n          }\n        )\n      ]);\n      const REGEXP = {\n        className: \"regexp\",\n        begin: /~?\\/[^\\/\\n]+\\//,\n        contains: [hljs.BACKSLASH_ESCAPE]\n      };\n      const NUMBER = variants([\n        hljs.BINARY_NUMBER_MODE,\n        hljs.C_NUMBER_MODE\n      ]);\n      const STRING = variants(\n        [\n          {\n            begin: /\"\"\"/,\n            end: /\"\"\"/\n          },\n          {\n            begin: /'''/,\n            end: /'''/\n          },\n          {\n            begin: \"\\\\$/\",\n            end: \"/\\\\$\",\n            relevance: 10\n          },\n          hljs.APOS_STRING_MODE,\n          hljs.QUOTE_STRING_MODE\n        ],\n        {\n          className: \"string\"\n        }\n      );\n      return {\n        name: \"Groovy\",\n        keywords: {\n          built_in: \"this super\",\n          literal: \"true false null\",\n          keyword: \"byte short char int long boolean float double void def as in assert trait abstract static volatile transient public private protected synchronized final class interface enum if else for while switch case break default continue throw throws try catch finally implements extends new import package return instanceof\"\n        },\n        contains: [\n          hljs.SHEBANG({\n            binary: \"groovy\",\n            relevance: 10\n          }),\n          COMMENT,\n          STRING,\n          REGEXP,\n          NUMBER,\n          {\n            className: \"class\",\n            beginKeywords: \"class interface trait enum\",\n            end: /\\{/,\n            illegal: \":\",\n            contains: [\n              {\n                beginKeywords: \"extends implements\"\n              },\n              hljs.UNDERSCORE_TITLE_MODE\n            ]\n          },\n          {\n            className: \"meta\",\n            begin: \"@[A-Za-z]+\",\n            relevance: 0\n          },\n          {\n            // highlight map keys and named parameters as attrs\n            className: \"attr\",\n            begin: IDENT_RE + \"[ \t]*:\",\n            relevance: 0\n          },\n          {\n            // catch middle element of the ternary operator\n            // to avoid highlight it as a label, named parameter, or map key\n            begin: /\\?/,\n            end: /:/,\n            relevance: 0,\n            contains: [\n              COMMENT,\n              STRING,\n              REGEXP,\n              NUMBER,\n              \"self\"\n            ]\n          },\n          {\n            // highlight labeled statements\n            className: \"symbol\",\n            begin: \"^[ \t]*\" + lookahead(IDENT_RE + \":\"),\n            excludeBegin: true,\n            end: IDENT_RE + \":\",\n            relevance: 0\n          }\n        ],\n        illegal: /#|<\\//\n      };\n    }\n    module.exports = groovy;\n  }\n});\n\nexport {\n  require_groovy\n};\n//# sourceMappingURL=chunk-IVVCNHTL.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00033479102421551943
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-IVVCNHTL.js (200) â€” 2024-07-28T11:41:39.684Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-IVVCNHTL.js"
        }
      ]
    }
  ]
}