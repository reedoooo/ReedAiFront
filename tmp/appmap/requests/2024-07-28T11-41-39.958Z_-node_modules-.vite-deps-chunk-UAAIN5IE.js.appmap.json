{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-UAAIN5IE.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"2569-3LhCgi/Zg4GN6NW7dDLB3DZXJ9I\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/ruby.js\nvar require_ruby = __commonJS({\n  \"node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/ruby.js\"(exports, module) {\n    function source(re) {\n      if (!re) return null;\n      if (typeof re === \"string\") return re;\n      return re.source;\n    }\n    function lookahead(re) {\n      return concat(\"(?=\", re, \")\");\n    }\n    function concat(...args) {\n      const joined = args.map((x) => source(x)).join(\"\");\n      return joined;\n    }\n    function ruby(hljs) {\n      const RUBY_METHOD_RE = \"([a-zA-Z_]\\\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?)\";\n      const RUBY_KEYWORDS = {\n        keyword: \"and then defined module in return redo if BEGIN retry end for self when next until do begin unless END rescue else break undef not super class case require yield alias while ensure elsif or include attr_reader attr_writer attr_accessor __FILE__\",\n        built_in: \"proc lambda\",\n        literal: \"true false nil\"\n      };\n      const YARDOCTAG = {\n        className: \"doctag\",\n        begin: \"@[A-Za-z]+\"\n      };\n      const IRB_OBJECT = {\n        begin: \"#<\",\n        end: \">\"\n      };\n      const COMMENT_MODES = [\n        hljs.COMMENT(\n          \"#\",\n          \"$\",\n          {\n            contains: [YARDOCTAG]\n          }\n        ),\n        hljs.COMMENT(\n          \"^=begin\",\n          \"^=end\",\n          {\n            contains: [YARDOCTAG],\n            relevance: 10\n          }\n        ),\n        hljs.COMMENT(\"^__END__\", \"\\\\n$\")\n      ];\n      const SUBST = {\n        className: \"subst\",\n        begin: /#\\{/,\n        end: /\\}/,\n        keywords: RUBY_KEYWORDS\n      };\n      const STRING = {\n        className: \"string\",\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          SUBST\n        ],\n        variants: [\n          {\n            begin: /'/,\n            end: /'/\n          },\n          {\n            begin: /\"/,\n            end: /\"/\n          },\n          {\n            begin: /`/,\n            end: /`/\n          },\n          {\n            begin: /%[qQwWx]?\\(/,\n            end: /\\)/\n          },\n          {\n            begin: /%[qQwWx]?\\[/,\n            end: /\\]/\n          },\n          {\n            begin: /%[qQwWx]?\\{/,\n            end: /\\}/\n          },\n          {\n            begin: /%[qQwWx]?</,\n            end: />/\n          },\n          {\n            begin: /%[qQwWx]?\\//,\n            end: /\\//\n          },\n          {\n            begin: /%[qQwWx]?%/,\n            end: /%/\n          },\n          {\n            begin: /%[qQwWx]?-/,\n            end: /-/\n          },\n          {\n            begin: /%[qQwWx]?\\|/,\n            end: /\\|/\n          },\n          // in the following expressions, \\B in the beginning suppresses recognition of ?-sequences\n          // where ? is the last character of a preceding identifier, as in: `func?4`\n          {\n            begin: /\\B\\?(\\\\\\d{1,3})/\n          },\n          {\n            begin: /\\B\\?(\\\\x[A-Fa-f0-9]{1,2})/\n          },\n          {\n            begin: /\\B\\?(\\\\u\\{?[A-Fa-f0-9]{1,6}\\}?)/\n          },\n          {\n            begin: /\\B\\?(\\\\M-\\\\C-|\\\\M-\\\\c|\\\\c\\\\M-|\\\\M-|\\\\C-\\\\M-)[\\x20-\\x7e]/\n          },\n          {\n            begin: /\\B\\?\\\\(c|C-)[\\x20-\\x7e]/\n          },\n          {\n            begin: /\\B\\?\\\\?\\S/\n          },\n          {\n            // heredocs\n            begin: /<<[-~]?'?(\\w+)\\n(?:[^\\n]*\\n)*?\\s*\\1\\b/,\n            returnBegin: true,\n            contains: [\n              {\n                begin: /<<[-~]?'?/\n              },\n              hljs.END_SAME_AS_BEGIN({\n                begin: /(\\w+)/,\n                end: /(\\w+)/,\n                contains: [\n                  hljs.BACKSLASH_ESCAPE,\n                  SUBST\n                ]\n              })\n            ]\n          }\n        ]\n      };\n      const decimal = \"[1-9](_?[0-9])*|0\";\n      const digits = \"[0-9](_?[0-9])*\";\n      const NUMBER = {\n        className: \"number\",\n        relevance: 0,\n        variants: [\n          // decimal integer/float, optionally exponential or rational, optionally imaginary\n          {\n            begin: `\\\\b(${decimal})(\\\\.(${digits}))?([eE][+-]?(${digits})|r)?i?\\\\b`\n          },\n          // explicit decimal/binary/octal/hexadecimal integer,\n          // optionally rational and/or imaginary\n          {\n            begin: \"\\\\b0[dD][0-9](_?[0-9])*r?i?\\\\b\"\n          },\n          {\n            begin: \"\\\\b0[bB][0-1](_?[0-1])*r?i?\\\\b\"\n          },\n          {\n            begin: \"\\\\b0[oO][0-7](_?[0-7])*r?i?\\\\b\"\n          },\n          {\n            begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*r?i?\\\\b\"\n          },\n          // 0-prefixed implicit octal integer, optionally rational and/or imaginary\n          {\n            begin: \"\\\\b0(_?[0-7])+r?i?\\\\b\"\n          }\n        ]\n      };\n      const PARAMS = {\n        className: \"params\",\n        begin: \"\\\\(\",\n        end: \"\\\\)\",\n        endsParent: true,\n        keywords: RUBY_KEYWORDS\n      };\n      const RUBY_DEFAULT_CONTAINS = [\n        STRING,\n        {\n          className: \"class\",\n          beginKeywords: \"class module\",\n          end: \"$|;\",\n          illegal: /=/,\n          contains: [\n            hljs.inherit(hljs.TITLE_MODE, {\n              begin: \"[A-Za-z_]\\\\w*(::\\\\w+)*(\\\\?|!)?\"\n            }),\n            {\n              begin: \"<\\\\s*\",\n              contains: [\n                {\n                  begin: \"(\" + hljs.IDENT_RE + \"::)?\" + hljs.IDENT_RE,\n                  // we already get points for <, we don't need poitns\n                  // for the name also\n                  relevance: 0\n                }\n              ]\n            }\n          ].concat(COMMENT_MODES)\n        },\n        {\n          className: \"function\",\n          // def method_name(\n          // def method_name;\n          // def method_name (end of line)\n          begin: concat(/def\\s+/, lookahead(RUBY_METHOD_RE + \"\\\\s*(\\\\(|;|$)\")),\n          relevance: 0,\n          // relevance comes from kewords\n          keywords: \"def\",\n          end: \"$|;\",\n          contains: [\n            hljs.inherit(hljs.TITLE_MODE, {\n              begin: RUBY_METHOD_RE\n            }),\n            PARAMS\n          ].concat(COMMENT_MODES)\n        },\n        {\n          // swallow namespace qualifiers before symbols\n          begin: hljs.IDENT_RE + \"::\"\n        },\n        {\n          className: \"symbol\",\n          begin: hljs.UNDERSCORE_IDENT_RE + \"(!|\\\\?)?:\",\n          relevance: 0\n        },\n        {\n          className: \"symbol\",\n          begin: \":(?!\\\\s)\",\n          contains: [\n            STRING,\n            {\n              begin: RUBY_METHOD_RE\n            }\n          ],\n          relevance: 0\n        },\n        NUMBER,\n        {\n          // negative-look forward attemps to prevent false matches like:\n          // @ident@ or $ident$ that might indicate this is not ruby at all\n          className: \"variable\",\n          begin: `(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))(?=[^@$?])(?![A-Za-z])(?![@$?'])`\n        },\n        {\n          className: \"params\",\n          begin: /\\|/,\n          end: /\\|/,\n          relevance: 0,\n          // this could be a lot of things (in other languages) other than params\n          keywords: RUBY_KEYWORDS\n        },\n        {\n          // regexp container\n          begin: \"(\" + hljs.RE_STARTERS_RE + \"|unless)\\\\s*\",\n          keywords: \"unless\",\n          contains: [\n            {\n              className: \"regexp\",\n              contains: [\n                hljs.BACKSLASH_ESCAPE,\n                SUBST\n              ],\n              illegal: /\\n/,\n              variants: [\n                {\n                  begin: \"/\",\n                  end: \"/[a-z]*\"\n                },\n                {\n                  begin: /%r\\{/,\n                  end: /\\}[a-z]*/\n                },\n                {\n                  begin: \"%r\\\\(\",\n                  end: \"\\\\)[a-z]*\"\n                },\n                {\n                  begin: \"%r!\",\n                  end: \"![a-z]*\"\n                },\n                {\n                  begin: \"%r\\\\[\",\n                  end: \"\\\\][a-z]*\"\n                }\n              ]\n            }\n          ].concat(IRB_OBJECT, COMMENT_MODES),\n          relevance: 0\n        }\n      ].concat(IRB_OBJECT, COMMENT_MODES);\n      SUBST.contains = RUBY_DEFAULT_CONTAINS;\n      PARAMS.contains = RUBY_DEFAULT_CONTAINS;\n      const SIMPLE_PROMPT = \"[>?]>\";\n      const DEFAULT_PROMPT = \"[\\\\w#]+\\\\(\\\\w+\\\\):\\\\d+:\\\\d+>\";\n      const RVM_PROMPT = \"(\\\\w+-)?\\\\d+\\\\.\\\\d+\\\\.\\\\d+(p\\\\d+)?[^\\\\d][^>]+>\";\n      const IRB_DEFAULT = [\n        {\n          begin: /^\\s*=>/,\n          starts: {\n            end: \"$\",\n            contains: RUBY_DEFAULT_CONTAINS\n          }\n        },\n        {\n          className: \"meta\",\n          begin: \"^(\" + SIMPLE_PROMPT + \"|\" + DEFAULT_PROMPT + \"|\" + RVM_PROMPT + \")(?=[ ])\",\n          starts: {\n            end: \"$\",\n            contains: RUBY_DEFAULT_CONTAINS\n          }\n        }\n      ];\n      COMMENT_MODES.unshift(IRB_OBJECT);\n      return {\n        name: \"Ruby\",\n        aliases: [\n          \"rb\",\n          \"gemspec\",\n          \"podspec\",\n          \"thor\",\n          \"irb\"\n        ],\n        keywords: RUBY_KEYWORDS,\n        illegal: /\\/\\*/,\n        contains: [\n          hljs.SHEBANG({\n            binary: \"ruby\"\n          })\n        ].concat(IRB_DEFAULT).concat(COMMENT_MODES).concat(RUBY_DEFAULT_CONTAINS)\n      };\n    }\n    module.exports = ruby;\n  }\n});\n\nexport {\n  require_ruby\n};\n//# sourceMappingURL=chunk-UAAIN5IE.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.0004490000428631902
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-UAAIN5IE.js (200) — 2024-07-28T11:41:39.958Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-UAAIN5IE.js"
        }
      ]
    }
  ]
}