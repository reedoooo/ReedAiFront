{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-XQQ5N7QA.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"93f-yD1c1GhC/nD/xmashpYb3W8BRc8\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/ocaml.js\nvar require_ocaml = __commonJS({\n  \"node_modules/refractor/lang/ocaml.js\"(exports, module) {\n    module.exports = ocaml;\n    ocaml.displayName = \"ocaml\";\n    ocaml.aliases = [];\n    function ocaml(Prism) {\n      Prism.languages.ocaml = {\n        comment: {\n          pattern: /\\(\\*[\\s\\S]*?\\*\\)/,\n          greedy: true\n        },\n        char: {\n          pattern: /'(?:[^\\\\\\r\\n']|\\\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,\n          greedy: true\n        },\n        string: [\n          {\n            pattern: /\"(?:\\\\(?:[\\s\\S]|\\r\\n)|[^\\\\\\r\\n\"])*\"/,\n            greedy: true\n          },\n          {\n            pattern: /\\{([a-z_]*)\\|[\\s\\S]*?\\|\\1\\}/,\n            greedy: true\n          }\n        ],\n        number: [\n          // binary and octal\n          /\\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\\b/i,\n          // hexadecimal\n          /\\b0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]*)?(?:p[+-]?\\d[\\d_]*)?(?!\\w)/i,\n          // decimal\n          /\\b\\d[\\d_]*(?:\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?(?!\\w)/i\n        ],\n        directive: {\n          pattern: /\\B#\\w+/,\n          alias: \"property\"\n        },\n        label: {\n          pattern: /\\B~\\w+/,\n          alias: \"property\"\n        },\n        \"type-variable\": {\n          pattern: /\\B'\\w+/,\n          alias: \"function\"\n        },\n        variant: {\n          pattern: /`\\w+/,\n          alias: \"symbol\"\n        },\n        // For the list of keywords and operators,\n        // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n        keyword: /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        \"operator-like-punctuation\": {\n          pattern: /\\[[<>|]|[>|]\\]|\\{<|>\\}/,\n          alias: \"punctuation\"\n        },\n        // Custom operators are allowed\n        operator: /\\.[.~]|:[=>]|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n        punctuation: /;;|::|[(){}\\[\\].,:;#]|\\b_\\b/\n      };\n    }\n  }\n});\n\nexport {\n  require_ocaml\n};\n//# sourceMappingURL=chunk-XQQ5N7QA.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00030462502036243677
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-XQQ5N7QA.js (200) â€” 2024-07-28T11:41:34.515Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-XQQ5N7QA.js"
        }
      ]
    }
  ]
}