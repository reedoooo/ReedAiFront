{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-HRVOMUWZ.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"c99-c7eH9M6219DNWfK7KfMW49o3pwg\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/coffeescript.js\nvar require_coffeescript = __commonJS({\n  \"node_modules/refractor/lang/coffeescript.js\"(exports, module) {\n    module.exports = coffeescript;\n    coffeescript.displayName = \"coffeescript\";\n    coffeescript.aliases = [\"coffee\"];\n    function coffeescript(Prism) {\n      ;\n      (function(Prism2) {\n        var comment = /#(?!\\{).+/;\n        var interpolation = {\n          pattern: /#\\{[^}]+\\}/,\n          alias: \"variable\"\n        };\n        Prism2.languages.coffeescript = Prism2.languages.extend(\"javascript\", {\n          comment,\n          string: [\n            // Strings are multiline\n            {\n              pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n              greedy: true\n            },\n            {\n              // Strings are multiline\n              pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n              greedy: true,\n              inside: {\n                interpolation\n              }\n            }\n          ],\n          keyword: /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n          \"class-member\": {\n            pattern: /@(?!\\d)\\w+/,\n            alias: \"variable\"\n          }\n        });\n        Prism2.languages.insertBefore(\"coffeescript\", \"comment\", {\n          \"multiline-comment\": {\n            pattern: /###[\\s\\S]+?###/,\n            alias: \"comment\"\n          },\n          // Block regexp can contain comments and interpolation\n          \"block-regex\": {\n            pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n            alias: \"regex\",\n            inside: {\n              comment,\n              interpolation\n            }\n          }\n        });\n        Prism2.languages.insertBefore(\"coffeescript\", \"string\", {\n          \"inline-javascript\": {\n            pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n            inside: {\n              delimiter: {\n                pattern: /^`|`$/,\n                alias: \"punctuation\"\n              },\n              script: {\n                pattern: /[\\s\\S]+/,\n                alias: \"language-javascript\",\n                inside: Prism2.languages.javascript\n              }\n            }\n          },\n          // Block strings\n          \"multiline-string\": [\n            {\n              pattern: /'''[\\s\\S]*?'''/,\n              greedy: true,\n              alias: \"string\"\n            },\n            {\n              pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n              greedy: true,\n              alias: \"string\",\n              inside: {\n                interpolation\n              }\n            }\n          ]\n        });\n        Prism2.languages.insertBefore(\"coffeescript\", \"keyword\", {\n          // Object property\n          property: /(?!\\d)\\w+(?=\\s*:(?!:))/\n        });\n        delete Prism2.languages.coffeescript[\"template-string\"];\n        Prism2.languages.coffee = Prism2.languages.coffeescript;\n      })(Prism);\n    }\n  }\n});\n\nexport {\n  require_coffeescript\n};\n//# sourceMappingURL=chunk-HRVOMUWZ.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00008512509521096945
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-HRVOMUWZ.js (200) â€” 2024-07-28T11:41:34.806Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-HRVOMUWZ.js"
        }
      ]
    }
  ]
}