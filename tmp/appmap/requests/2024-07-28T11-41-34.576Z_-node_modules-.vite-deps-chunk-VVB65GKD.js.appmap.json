{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-VVB65GKD.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"1cfd-TzP8JEl07q/F5myJErKHpvBC8BY\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/mongodb.js\nvar require_mongodb = __commonJS({\n  \"node_modules/refractor/lang/mongodb.js\"(exports, module) {\n    module.exports = mongodb;\n    mongodb.displayName = \"mongodb\";\n    mongodb.aliases = [];\n    function mongodb(Prism) {\n      ;\n      (function(Prism2) {\n        var operators = [\n          // query and projection\n          \"$eq\",\n          \"$gt\",\n          \"$gte\",\n          \"$in\",\n          \"$lt\",\n          \"$lte\",\n          \"$ne\",\n          \"$nin\",\n          \"$and\",\n          \"$not\",\n          \"$nor\",\n          \"$or\",\n          \"$exists\",\n          \"$type\",\n          \"$expr\",\n          \"$jsonSchema\",\n          \"$mod\",\n          \"$regex\",\n          \"$text\",\n          \"$where\",\n          \"$geoIntersects\",\n          \"$geoWithin\",\n          \"$near\",\n          \"$nearSphere\",\n          \"$all\",\n          \"$elemMatch\",\n          \"$size\",\n          \"$bitsAllClear\",\n          \"$bitsAllSet\",\n          \"$bitsAnyClear\",\n          \"$bitsAnySet\",\n          \"$comment\",\n          \"$elemMatch\",\n          \"$meta\",\n          \"$slice\",\n          // update\n          \"$currentDate\",\n          \"$inc\",\n          \"$min\",\n          \"$max\",\n          \"$mul\",\n          \"$rename\",\n          \"$set\",\n          \"$setOnInsert\",\n          \"$unset\",\n          \"$addToSet\",\n          \"$pop\",\n          \"$pull\",\n          \"$push\",\n          \"$pullAll\",\n          \"$each\",\n          \"$position\",\n          \"$slice\",\n          \"$sort\",\n          \"$bit\",\n          // aggregation pipeline stages\n          \"$addFields\",\n          \"$bucket\",\n          \"$bucketAuto\",\n          \"$collStats\",\n          \"$count\",\n          \"$currentOp\",\n          \"$facet\",\n          \"$geoNear\",\n          \"$graphLookup\",\n          \"$group\",\n          \"$indexStats\",\n          \"$limit\",\n          \"$listLocalSessions\",\n          \"$listSessions\",\n          \"$lookup\",\n          \"$match\",\n          \"$merge\",\n          \"$out\",\n          \"$planCacheStats\",\n          \"$project\",\n          \"$redact\",\n          \"$replaceRoot\",\n          \"$replaceWith\",\n          \"$sample\",\n          \"$set\",\n          \"$skip\",\n          \"$sort\",\n          \"$sortByCount\",\n          \"$unionWith\",\n          \"$unset\",\n          \"$unwind\",\n          \"$setWindowFields\",\n          // aggregation pipeline operators\n          \"$abs\",\n          \"$accumulator\",\n          \"$acos\",\n          \"$acosh\",\n          \"$add\",\n          \"$addToSet\",\n          \"$allElementsTrue\",\n          \"$and\",\n          \"$anyElementTrue\",\n          \"$arrayElemAt\",\n          \"$arrayToObject\",\n          \"$asin\",\n          \"$asinh\",\n          \"$atan\",\n          \"$atan2\",\n          \"$atanh\",\n          \"$avg\",\n          \"$binarySize\",\n          \"$bsonSize\",\n          \"$ceil\",\n          \"$cmp\",\n          \"$concat\",\n          \"$concatArrays\",\n          \"$cond\",\n          \"$convert\",\n          \"$cos\",\n          \"$dateFromParts\",\n          \"$dateToParts\",\n          \"$dateFromString\",\n          \"$dateToString\",\n          \"$dayOfMonth\",\n          \"$dayOfWeek\",\n          \"$dayOfYear\",\n          \"$degreesToRadians\",\n          \"$divide\",\n          \"$eq\",\n          \"$exp\",\n          \"$filter\",\n          \"$first\",\n          \"$floor\",\n          \"$function\",\n          \"$gt\",\n          \"$gte\",\n          \"$hour\",\n          \"$ifNull\",\n          \"$in\",\n          \"$indexOfArray\",\n          \"$indexOfBytes\",\n          \"$indexOfCP\",\n          \"$isArray\",\n          \"$isNumber\",\n          \"$isoDayOfWeek\",\n          \"$isoWeek\",\n          \"$isoWeekYear\",\n          \"$last\",\n          \"$last\",\n          \"$let\",\n          \"$literal\",\n          \"$ln\",\n          \"$log\",\n          \"$log10\",\n          \"$lt\",\n          \"$lte\",\n          \"$ltrim\",\n          \"$map\",\n          \"$max\",\n          \"$mergeObjects\",\n          \"$meta\",\n          \"$min\",\n          \"$millisecond\",\n          \"$minute\",\n          \"$mod\",\n          \"$month\",\n          \"$multiply\",\n          \"$ne\",\n          \"$not\",\n          \"$objectToArray\",\n          \"$or\",\n          \"$pow\",\n          \"$push\",\n          \"$radiansToDegrees\",\n          \"$range\",\n          \"$reduce\",\n          \"$regexFind\",\n          \"$regexFindAll\",\n          \"$regexMatch\",\n          \"$replaceOne\",\n          \"$replaceAll\",\n          \"$reverseArray\",\n          \"$round\",\n          \"$rtrim\",\n          \"$second\",\n          \"$setDifference\",\n          \"$setEquals\",\n          \"$setIntersection\",\n          \"$setIsSubset\",\n          \"$setUnion\",\n          \"$size\",\n          \"$sin\",\n          \"$slice\",\n          \"$split\",\n          \"$sqrt\",\n          \"$stdDevPop\",\n          \"$stdDevSamp\",\n          \"$strcasecmp\",\n          \"$strLenBytes\",\n          \"$strLenCP\",\n          \"$substr\",\n          \"$substrBytes\",\n          \"$substrCP\",\n          \"$subtract\",\n          \"$sum\",\n          \"$switch\",\n          \"$tan\",\n          \"$toBool\",\n          \"$toDate\",\n          \"$toDecimal\",\n          \"$toDouble\",\n          \"$toInt\",\n          \"$toLong\",\n          \"$toObjectId\",\n          \"$toString\",\n          \"$toLower\",\n          \"$toUpper\",\n          \"$trim\",\n          \"$trunc\",\n          \"$type\",\n          \"$week\",\n          \"$year\",\n          \"$zip\",\n          \"$count\",\n          \"$dateAdd\",\n          \"$dateDiff\",\n          \"$dateSubtract\",\n          \"$dateTrunc\",\n          \"$getField\",\n          \"$rand\",\n          \"$sampleRate\",\n          \"$setField\",\n          \"$unsetField\",\n          // aggregation pipeline query modifiers\n          \"$comment\",\n          \"$explain\",\n          \"$hint\",\n          \"$max\",\n          \"$maxTimeMS\",\n          \"$min\",\n          \"$orderby\",\n          \"$query\",\n          \"$returnKey\",\n          \"$showDiskLoc\",\n          \"$natural\"\n        ];\n        var builtinFunctions = [\n          \"ObjectId\",\n          \"Code\",\n          \"BinData\",\n          \"DBRef\",\n          \"Timestamp\",\n          \"NumberLong\",\n          \"NumberDecimal\",\n          \"MaxKey\",\n          \"MinKey\",\n          \"RegExp\",\n          \"ISODate\",\n          \"UUID\"\n        ];\n        operators = operators.map(function(operator) {\n          return operator.replace(\"$\", \"\\\\$\");\n        });\n        var operatorsSource = \"(?:\" + operators.join(\"|\") + \")\\\\b\";\n        Prism2.languages.mongodb = Prism2.languages.extend(\"javascript\", {});\n        Prism2.languages.insertBefore(\"mongodb\", \"string\", {\n          property: {\n            pattern: /(?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)(?=\\s*:)/,\n            greedy: true,\n            inside: {\n              keyword: RegExp(`^(['\"])?` + operatorsSource + \"(?:\\\\1)?$\")\n            }\n          }\n        });\n        Prism2.languages.mongodb.string.inside = {\n          url: {\n            // url pattern\n            pattern: /https?:\\/\\/[-\\w@:%.+~#=]{1,256}\\.[a-z0-9()]{1,6}\\b[-\\w()@:%+.~#?&/=]*/i,\n            greedy: true\n          },\n          entity: {\n            // ipv4\n            pattern: /\\b(?:(?:[01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d\\d?|2[0-4]\\d|25[0-5])\\b/,\n            greedy: true\n          }\n        };\n        Prism2.languages.insertBefore(\"mongodb\", \"constant\", {\n          builtin: {\n            pattern: RegExp(\"\\\\b(?:\" + builtinFunctions.join(\"|\") + \")\\\\b\"),\n            alias: \"keyword\"\n          }\n        });\n      })(Prism);\n    }\n  }\n});\n\nexport {\n  require_mongodb\n};\n//# sourceMappingURL=chunk-VVB65GKD.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00015829200856387615
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-VVB65GKD.js (200) — 2024-07-28T11:41:34.576Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-VVB65GKD.js"
        }
      ]
    }
  ]
}