{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-AW6TDGKD.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"1998-hCRsJ3neFIlKGBG+bvop9ntReGI\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/elixir.js\nvar require_elixir = __commonJS({\n  \"node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/elixir.js\"(exports, module) {\n    function elixir(hljs) {\n      const ELIXIR_IDENT_RE = \"[a-zA-Z_][a-zA-Z0-9_.]*(!|\\\\?)?\";\n      const ELIXIR_METHOD_RE = \"[a-zA-Z_]\\\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?\";\n      const ELIXIR_KEYWORDS = {\n        $pattern: ELIXIR_IDENT_RE,\n        keyword: \"and false then defined module in return redo retry end for true self when next until do begin unless nil break not case cond alias while ensure or include use alias fn quote require import with|0\"\n      };\n      const SUBST = {\n        className: \"subst\",\n        begin: /#\\{/,\n        end: /\\}/,\n        keywords: ELIXIR_KEYWORDS\n      };\n      const NUMBER = {\n        className: \"number\",\n        begin: \"(\\\\b0o[0-7_]+)|(\\\\b0b[01_]+)|(\\\\b0x[0-9a-fA-F_]+)|(-?\\\\b[1-9][0-9_]*(\\\\.[0-9_]+([eE][-+]?[0-9]+)?)?)\",\n        relevance: 0\n      };\n      const SIGIL_DELIMITERS = `[/|([{<\"']`;\n      const LOWERCASE_SIGIL = {\n        className: \"string\",\n        begin: \"~[a-z](?=\" + SIGIL_DELIMITERS + \")\",\n        contains: [\n          {\n            endsParent: true,\n            contains: [\n              {\n                contains: [\n                  hljs.BACKSLASH_ESCAPE,\n                  SUBST\n                ],\n                variants: [\n                  {\n                    begin: /\"/,\n                    end: /\"/\n                  },\n                  {\n                    begin: /'/,\n                    end: /'/\n                  },\n                  {\n                    begin: /\\//,\n                    end: /\\//\n                  },\n                  {\n                    begin: /\\|/,\n                    end: /\\|/\n                  },\n                  {\n                    begin: /\\(/,\n                    end: /\\)/\n                  },\n                  {\n                    begin: /\\[/,\n                    end: /\\]/\n                  },\n                  {\n                    begin: /\\{/,\n                    end: /\\}/\n                  },\n                  {\n                    begin: /</,\n                    end: />/\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      };\n      const UPCASE_SIGIL = {\n        className: \"string\",\n        begin: \"~[A-Z](?=\" + SIGIL_DELIMITERS + \")\",\n        contains: [\n          {\n            begin: /\"/,\n            end: /\"/\n          },\n          {\n            begin: /'/,\n            end: /'/\n          },\n          {\n            begin: /\\//,\n            end: /\\//\n          },\n          {\n            begin: /\\|/,\n            end: /\\|/\n          },\n          {\n            begin: /\\(/,\n            end: /\\)/\n          },\n          {\n            begin: /\\[/,\n            end: /\\]/\n          },\n          {\n            begin: /\\{/,\n            end: /\\}/\n          },\n          {\n            begin: /</,\n            end: />/\n          }\n        ]\n      };\n      const STRING = {\n        className: \"string\",\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          SUBST\n        ],\n        variants: [\n          {\n            begin: /\"\"\"/,\n            end: /\"\"\"/\n          },\n          {\n            begin: /'''/,\n            end: /'''/\n          },\n          {\n            begin: /~S\"\"\"/,\n            end: /\"\"\"/,\n            contains: []\n            // override default\n          },\n          {\n            begin: /~S\"/,\n            end: /\"/,\n            contains: []\n            // override default\n          },\n          {\n            begin: /~S'''/,\n            end: /'''/,\n            contains: []\n            // override default\n          },\n          {\n            begin: /~S'/,\n            end: /'/,\n            contains: []\n            // override default\n          },\n          {\n            begin: /'/,\n            end: /'/\n          },\n          {\n            begin: /\"/,\n            end: /\"/\n          }\n        ]\n      };\n      const FUNCTION = {\n        className: \"function\",\n        beginKeywords: \"def defp defmacro\",\n        end: /\\B\\b/,\n        // the mode is ended by the title\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {\n            begin: ELIXIR_IDENT_RE,\n            endsParent: true\n          })\n        ]\n      };\n      const CLASS = hljs.inherit(FUNCTION, {\n        className: \"class\",\n        beginKeywords: \"defimpl defmodule defprotocol defrecord\",\n        end: /\\bdo\\b|$|;/\n      });\n      const ELIXIR_DEFAULT_CONTAINS = [\n        STRING,\n        UPCASE_SIGIL,\n        LOWERCASE_SIGIL,\n        hljs.HASH_COMMENT_MODE,\n        CLASS,\n        FUNCTION,\n        {\n          begin: \"::\"\n        },\n        {\n          className: \"symbol\",\n          begin: \":(?![\\\\s:])\",\n          contains: [\n            STRING,\n            {\n              begin: ELIXIR_METHOD_RE\n            }\n          ],\n          relevance: 0\n        },\n        {\n          className: \"symbol\",\n          begin: ELIXIR_IDENT_RE + \":(?!:)\",\n          relevance: 0\n        },\n        NUMBER,\n        {\n          className: \"variable\",\n          begin: \"(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))\"\n        },\n        {\n          begin: \"->\"\n        },\n        {\n          // regexp container\n          begin: \"(\" + hljs.RE_STARTERS_RE + \")\\\\s*\",\n          contains: [\n            hljs.HASH_COMMENT_MODE,\n            {\n              // to prevent false regex triggers for the division function:\n              // /:\n              begin: /\\/: (?=\\d+\\s*[,\\]])/,\n              relevance: 0,\n              contains: [NUMBER]\n            },\n            {\n              className: \"regexp\",\n              illegal: \"\\\\n\",\n              contains: [\n                hljs.BACKSLASH_ESCAPE,\n                SUBST\n              ],\n              variants: [\n                {\n                  begin: \"/\",\n                  end: \"/[a-z]*\"\n                },\n                {\n                  begin: \"%r\\\\[\",\n                  end: \"\\\\][a-z]*\"\n                }\n              ]\n            }\n          ],\n          relevance: 0\n        }\n      ];\n      SUBST.contains = ELIXIR_DEFAULT_CONTAINS;\n      return {\n        name: \"Elixir\",\n        keywords: ELIXIR_KEYWORDS,\n        contains: ELIXIR_DEFAULT_CONTAINS\n      };\n    }\n    module.exports = elixir;\n  }\n});\n\nexport {\n  require_elixir\n};\n//# sourceMappingURL=chunk-AW6TDGKD.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00021500000730156898
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-AW6TDGKD.js (200) â€” 2024-07-28T11:41:39.934Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-AW6TDGKD.js"
        }
      ]
    }
  ]
}