{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-TGJLI64W.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"206a-Ao8FgB07uPWgrJuZcrdxHJZeeg8\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/reasonml.js\nvar require_reasonml = __commonJS({\n  \"node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/reasonml.js\"(exports, module) {\n    function reasonml(hljs) {\n      function orReValues(ops) {\n        return ops.map(function(op) {\n          return op.split(\"\").map(function(char) {\n            return \"\\\\\" + char;\n          }).join(\"\");\n        }).join(\"|\");\n      }\n      const RE_IDENT = \"~?[a-z$_][0-9a-zA-Z$_]*\";\n      const RE_MODULE_IDENT = \"`?[A-Z$_][0-9a-zA-Z$_]*\";\n      const RE_PARAM_TYPEPARAM = \"'?[a-z$_][0-9a-z$_]*\";\n      const RE_PARAM_TYPE = \"\\\\s*:\\\\s*[a-z$_][0-9a-z$_]*(\\\\(\\\\s*(\" + RE_PARAM_TYPEPARAM + \"\\\\s*(,\" + RE_PARAM_TYPEPARAM + \"\\\\s*)*)?\\\\))?\";\n      const RE_PARAM = RE_IDENT + \"(\" + RE_PARAM_TYPE + \"){0,2}\";\n      const RE_OPERATOR = \"(\" + orReValues([\n        \"||\",\n        \"++\",\n        \"**\",\n        \"+.\",\n        \"*\",\n        \"/\",\n        \"*.\",\n        \"/.\",\n        \"...\"\n      ]) + \"|\\\\|>|&&|==|===)\";\n      const RE_OPERATOR_SPACED = \"\\\\s+\" + RE_OPERATOR + \"\\\\s+\";\n      const KEYWORDS = {\n        keyword: \"and as asr assert begin class constraint do done downto else end exception external for fun function functor if in include inherit initializer land lazy let lor lsl lsr lxor match method mod module mutable new nonrec object of open or private rec sig struct then to try type val virtual when while with\",\n        built_in: \"array bool bytes char exn|5 float int int32 int64 list lazy_t|5 nativeint|5 ref string unit \",\n        literal: \"true false\"\n      };\n      const RE_NUMBER = \"\\\\b(0[xX][a-fA-F0-9_]+[Lln]?|0[oO][0-7_]+[Lln]?|0[bB][01_]+[Lln]?|[0-9][0-9_]*([Lln]|(\\\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)\";\n      const NUMBER_MODE = {\n        className: \"number\",\n        relevance: 0,\n        variants: [\n          {\n            begin: RE_NUMBER\n          },\n          {\n            begin: \"\\\\(-\" + RE_NUMBER + \"\\\\)\"\n          }\n        ]\n      };\n      const OPERATOR_MODE = {\n        className: \"operator\",\n        relevance: 0,\n        begin: RE_OPERATOR\n      };\n      const LIST_CONTENTS_MODES = [\n        {\n          className: \"identifier\",\n          relevance: 0,\n          begin: RE_IDENT\n        },\n        OPERATOR_MODE,\n        NUMBER_MODE\n      ];\n      const MODULE_ACCESS_CONTENTS = [\n        hljs.QUOTE_STRING_MODE,\n        OPERATOR_MODE,\n        {\n          className: \"module\",\n          begin: \"\\\\b\" + RE_MODULE_IDENT,\n          returnBegin: true,\n          end: \".\",\n          contains: [\n            {\n              className: \"identifier\",\n              begin: RE_MODULE_IDENT,\n              relevance: 0\n            }\n          ]\n        }\n      ];\n      const PARAMS_CONTENTS = [\n        {\n          className: \"module\",\n          begin: \"\\\\b\" + RE_MODULE_IDENT,\n          returnBegin: true,\n          end: \".\",\n          relevance: 0,\n          contains: [\n            {\n              className: \"identifier\",\n              begin: RE_MODULE_IDENT,\n              relevance: 0\n            }\n          ]\n        }\n      ];\n      const PARAMS_MODE = {\n        begin: RE_IDENT,\n        end: \"(,|\\\\n|\\\\))\",\n        relevance: 0,\n        contains: [\n          OPERATOR_MODE,\n          {\n            className: \"typing\",\n            begin: \":\",\n            end: \"(,|\\\\n)\",\n            returnBegin: true,\n            relevance: 0,\n            contains: PARAMS_CONTENTS\n          }\n        ]\n      };\n      const FUNCTION_BLOCK_MODE = {\n        className: \"function\",\n        relevance: 0,\n        keywords: KEYWORDS,\n        variants: [\n          {\n            begin: \"\\\\s(\\\\(\\\\.?.*?\\\\)|\" + RE_IDENT + \")\\\\s*=>\",\n            end: \"\\\\s*=>\",\n            returnBegin: true,\n            relevance: 0,\n            contains: [\n              {\n                className: \"params\",\n                variants: [\n                  {\n                    begin: RE_IDENT\n                  },\n                  {\n                    begin: RE_PARAM\n                  },\n                  {\n                    begin: /\\(\\s*\\)/\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            begin: \"\\\\s\\\\(\\\\.?[^;\\\\|]*\\\\)\\\\s*=>\",\n            end: \"\\\\s=>\",\n            returnBegin: true,\n            relevance: 0,\n            contains: [\n              {\n                className: \"params\",\n                relevance: 0,\n                variants: [PARAMS_MODE]\n              }\n            ]\n          },\n          {\n            begin: \"\\\\(\\\\.\\\\s\" + RE_IDENT + \"\\\\)\\\\s*=>\"\n          }\n        ]\n      };\n      MODULE_ACCESS_CONTENTS.push(FUNCTION_BLOCK_MODE);\n      const CONSTRUCTOR_MODE = {\n        className: \"constructor\",\n        begin: RE_MODULE_IDENT + \"\\\\(\",\n        end: \"\\\\)\",\n        illegal: \"\\\\n\",\n        keywords: KEYWORDS,\n        contains: [\n          hljs.QUOTE_STRING_MODE,\n          OPERATOR_MODE,\n          {\n            className: \"params\",\n            begin: \"\\\\b\" + RE_IDENT\n          }\n        ]\n      };\n      const PATTERN_MATCH_BLOCK_MODE = {\n        className: \"pattern-match\",\n        begin: \"\\\\|\",\n        returnBegin: true,\n        keywords: KEYWORDS,\n        end: \"=>\",\n        relevance: 0,\n        contains: [\n          CONSTRUCTOR_MODE,\n          OPERATOR_MODE,\n          {\n            relevance: 0,\n            className: \"constructor\",\n            begin: RE_MODULE_IDENT\n          }\n        ]\n      };\n      const MODULE_ACCESS_MODE = {\n        className: \"module-access\",\n        keywords: KEYWORDS,\n        returnBegin: true,\n        variants: [\n          {\n            begin: \"\\\\b(\" + RE_MODULE_IDENT + \"\\\\.)+\" + RE_IDENT\n          },\n          {\n            begin: \"\\\\b(\" + RE_MODULE_IDENT + \"\\\\.)+\\\\(\",\n            end: \"\\\\)\",\n            returnBegin: true,\n            contains: [\n              FUNCTION_BLOCK_MODE,\n              {\n                begin: \"\\\\(\",\n                end: \"\\\\)\",\n                skip: true\n              }\n            ].concat(MODULE_ACCESS_CONTENTS)\n          },\n          {\n            begin: \"\\\\b(\" + RE_MODULE_IDENT + \"\\\\.)+\\\\{\",\n            end: /\\}/\n          }\n        ],\n        contains: MODULE_ACCESS_CONTENTS\n      };\n      PARAMS_CONTENTS.push(MODULE_ACCESS_MODE);\n      return {\n        name: \"ReasonML\",\n        aliases: [\"re\"],\n        keywords: KEYWORDS,\n        illegal: \"(:-|:=|\\\\$\\\\{|\\\\+=)\",\n        contains: [\n          hljs.COMMENT(\"/\\\\*\", \"\\\\*/\", {\n            illegal: \"^(#,\\\\/\\\\/)\"\n          }),\n          {\n            className: \"character\",\n            begin: \"'(\\\\\\\\[^']+|[^'])'\",\n            illegal: \"\\\\n\",\n            relevance: 0\n          },\n          hljs.QUOTE_STRING_MODE,\n          {\n            className: \"literal\",\n            begin: \"\\\\(\\\\)\",\n            relevance: 0\n          },\n          {\n            className: \"literal\",\n            begin: \"\\\\[\\\\|\",\n            end: \"\\\\|\\\\]\",\n            relevance: 0,\n            contains: LIST_CONTENTS_MODES\n          },\n          {\n            className: \"literal\",\n            begin: \"\\\\[\",\n            end: \"\\\\]\",\n            relevance: 0,\n            contains: LIST_CONTENTS_MODES\n          },\n          CONSTRUCTOR_MODE,\n          {\n            className: \"operator\",\n            begin: RE_OPERATOR_SPACED,\n            illegal: \"-->\",\n            relevance: 0\n          },\n          NUMBER_MODE,\n          hljs.C_LINE_COMMENT_MODE,\n          PATTERN_MATCH_BLOCK_MODE,\n          FUNCTION_BLOCK_MODE,\n          {\n            className: \"module-def\",\n            begin: \"\\\\bmodule\\\\s+\" + RE_IDENT + \"\\\\s+\" + RE_MODULE_IDENT + \"\\\\s+=\\\\s+\\\\{\",\n            end: /\\}/,\n            returnBegin: true,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              {\n                className: \"module\",\n                relevance: 0,\n                begin: RE_MODULE_IDENT\n              },\n              {\n                begin: /\\{/,\n                end: /\\}/,\n                skip: true\n              }\n            ].concat(MODULE_ACCESS_CONTENTS)\n          },\n          MODULE_ACCESS_MODE\n        ]\n      };\n    }\n    module.exports = reasonml;\n  }\n});\n\nexport {\n  require_reasonml\n};\n//# sourceMappingURL=chunk-TGJLI64W.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.0003311659675091505
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-TGJLI64W.js (200) — 2024-07-28T11:41:35.484Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-TGJLI64W.js"
        }
      ]
    }
  ]
}