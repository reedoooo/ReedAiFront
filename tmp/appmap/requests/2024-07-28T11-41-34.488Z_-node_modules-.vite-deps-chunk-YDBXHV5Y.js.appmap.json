{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-YDBXHV5Y.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"c81-r2u4a+WecOIRYrxn1Ql7bBj6iSY\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/pascal.js\nvar require_pascal = __commonJS({\n  \"node_modules/refractor/lang/pascal.js\"(exports, module) {\n    module.exports = pascal;\n    pascal.displayName = \"pascal\";\n    pascal.aliases = [\"objectpascal\"];\n    function pascal(Prism) {\n      Prism.languages.pascal = {\n        directive: {\n          pattern: /\\{\\$[\\s\\S]*?\\}/,\n          greedy: true,\n          alias: [\"marco\", \"property\"]\n        },\n        comment: {\n          pattern: /\\(\\*[\\s\\S]*?\\*\\)|\\{[\\s\\S]*?\\}|\\/\\/.*/,\n          greedy: true\n        },\n        string: {\n          pattern: /(?:'(?:''|[^'\\r\\n])*'(?!')|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\n          greedy: true\n        },\n        asm: {\n          pattern: /(\\basm\\b)[\\s\\S]+?(?=\\bend\\s*[;[])/i,\n          lookbehind: true,\n          greedy: true,\n          inside: null\n          // see below\n        },\n        keyword: [\n          {\n            // Turbo Pascal\n            pattern: /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\n            lookbehind: true\n          },\n          {\n            // Free Pascal\n            pattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\n            lookbehind: true\n          },\n          {\n            // Object Pascal\n            pattern: /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\n            lookbehind: true\n          },\n          {\n            // Modifiers\n            pattern: /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\n            lookbehind: true\n          }\n        ],\n        number: [\n          // Hexadecimal, octal and binary\n          /(?:[&%]\\d+|\\$[a-f\\d]+)/i,\n          // Decimal\n          /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i\n        ],\n        operator: [\n          /\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/,\n          {\n            pattern: /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\n            lookbehind: true\n          }\n        ],\n        punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\n      };\n      Prism.languages.pascal.asm.inside = Prism.languages.extend(\"pascal\", {\n        asm: void 0,\n        keyword: void 0,\n        operator: void 0\n      });\n      Prism.languages.objectpascal = Prism.languages.pascal;\n    }\n  }\n});\n\nexport {\n  require_pascal\n};\n//# sourceMappingURL=chunk-YDBXHV5Y.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.0002115829847753048
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-YDBXHV5Y.js (200) â€” 2024-07-28T11:41:34.488Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-YDBXHV5Y.js"
        }
      ]
    }
  ]
}