{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-2ESA3FE4.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"1dde-ehKeIeFj/4MxepYNTV6+97OCnZA\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/xquery.js\nvar require_xquery = __commonJS({\n  \"node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/xquery.js\"(exports, module) {\n    function xquery(_hljs) {\n      const KEYWORDS = \"module schema namespace boundary-space preserve no-preserve strip default collation base-uri ordering context decimal-format decimal-separator copy-namespaces empty-sequence except exponent-separator external grouping-separator inherit no-inherit lax minus-sign per-mille percent schema-attribute schema-element strict unordered zero-digit declare import option function validate variable for at in let where order group by return if then else tumbling sliding window start when only end previous next stable ascending descending allowing empty greatest least some every satisfies switch case typeswitch try catch and or to union intersect instance of treat as castable cast map array delete insert into replace value rename copy modify update\";\n      const TYPE = \"item document-node node attribute document element comment namespace namespace-node processing-instruction text construction xs:anyAtomicType xs:untypedAtomic xs:duration xs:time xs:decimal xs:float xs:double xs:gYearMonth xs:gYear xs:gMonthDay xs:gMonth xs:gDay xs:boolean xs:base64Binary xs:hexBinary xs:anyURI xs:QName xs:NOTATION xs:dateTime xs:dateTimeStamp xs:date xs:string xs:normalizedString xs:token xs:language xs:NMTOKEN xs:Name xs:NCName xs:ID xs:IDREF xs:ENTITY xs:integer xs:nonPositiveInteger xs:negativeInteger xs:long xs:int xs:short xs:byte xs:nonNegativeInteger xs:unisignedLong xs:unsignedInt xs:unsignedShort xs:unsignedByte xs:positiveInteger xs:yearMonthDuration xs:dayTimeDuration\";\n      const LITERAL = \"eq ne lt le gt ge is self:: child:: descendant:: descendant-or-self:: attribute:: following:: following-sibling:: parent:: ancestor:: ancestor-or-self:: preceding:: preceding-sibling:: NaN\";\n      const BUILT_IN = {\n        className: \"built_in\",\n        variants: [\n          {\n            begin: /\\barray:/,\n            end: /(?:append|filter|flatten|fold-(?:left|right)|for-each(?:-pair)?|get|head|insert-before|join|put|remove|reverse|size|sort|subarray|tail)\\b/\n          },\n          {\n            begin: /\\bmap:/,\n            end: /(?:contains|entry|find|for-each|get|keys|merge|put|remove|size)\\b/\n          },\n          {\n            begin: /\\bmath:/,\n            end: /(?:a(?:cos|sin|tan[2]?)|cos|exp(?:10)?|log(?:10)?|pi|pow|sin|sqrt|tan)\\b/\n          },\n          {\n            begin: /\\bop:/,\n            end: /\\(/,\n            excludeEnd: true\n          },\n          {\n            begin: /\\bfn:/,\n            end: /\\(/,\n            excludeEnd: true\n          },\n          // do not highlight inbuilt strings as variable or xml element names\n          {\n            begin: /[^</$:'\"-]\\b(?:abs|accumulator-(?:after|before)|adjust-(?:date(?:Time)?|time)-to-timezone|analyze-string|apply|available-(?:environment-variables|system-properties)|avg|base-uri|boolean|ceiling|codepoints?-(?:equal|to-string)|collation-key|collection|compare|concat|contains(?:-token)?|copy-of|count|current(?:-)?(?:date(?:Time)?|time|group(?:ing-key)?|output-uri|merge-(?:group|key))?data|dateTime|days?-from-(?:date(?:Time)?|duration)|deep-equal|default-(?:collation|language)|distinct-values|document(?:-uri)?|doc(?:-available)?|element-(?:available|with-id)|empty|encode-for-uri|ends-with|environment-variable|error|escape-html-uri|exactly-one|exists|false|filter|floor|fold-(?:left|right)|for-each(?:-pair)?|format-(?:date(?:Time)?|time|integer|number)|function-(?:arity|available|lookup|name)|generate-id|has-children|head|hours-from-(?:dateTime|duration|time)|id(?:ref)?|implicit-timezone|in-scope-prefixes|index-of|innermost|insert-before|iri-to-uri|json-(?:doc|to-xml)|key|lang|last|load-xquery-module|local-name(?:-from-QName)?|(?:lower|upper)-case|matches|max|minutes-from-(?:dateTime|duration|time)|min|months?-from-(?:date(?:Time)?|duration)|name(?:space-uri-?(?:for-prefix|from-QName)?)?|nilled|node-name|normalize-(?:space|unicode)|not|number|one-or-more|outermost|parse-(?:ietf-date|json)|path|position|(?:prefix-from-)?QName|random-number-generator|regex-group|remove|replace|resolve-(?:QName|uri)|reverse|root|round(?:-half-to-even)?|seconds-from-(?:dateTime|duration|time)|snapshot|sort|starts-with|static-base-uri|stream-available|string-?(?:join|length|to-codepoints)?|subsequence|substring-?(?:after|before)?|sum|system-property|tail|timezone-from-(?:date(?:Time)?|time)|tokenize|trace|trans(?:form|late)|true|type-available|unordered|unparsed-(?:entity|text)?-?(?:public-id|uri|available|lines)?|uri-collection|xml-to-json|years?-from-(?:date(?:Time)?|duration)|zero-or-one)\\b/\n          },\n          {\n            begin: /\\blocal:/,\n            end: /\\(/,\n            excludeEnd: true\n          },\n          {\n            begin: /\\bzip:/,\n            end: /(?:zip-file|(?:xml|html|text|binary)-entry| (?:update-)?entries)\\b/\n          },\n          {\n            begin: /\\b(?:util|db|functx|app|xdmp|xmldb):/,\n            end: /\\(/,\n            excludeEnd: true\n          }\n        ]\n      };\n      const TITLE = {\n        className: \"title\",\n        begin: /\\bxquery version \"[13]\\.[01]\"\\s?(?:encoding \".+\")?/,\n        end: /;/\n      };\n      const VAR = {\n        className: \"variable\",\n        begin: /[$][\\w\\-:]+/\n      };\n      const NUMBER = {\n        className: \"number\",\n        begin: /(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b/,\n        relevance: 0\n      };\n      const STRING = {\n        className: \"string\",\n        variants: [\n          {\n            begin: /\"/,\n            end: /\"/,\n            contains: [\n              {\n                begin: /\"\"/,\n                relevance: 0\n              }\n            ]\n          },\n          {\n            begin: /'/,\n            end: /'/,\n            contains: [\n              {\n                begin: /''/,\n                relevance: 0\n              }\n            ]\n          }\n        ]\n      };\n      const ANNOTATION = {\n        className: \"meta\",\n        begin: /%[\\w\\-:]+/\n      };\n      const COMMENT = {\n        className: \"comment\",\n        begin: /\\(:/,\n        end: /:\\)/,\n        relevance: 10,\n        contains: [\n          {\n            className: \"doctag\",\n            begin: /@\\w+/\n          }\n        ]\n      };\n      const COMPUTED = {\n        beginKeywords: \"element attribute comment document processing-instruction\",\n        end: /\\{/,\n        excludeEnd: true\n      };\n      const DIRECT = {\n        begin: /<([\\w._:-]+)(\\s+\\S*=('|\").*('|\"))?>/,\n        end: /(\\/[\\w._:-]+>)/,\n        subLanguage: \"xml\",\n        contains: [\n          {\n            begin: /\\{/,\n            end: /\\}/,\n            subLanguage: \"xquery\"\n          },\n          \"self\"\n        ]\n      };\n      const CONTAINS = [\n        VAR,\n        BUILT_IN,\n        STRING,\n        NUMBER,\n        COMMENT,\n        ANNOTATION,\n        TITLE,\n        COMPUTED,\n        DIRECT\n      ];\n      return {\n        name: \"XQuery\",\n        aliases: [\n          \"xpath\",\n          \"xq\"\n        ],\n        case_insensitive: false,\n        illegal: /(proc)|(abstract)|(extends)|(until)|(#)/,\n        keywords: {\n          $pattern: /[a-zA-Z$][a-zA-Z0-9_:-]*/,\n          keyword: KEYWORDS,\n          type: TYPE,\n          literal: LITERAL\n        },\n        contains: CONTAINS\n      };\n    }\n    module.exports = xquery;\n  }\n});\n\nexport {\n  require_xquery\n};\n//# sourceMappingURL=chunk-2ESA3FE4.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00023179093841463327
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-2ESA3FE4.js (200) — 2024-07-28T11:41:34.928Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-2ESA3FE4.js"
        }
      ]
    }
  ]
}