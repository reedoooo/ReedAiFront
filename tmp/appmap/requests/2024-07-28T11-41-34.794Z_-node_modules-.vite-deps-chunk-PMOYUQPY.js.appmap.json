{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-PMOYUQPY.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"15e1-2VY1tdDfantJDk59MCLcCeq5lww\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  require_csharp\n} from \"/node_modules/.vite/deps/chunk-2ZAPNQ7E.js?v=b39bb78e\";\nimport {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/cshtml.js\nvar require_cshtml = __commonJS({\n  \"node_modules/refractor/lang/cshtml.js\"(exports, module) {\n    var refractorCsharp = require_csharp();\n    module.exports = cshtml;\n    cshtml.displayName = \"cshtml\";\n    cshtml.aliases = [\"razor\"];\n    function cshtml(Prism) {\n      Prism.register(refractorCsharp);\n      (function(Prism2) {\n        var commentLike = /\\/(?![/*])|\\/\\/.*[\\r\\n]|\\/\\*[^*]*(?:\\*(?!\\/)[^*]*)*\\*\\//.source;\n        var stringLike = /@(?!\")|\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|@\"(?:[^\\\\\"]|\"\"|\\\\[\\s\\S])*\"(?!\")/.source + \"|\" + /'(?:(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'|(?=[^\\\\](?!')))/.source;\n        function nested(pattern, depthLog2) {\n          for (var i = 0; i < depthLog2; i++) {\n            pattern = pattern.replace(/<self>/g, function() {\n              return \"(?:\" + pattern + \")\";\n            });\n          }\n          return pattern.replace(/<self>/g, \"[^\\\\s\\\\S]\").replace(/<str>/g, \"(?:\" + stringLike + \")\").replace(/<comment>/g, \"(?:\" + commentLike + \")\");\n        }\n        var round = nested(/\\((?:[^()'\"@/]|<str>|<comment>|<self>)*\\)/.source, 2);\n        var square = nested(/\\[(?:[^\\[\\]'\"@/]|<str>|<comment>|<self>)*\\]/.source, 2);\n        var curly = nested(/\\{(?:[^{}'\"@/]|<str>|<comment>|<self>)*\\}/.source, 2);\n        var angle = nested(/<(?:[^<>'\"@/]|<str>|<comment>|<self>)*>/.source, 2);\n        var tagAttrs = /(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?/.source;\n        var tagContent = /(?!\\d)[^\\s>\\/=$<%]+/.source + tagAttrs + /\\s*\\/?>/.source;\n        var tagRegion = /\\B@?/.source + \"(?:\" + /<([a-zA-Z][\\w:]*)/.source + tagAttrs + /\\s*>/.source + \"(?:\" + (/[^<]/.source + \"|\" + // all tags that are not the start tag\n        // eslint-disable-next-line regexp/strict\n        /<\\/?(?!\\1\\b)/.source + tagContent + \"|\" + // nested start tag\n        nested(\n          // eslint-disable-next-line regexp/strict\n          /<\\1/.source + tagAttrs + /\\s*>/.source + \"(?:\" + (/[^<]/.source + \"|\" + // all tags that are not the start tag\n          // eslint-disable-next-line regexp/strict\n          /<\\/?(?!\\1\\b)/.source + tagContent + \"|<self>\") + \")*\" + // eslint-disable-next-line regexp/strict\n          /<\\/\\1\\s*>/.source,\n          2\n        )) + \")*\" + // eslint-disable-next-line regexp/strict\n        /<\\/\\1\\s*>/.source + \"|\" + /</.source + tagContent + \")\";\n        Prism2.languages.cshtml = Prism2.languages.extend(\"markup\", {});\n        var csharpWithHtml = Prism2.languages.insertBefore(\n          \"csharp\",\n          \"string\",\n          {\n            html: {\n              pattern: RegExp(tagRegion),\n              greedy: true,\n              inside: Prism2.languages.cshtml\n            }\n          },\n          {\n            csharp: Prism2.languages.extend(\"csharp\", {})\n          }\n        );\n        var cs = {\n          pattern: /\\S[\\s\\S]*/,\n          alias: \"language-csharp\",\n          inside: csharpWithHtml\n        };\n        Prism2.languages.insertBefore(\"cshtml\", \"prolog\", {\n          \"razor-comment\": {\n            pattern: /@\\*[\\s\\S]*?\\*@/,\n            greedy: true,\n            alias: \"comment\"\n          },\n          block: {\n            pattern: RegExp(\n              /(^|[^@])@/.source + \"(?:\" + [\n                // @{ ... }\n                curly,\n                // @code{ ... }\n                /(?:code|functions)\\s*/.source + curly,\n                // @for (...) { ... }\n                /(?:for|foreach|lock|switch|using|while)\\s*/.source + round + /\\s*/.source + curly,\n                // @do { ... } while (...);\n                /do\\s*/.source + curly + /\\s*while\\s*/.source + round + /(?:\\s*;)?/.source,\n                // @try { ... } catch (...) { ... } finally { ... }\n                /try\\s*/.source + curly + /\\s*catch\\s*/.source + round + /\\s*/.source + curly + /\\s*finally\\s*/.source + curly,\n                // @if (...) {...} else if (...) {...} else {...}\n                /if\\s*/.source + round + /\\s*/.source + curly + \"(?:\" + /\\s*else/.source + \"(?:\" + /\\s+if\\s*/.source + round + \")?\" + /\\s*/.source + curly + \")*\"\n              ].join(\"|\") + \")\"\n            ),\n            lookbehind: true,\n            greedy: true,\n            inside: {\n              keyword: /^@\\w*/,\n              csharp: cs\n            }\n          },\n          directive: {\n            pattern: /^([ \\t]*)@(?:addTagHelper|attribute|implements|inherits|inject|layout|model|namespace|page|preservewhitespace|removeTagHelper|section|tagHelperPrefix|using)(?=\\s).*/m,\n            lookbehind: true,\n            greedy: true,\n            inside: {\n              keyword: /^@\\w+/,\n              csharp: cs\n            }\n          },\n          value: {\n            pattern: RegExp(\n              /(^|[^@])@/.source + /(?:await\\b\\s*)?/.source + \"(?:\" + /\\w+\\b/.source + \"|\" + round + \")(?:\" + /[?!]?\\.\\w+\\b/.source + \"|\" + round + \"|\" + square + \"|\" + angle + round + \")*\"\n            ),\n            lookbehind: true,\n            greedy: true,\n            alias: \"variable\",\n            inside: {\n              keyword: /^@/,\n              csharp: cs\n            }\n          },\n          \"delegate-operator\": {\n            pattern: /(^|[^@])@(?=<)/,\n            lookbehind: true,\n            alias: \"operator\"\n          }\n        });\n        Prism2.languages.razor = Prism2.languages.cshtml;\n      })(Prism);\n    }\n  }\n});\n\nexport {\n  require_cshtml\n};\n//# sourceMappingURL=chunk-PMOYUQPY.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00020987493917346
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-PMOYUQPY.js (200) â€” 2024-07-28T11:41:34.794Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-PMOYUQPY.js"
        }
      ]
    }
  ]
}