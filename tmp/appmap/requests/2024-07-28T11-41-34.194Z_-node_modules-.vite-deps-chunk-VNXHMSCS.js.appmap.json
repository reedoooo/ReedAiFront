{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-VNXHMSCS.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"1936-nPqwVnvpdzGtJX6ST6EyAm1/TAE\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/stylus.js\nvar require_stylus = __commonJS({\n  \"node_modules/refractor/lang/stylus.js\"(exports, module) {\n    module.exports = stylus;\n    stylus.displayName = \"stylus\";\n    stylus.aliases = [];\n    function stylus(Prism) {\n      ;\n      (function(Prism2) {\n        var unit = {\n          pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n          lookbehind: true\n        };\n        var number = {\n          pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n          lookbehind: true\n        };\n        var inside = {\n          comment: {\n            pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n            lookbehind: true\n          },\n          url: {\n            pattern: /\\burl\\(([\"']?).*?\\1\\)/i,\n            greedy: true\n          },\n          string: {\n            pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n            greedy: true\n          },\n          interpolation: null,\n          // See below\n          func: null,\n          // See below\n          important: /\\B!(?:important|optional)\\b/i,\n          keyword: {\n            pattern: /(^|\\s+)(?:(?:else|for|if|return|unless)(?=\\s|$)|@[\\w-]+)/,\n            lookbehind: true\n          },\n          hexcode: /#[\\da-f]{3,6}/i,\n          color: [\n            /\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i,\n            {\n              pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n              inside: {\n                unit,\n                number,\n                function: /[\\w-]+(?=\\()/,\n                punctuation: /[(),]/\n              }\n            }\n          ],\n          entity: /\\\\[\\da-f]{1,8}/i,\n          unit,\n          boolean: /\\b(?:false|true)\\b/,\n          operator: [\n            // We want non-word chars around \"-\" because it is\n            // accepted in property names.\n            /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/\n          ],\n          number,\n          punctuation: /[{}()\\[\\];:,]/\n        };\n        inside[\"interpolation\"] = {\n          pattern: /\\{[^\\r\\n}:]+\\}/,\n          alias: \"variable\",\n          inside: {\n            delimiter: {\n              pattern: /^\\{|\\}$/,\n              alias: \"punctuation\"\n            },\n            rest: inside\n          }\n        };\n        inside[\"func\"] = {\n          pattern: /[\\w-]+\\([^)]*\\).*/,\n          inside: {\n            function: /^[^(]+/,\n            rest: inside\n          }\n        };\n        Prism2.languages.stylus = {\n          \"atrule-declaration\": {\n            pattern: /(^[ \\t]*)@.+/m,\n            lookbehind: true,\n            inside: {\n              atrule: /^@[\\w-]+/,\n              rest: inside\n            }\n          },\n          \"variable-declaration\": {\n            pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n            lookbehind: true,\n            inside: {\n              variable: /^\\S+/,\n              rest: inside\n            }\n          },\n          statement: {\n            pattern: /(^[ \\t]*)(?:else|for|if|return|unless)[ \\t].+/m,\n            lookbehind: true,\n            inside: {\n              keyword: /^\\S+/,\n              rest: inside\n            }\n          },\n          // A property/value pair cannot end with a comma or a brace\n          // It cannot have indented content unless it ended with a semicolon\n          \"property-declaration\": {\n            pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,\n            lookbehind: true,\n            inside: {\n              property: {\n                pattern: /^[^\\s:]+/,\n                inside: {\n                  interpolation: inside.interpolation\n                }\n              },\n              rest: inside\n            }\n          },\n          // A selector can contain parentheses only as part of a pseudo-element\n          // It can span multiple lines.\n          // It must end with a comma or an accolade or have indented content.\n          selector: {\n            pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\n            lookbehind: true,\n            inside: {\n              interpolation: inside.interpolation,\n              comment: inside.comment,\n              punctuation: /[{},]/\n            }\n          },\n          func: inside.func,\n          string: inside.string,\n          comment: {\n            pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n            lookbehind: true,\n            greedy: true\n          },\n          interpolation: inside.interpolation,\n          punctuation: /[{}()\\[\\];:.]/\n        };\n      })(Prism);\n    }\n  }\n});\n\nexport {\n  require_stylus\n};\n//# sourceMappingURL=chunk-VNXHMSCS.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00013170798774808645
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-VNXHMSCS.js (200) â€” 2024-07-28T11:41:34.194Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-VNXHMSCS.js"
        }
      ]
    }
  ]
}