{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-TO5OYCV6.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"16ab-Ng4ypxXXi+GXXOZL+3qwBBP1uDA\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/javastacktrace.js\nvar require_javastacktrace = __commonJS({\n  \"node_modules/refractor/lang/javastacktrace.js\"(exports, module) {\n    module.exports = javastacktrace;\n    javastacktrace.displayName = \"javastacktrace\";\n    javastacktrace.aliases = [];\n    function javastacktrace(Prism) {\n      Prism.languages.javastacktrace = {\n        // java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\n        // Caused by: java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\n        // Caused by: com.example.myproject.MyProjectServletException\n        // Caused by: MidLevelException: LowLevelException\n        // Suppressed: Resource$CloseFailException: Resource ID = 0\n        summary: {\n          pattern: /^([\\t ]*)(?:(?:Caused by:|Suppressed:|Exception in thread \"[^\"]*\")[\\t ]+)?[\\w$.]+(?::.*)?$/m,\n          lookbehind: true,\n          inside: {\n            keyword: {\n              pattern: /^([\\t ]*)(?:(?:Caused by|Suppressed)(?=:)|Exception in thread)/m,\n              lookbehind: true\n            },\n            // the current thread if the summary starts with 'Exception in thread'\n            string: {\n              pattern: /^(\\s*)\"[^\"]*\"/,\n              lookbehind: true\n            },\n            exceptions: {\n              pattern: /^(:?\\s*)[\\w$.]+(?=:|$)/,\n              lookbehind: true,\n              inside: {\n                \"class-name\": /[\\w$]+$/,\n                namespace: /\\b[a-z]\\w*\\b/,\n                punctuation: /\\./\n              }\n            },\n            message: {\n              pattern: /(:\\s*)\\S.*/,\n              lookbehind: true,\n              alias: \"string\"\n            },\n            punctuation: /:/\n          }\n        },\n        // at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1166)\n        // at org.hsqldb.jdbc.Util.throwError(Unknown Source) here could be some notes\n        // at java.base/java.lang.Class.forName0(Native Method)\n        // at Util.<init>(Unknown Source)\n        // at com.foo.loader/foo@9.0/com.foo.Main.run(Main.java:101)\n        // at com.foo.loader//com.foo.bar.App.run(App.java:12)\n        // at acme@2.1/org.acme.Lib.test(Lib.java:80)\n        // at MyClass.mash(MyClass.java:9)\n        //\n        // More information:\n        // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/StackTraceElement.html#toString()\n        //\n        // A valid Java module name is defined as:\n        //   \"A module name consists of one or more Java identifiers (§3.8) separated by \".\" tokens.\"\n        // https://docs.oracle.com/javase/specs/jls/se9/html/jls-6.html#jls-ModuleName\n        //\n        // A Java module version is defined by this class:\n        // https://docs.oracle.com/javase/9/docs/api/java/lang/module/ModuleDescriptor.Version.html\n        // This is the implementation of the `parse` method in JDK13:\n        // https://github.com/matcdac/jdk/blob/2305df71d1b7710266ae0956d73927a225132c0f/src/java.base/share/classes/java/lang/module/ModuleDescriptor.java#L1108\n        // However, to keep this simple, a version will be matched by the pattern /@[\\w$.+-]*/.\n        \"stack-frame\": {\n          pattern: /^([\\t ]*)at (?:[\\w$./]|@[\\w$.+-]*\\/)+(?:<init>)?\\([^()]*\\)/m,\n          lookbehind: true,\n          inside: {\n            keyword: {\n              pattern: /^(\\s*)at(?= )/,\n              lookbehind: true\n            },\n            source: [\n              // (Main.java:15)\n              // (Main.scala:15)\n              {\n                pattern: /(\\()\\w+\\.\\w+:\\d+(?=\\))/,\n                lookbehind: true,\n                inside: {\n                  file: /^\\w+\\.\\w+/,\n                  punctuation: /:/,\n                  \"line-number\": {\n                    pattern: /\\b\\d+\\b/,\n                    alias: \"number\"\n                  }\n                }\n              },\n              // (Unknown Source)\n              // (Native Method)\n              // (...something...)\n              {\n                pattern: /(\\()[^()]*(?=\\))/,\n                lookbehind: true,\n                inside: {\n                  keyword: /^(?:Native Method|Unknown Source)$/\n                }\n              }\n            ],\n            \"class-name\": /[\\w$]+(?=\\.(?:<init>|[\\w$]+)\\()/,\n            function: /(?:<init>|[\\w$]+)(?=\\()/,\n            \"class-loader\": {\n              pattern: /(\\s)[a-z]\\w*(?:\\.[a-z]\\w*)*(?=\\/[\\w@$.]*\\/)/,\n              lookbehind: true,\n              alias: \"namespace\",\n              inside: {\n                punctuation: /\\./\n              }\n            },\n            module: {\n              pattern: /([\\s/])[a-z]\\w*(?:\\.[a-z]\\w*)*(?:@[\\w$.+-]*)?(?=\\/)/,\n              lookbehind: true,\n              inside: {\n                version: {\n                  pattern: /(@)[\\s\\S]+/,\n                  lookbehind: true,\n                  alias: \"number\"\n                },\n                punctuation: /[@.]/\n              }\n            },\n            namespace: {\n              pattern: /(?:\\b[a-z]\\w*\\.)+/,\n              inside: {\n                punctuation: /\\./\n              }\n            },\n            punctuation: /[()/.]/\n          }\n        },\n        // ... 32 more\n        // ... 32 common frames omitted\n        more: {\n          pattern: /^([\\t ]*)\\.{3} \\d+ [a-z]+(?: [a-z]+)*/m,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\.{3}/,\n            number: /\\d+/,\n            keyword: /\\b[a-z]+(?: [a-z]+)*\\b/\n          }\n        }\n      };\n    }\n  }\n});\n\nexport {\n  require_javastacktrace\n};\n//# sourceMappingURL=chunk-TO5OYCV6.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.0001819160534068942
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-TO5OYCV6.js (200) — 2024-07-28T11:41:34.675Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-TO5OYCV6.js"
        }
      ]
    }
  ]
}