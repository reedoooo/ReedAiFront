{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-VDWCXEB5.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"176c-c2RjG/I2PyD0+l/QyhJtvLkzQIo\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/routeros.js\nvar require_routeros = __commonJS({\n  \"node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/routeros.js\"(exports, module) {\n    function routeros(hljs) {\n      const STATEMENTS = \"foreach do while for if from to step else on-error and or not in\";\n      const GLOBAL_COMMANDS = \"global local beep delay put len typeof pick log time set find environment terminal error execute parse resolve toarray tobool toid toip toip6 tonum tostr totime\";\n      const COMMON_COMMANDS = \"add remove enable disable set get print export edit find run debug error info warning\";\n      const LITERALS = \"true false yes no nothing nil null\";\n      const OBJECTS = \"traffic-flow traffic-generator firewall scheduler aaa accounting address-list address align area bandwidth-server bfd bgp bridge client clock community config connection console customer default dhcp-client dhcp-server discovery dns e-mail ethernet filter firmware gps graphing group hardware health hotspot identity igmp-proxy incoming instance interface ip ipsec ipv6 irq l2tp-server lcd ldp logging mac-server mac-winbox mangle manual mirror mme mpls nat nd neighbor network note ntp ospf ospf-v3 ovpn-server page peer pim ping policy pool port ppp pppoe-client pptp-server prefix profile proposal proxy queue radius resource rip ripng route routing screen script security-profiles server service service-port settings shares smb sms sniffer snmp snooper socks sstp-server system tool tracking type upgrade upnp user-manager users user vlan secret vrrp watchdog web-access wireless pptp pppoe lan wan layer7-protocol lease simple raw\";\n      const VAR = {\n        className: \"variable\",\n        variants: [\n          {\n            begin: /\\$[\\w\\d#@][\\w\\d_]*/\n          },\n          {\n            begin: /\\$\\{(.*?)\\}/\n          }\n        ]\n      };\n      const QUOTE_STRING = {\n        className: \"string\",\n        begin: /\"/,\n        end: /\"/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          VAR,\n          {\n            className: \"variable\",\n            begin: /\\$\\(/,\n            end: /\\)/,\n            contains: [hljs.BACKSLASH_ESCAPE]\n          }\n        ]\n      };\n      const APOS_STRING = {\n        className: \"string\",\n        begin: /'/,\n        end: /'/\n      };\n      return {\n        name: \"Microtik RouterOS script\",\n        aliases: [\n          \"mikrotik\"\n        ],\n        case_insensitive: true,\n        keywords: {\n          $pattern: /:?[\\w-]+/,\n          literal: LITERALS,\n          keyword: STATEMENTS + \" :\" + STATEMENTS.split(\" \").join(\" :\") + \" :\" + GLOBAL_COMMANDS.split(\" \").join(\" :\")\n        },\n        contains: [\n          {\n            // illegal syntax\n            variants: [\n              {\n                // -- comment\n                begin: /\\/\\*/,\n                end: /\\*\\//\n              },\n              {\n                // Stan comment\n                begin: /\\/\\//,\n                end: /$/\n              },\n              {\n                // HTML tags\n                begin: /<\\//,\n                end: />/\n              }\n            ],\n            illegal: /./\n          },\n          hljs.COMMENT(\"^#\", \"$\"),\n          QUOTE_STRING,\n          APOS_STRING,\n          VAR,\n          // attribute=value\n          {\n            // > is to avoid matches with => in other grammars\n            begin: /[\\w-]+=([^\\s{}[\\]()>]+)/,\n            relevance: 0,\n            returnBegin: true,\n            contains: [\n              {\n                className: \"attribute\",\n                begin: /[^=]+/\n              },\n              {\n                begin: /=/,\n                endsWithParent: true,\n                relevance: 0,\n                contains: [\n                  QUOTE_STRING,\n                  APOS_STRING,\n                  VAR,\n                  {\n                    className: \"literal\",\n                    begin: \"\\\\b(\" + LITERALS.split(\" \").join(\"|\") + \")\\\\b\"\n                  },\n                  {\n                    // Do not format unclassified values. Needed to exclude highlighting of values as built_in.\n                    begin: /(\"[^\"]*\"|[^\\s{}[\\]]+)/\n                  }\n                  /*\n                  {\n                    // IPv4 addresses and subnets\n                    className: 'number',\n                    variants: [\n                      {begin: IPADDR_wBITMASK+'(,'+IPADDR_wBITMASK+')*'}, //192.168.0.0/24,1.2.3.0/24\n                      {begin: IPADDR+'-'+IPADDR},       // 192.168.0.1-192.168.0.3\n                      {begin: IPADDR+'(,'+IPADDR+')*'}, // 192.168.0.1,192.168.0.34,192.168.24.1,192.168.0.1\n                    ]\n                  },\n                  {\n                    // MAC addresses and DHCP Client IDs\n                    className: 'number',\n                    begin: /\\b(1:)?([0-9A-Fa-f]{1,2}[:-]){5}([0-9A-Fa-f]){1,2}\\b/,\n                  },\n                  */\n                ]\n              }\n            ]\n          },\n          {\n            // HEX values\n            className: \"number\",\n            begin: /\\*[0-9a-fA-F]+/\n          },\n          {\n            begin: \"\\\\b(\" + COMMON_COMMANDS.split(\" \").join(\"|\") + \")([\\\\s[(\\\\]|])\",\n            returnBegin: true,\n            contains: [\n              {\n                className: \"builtin-name\",\n                // 'function',\n                begin: /\\w+/\n              }\n            ]\n          },\n          {\n            className: \"built_in\",\n            variants: [\n              {\n                begin: \"(\\\\.\\\\./|/|\\\\s)((\" + OBJECTS.split(\" \").join(\"|\") + \");?\\\\s)+\"\n              },\n              {\n                begin: /\\.\\./,\n                relevance: 0\n              }\n            ]\n          }\n        ]\n      };\n    }\n    module.exports = routeros;\n  }\n});\n\nexport {\n  require_routeros\n};\n//# sourceMappingURL=chunk-VDWCXEB5.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.0006941669853404164
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-VDWCXEB5.js (200) â€” 2024-07-28T11:41:35.284Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-VDWCXEB5.js"
        }
      ]
    }
  ]
}