{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-F5XH6LXN.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"c35-W3kamQ1VRGrYVZyybu5jQNUk73Q\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/promql.js\nvar require_promql = __commonJS({\n  \"node_modules/refractor/lang/promql.js\"(exports, module) {\n    module.exports = promql;\n    promql.displayName = \"promql\";\n    promql.aliases = [];\n    function promql(Prism) {\n      ;\n      (function(Prism2) {\n        var aggregations = [\n          \"sum\",\n          \"min\",\n          \"max\",\n          \"avg\",\n          \"group\",\n          \"stddev\",\n          \"stdvar\",\n          \"count\",\n          \"count_values\",\n          \"bottomk\",\n          \"topk\",\n          \"quantile\"\n        ];\n        var vectorMatching = [\n          \"on\",\n          \"ignoring\",\n          \"group_right\",\n          \"group_left\",\n          \"by\",\n          \"without\"\n        ];\n        var offsetModifier = [\"offset\"];\n        var keywords = aggregations.concat(vectorMatching, offsetModifier);\n        Prism2.languages.promql = {\n          comment: {\n            pattern: /(^[ \\t]*)#.*/m,\n            lookbehind: true\n          },\n          \"vector-match\": {\n            // Match the comma-separated label lists inside vector matching:\n            pattern: new RegExp(\n              \"((?:\" + vectorMatching.join(\"|\") + \")\\\\s*)\\\\([^)]*\\\\)\"\n            ),\n            lookbehind: true,\n            inside: {\n              \"label-key\": {\n                pattern: /\\b[^,]+\\b/,\n                alias: \"attr-name\"\n              },\n              punctuation: /[(),]/\n            }\n          },\n          \"context-labels\": {\n            pattern: /\\{[^{}]*\\}/,\n            inside: {\n              \"label-key\": {\n                pattern: /\\b[a-z_]\\w*(?=\\s*(?:=|![=~]))/,\n                alias: \"attr-name\"\n              },\n              \"label-value\": {\n                pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n                greedy: true,\n                alias: \"attr-value\"\n              },\n              punctuation: /\\{|\\}|=~?|![=~]|,/\n            }\n          },\n          \"context-range\": [\n            {\n              pattern: /\\[[\\w\\s:]+\\]/,\n              // [1m]\n              inside: {\n                punctuation: /\\[|\\]|:/,\n                \"range-duration\": {\n                  pattern: /\\b(?:\\d+(?:[smhdwy]|ms))+\\b/i,\n                  alias: \"number\"\n                }\n              }\n            },\n            {\n              pattern: /(\\boffset\\s+)\\w+/,\n              // offset 1m\n              lookbehind: true,\n              inside: {\n                \"range-duration\": {\n                  pattern: /\\b(?:\\d+(?:[smhdwy]|ms))+\\b/i,\n                  alias: \"number\"\n                }\n              }\n            }\n          ],\n          keyword: new RegExp(\"\\\\b(?:\" + keywords.join(\"|\") + \")\\\\b\", \"i\"),\n          function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n          number: /[-+]?(?:(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[-+]?\\d+)?\\b|\\b(?:0x[0-9a-f]+|nan|inf)\\b)/i,\n          operator: /[\\^*/%+-]|==|!=|<=|<|>=|>|\\b(?:and|or|unless)\\b/i,\n          punctuation: /[{};()`,.[\\]]/\n        };\n      })(Prism);\n    }\n  }\n});\n\nexport {\n  require_promql\n};\n//# sourceMappingURL=chunk-F5XH6LXN.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.0001632090425118804
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-F5XH6LXN.js (200) â€” 2024-07-28T11:41:34.486Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-F5XH6LXN.js"
        }
      ]
    }
  ]
}