{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-Z6NGPWDE.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"c6e-XIcVF6FWJAxDqhTXdXc3dz52STM\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/pascaligo.js\nvar require_pascaligo = __commonJS({\n  \"node_modules/refractor/lang/pascaligo.js\"(exports, module) {\n    module.exports = pascaligo;\n    pascaligo.displayName = \"pascaligo\";\n    pascaligo.aliases = [];\n    function pascaligo(Prism) {\n      ;\n      (function(Prism2) {\n        var braces = /\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\)/.source;\n        var type = /(?:\\b\\w+(?:<braces>)?|<braces>)/.source.replace(\n          /<braces>/g,\n          function() {\n            return braces;\n          }\n        );\n        var pascaligo2 = Prism2.languages.pascaligo = {\n          comment: /\\(\\*[\\s\\S]+?\\*\\)|\\/\\/.*/,\n          string: {\n            pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\^[a-z]/i,\n            greedy: true\n          },\n          \"class-name\": [\n            {\n              pattern: RegExp(\n                /(\\btype\\s+\\w+\\s+is\\s+)<type>/.source.replace(\n                  /<type>/g,\n                  function() {\n                    return type;\n                  }\n                ),\n                \"i\"\n              ),\n              lookbehind: true,\n              inside: null\n              // see below\n            },\n            {\n              pattern: RegExp(\n                /<type>(?=\\s+is\\b)/.source.replace(/<type>/g, function() {\n                  return type;\n                }),\n                \"i\"\n              ),\n              inside: null\n              // see below\n            },\n            {\n              pattern: RegExp(\n                /(:\\s*)<type>/.source.replace(/<type>/g, function() {\n                  return type;\n                })\n              ),\n              lookbehind: true,\n              inside: null\n              // see below\n            }\n          ],\n          keyword: {\n            pattern: /(^|[^&])\\b(?:begin|block|case|const|else|end|fail|for|from|function|if|is|nil|of|remove|return|skip|then|type|var|while|with)\\b/i,\n            lookbehind: true\n          },\n          boolean: {\n            pattern: /(^|[^&])\\b(?:False|True)\\b/i,\n            lookbehind: true\n          },\n          builtin: {\n            pattern: /(^|[^&])\\b(?:bool|int|list|map|nat|record|string|unit)\\b/i,\n            lookbehind: true\n          },\n          function: /\\b\\w+(?=\\s*\\()/,\n          number: [\n            // Hexadecimal, octal and binary\n            /%[01]+|&[0-7]+|\\$[a-f\\d]+/i,\n            // Decimal\n            /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?(?:mtz|n)?/i\n          ],\n          operator: /->|=\\/=|\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=|]|\\b(?:and|mod|or)\\b/,\n          punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.{}]/\n        };\n        var classNameInside = [\n          \"comment\",\n          \"keyword\",\n          \"builtin\",\n          \"operator\",\n          \"punctuation\"\n        ].reduce(function(accum, key) {\n          accum[key] = pascaligo2[key];\n          return accum;\n        }, {});\n        pascaligo2[\"class-name\"].forEach(function(p) {\n          p.inside = classNameInside;\n        });\n      })(Prism);\n    }\n  }\n});\n\nexport {\n  require_pascaligo\n};\n//# sourceMappingURL=chunk-Z6NGPWDE.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00022312498185783625
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-Z6NGPWDE.js (200) â€” 2024-07-28T11:41:34.492Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-Z6NGPWDE.js"
        }
      ]
    }
  ]
}