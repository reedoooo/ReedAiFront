{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-B7BC6ZL4.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"fa6-D1G5sj5GLTf8seWNhNP+MqNYBUQ\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/docker.js\nvar require_docker = __commonJS({\n  \"node_modules/refractor/lang/docker.js\"(exports, module) {\n    module.exports = docker;\n    docker.displayName = \"docker\";\n    docker.aliases = [\"dockerfile\"];\n    function docker(Prism) {\n      ;\n      (function(Prism2) {\n        var spaceAfterBackSlash = /\\\\[\\r\\n](?:\\s|\\\\[\\r\\n]|#.*(?!.))*(?![\\s#]|\\\\[\\r\\n])/.source;\n        var space = /(?:[ \\t]+(?![ \\t])(?:<SP_BS>)?|<SP_BS>)/.source.replace(\n          /<SP_BS>/g,\n          function() {\n            return spaceAfterBackSlash;\n          }\n        );\n        var string = /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"|'(?:[^'\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*'/.source;\n        var option = /--[\\w-]+=(?:<STR>|(?![\"'])(?:[^\\s\\\\]|\\\\.)+)/.source.replace(\n          /<STR>/g,\n          function() {\n            return string;\n          }\n        );\n        var stringRule = {\n          pattern: RegExp(string),\n          greedy: true\n        };\n        var commentRule = {\n          pattern: /(^[ \\t]*)#.*/m,\n          lookbehind: true,\n          greedy: true\n        };\n        function re(source, flags) {\n          source = source.replace(/<OPT>/g, function() {\n            return option;\n          }).replace(/<SP>/g, function() {\n            return space;\n          });\n          return RegExp(source, flags);\n        }\n        Prism2.languages.docker = {\n          instruction: {\n            pattern: /(^[ \\t]*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)(?:\\\\.|[^\\r\\n\\\\])*(?:\\\\$(?:\\s|#.*$)*(?![\\s#])(?:\\\\.|[^\\r\\n\\\\])*)*/im,\n            lookbehind: true,\n            greedy: true,\n            inside: {\n              options: {\n                pattern: re(\n                  /(^(?:ONBUILD<SP>)?\\w+<SP>)<OPT>(?:<SP><OPT>)*/.source,\n                  \"i\"\n                ),\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                  property: {\n                    pattern: /(^|\\s)--[\\w-]+/,\n                    lookbehind: true\n                  },\n                  string: [\n                    stringRule,\n                    {\n                      pattern: /(=)(?![\"'])(?:[^\\s\\\\]|\\\\.)+/,\n                      lookbehind: true\n                    }\n                  ],\n                  operator: /\\\\$/m,\n                  punctuation: /=/\n                }\n              },\n              keyword: [\n                {\n                  // https://docs.docker.com/engine/reference/builder/#healthcheck\n                  pattern: re(\n                    /(^(?:ONBUILD<SP>)?HEALTHCHECK<SP>(?:<OPT><SP>)*)(?:CMD|NONE)\\b/.source,\n                    \"i\"\n                  ),\n                  lookbehind: true,\n                  greedy: true\n                },\n                {\n                  // https://docs.docker.com/engine/reference/builder/#from\n                  pattern: re(\n                    /(^(?:ONBUILD<SP>)?FROM<SP>(?:<OPT><SP>)*(?!--)[^ \\t\\\\]+<SP>)AS/.source,\n                    \"i\"\n                  ),\n                  lookbehind: true,\n                  greedy: true\n                },\n                {\n                  // https://docs.docker.com/engine/reference/builder/#onbuild\n                  pattern: re(/(^ONBUILD<SP>)\\w+/.source, \"i\"),\n                  lookbehind: true,\n                  greedy: true\n                },\n                {\n                  pattern: /^\\w+/,\n                  greedy: true\n                }\n              ],\n              comment: commentRule,\n              string: stringRule,\n              variable: /\\$(?:\\w+|\\{[^{}\"'\\\\]*\\})/,\n              operator: /\\\\$/m\n            }\n          },\n          comment: commentRule\n        };\n        Prism2.languages.dockerfile = Prism2.languages.docker;\n      })(Prism);\n    }\n  }\n});\n\nexport {\n  require_docker\n};\n//# sourceMappingURL=chunk-B7BC6ZL4.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.0001805420033633709
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-B7BC6ZL4.js (200) â€” 2024-07-28T11:41:34.774Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-B7BC6ZL4.js"
        }
      ]
    }
  ]
}