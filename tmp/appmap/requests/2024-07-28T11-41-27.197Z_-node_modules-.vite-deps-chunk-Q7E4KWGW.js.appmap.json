{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-Q7E4KWGW.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/@mui_material.js?v=6aadf61c",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"87d8-q2Doji9VIUYilO5rpZFoEMEa+dM\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  ThemeProvider_default,\n  createCssVarsProvider,\n  createGetCssVar,\n  prepareCssVars_default,\n  useThemeProps\n} from \"/node_modules/.vite/deps/chunk-AV2W355I.js?v=b39bb78e\";\nimport {\n  init_styled\n} from \"/node_modules/.vite/deps/chunk-D6KANQX3.js?v=b39bb78e\";\nimport {\n  createTheme_default,\n  createTypography,\n  defaultTheme_default,\n  identifier_default,\n  init_createMixins,\n  init_createTheme,\n  init_createTransitions,\n  init_createTypography,\n  init_defaultTheme,\n  init_identifier,\n  require_colorManipulator\n} from \"/node_modules/.vite/deps/chunk-BC33QJXZ.js?v=b39bb78e\";\nimport {\n  createBreakpoints,\n  createSpacing,\n  deepmerge,\n  defaultSxConfig_default,\n  init_deepmerge,\n  init_formatMuiErrorMessage,\n  init_styleFunctionSx,\n  styleFunctionSx_default\n} from \"/node_modules/.vite/deps/chunk-QYCFTTJO.js?v=b39bb78e\";\nimport {\n  _objectWithoutPropertiesLoose,\n  init_objectWithoutPropertiesLoose\n} from \"/node_modules/.vite/deps/chunk-Y6A5MYPI.js?v=b39bb78e\";\nimport {\n  _extends,\n  init_extends\n} from \"/node_modules/.vite/deps/chunk-QZVMM6GT.js?v=b39bb78e\";\nimport {\n  require_prop_types\n} from \"/node_modules/.vite/deps/chunk-PSO6HBME.js?v=b39bb78e\";\nimport {\n  require_jsx_runtime\n} from \"/node_modules/.vite/deps/chunk-CRNJR6QK.js?v=b39bb78e\";\nimport {\n  require_react\n} from \"/node_modules/.vite/deps/chunk-ZMLY2J2T.js?v=b39bb78e\";\nimport {\n  __toESM\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/@mui/material/styles/index.js\ninit_formatMuiErrorMessage();\ninit_identifier();\n\n// node_modules/@mui/material/styles/adaptV4Theme.js\ninit_extends();\ninit_objectWithoutPropertiesLoose();\nvar _excluded = [\"defaultProps\", \"mixins\", \"overrides\", \"palette\", \"props\", \"styleOverrides\"];\nvar _excluded2 = [\"type\", \"mode\"];\nfunction adaptV4Theme(inputTheme) {\n  if (true) {\n    console.warn([\"MUI: adaptV4Theme() is deprecated.\", \"Follow the upgrade guide on https://mui.com/r/migration-v4#theme.\"].join(\"\\n\"));\n  }\n  const {\n    defaultProps = {},\n    mixins = {},\n    overrides = {},\n    palette = {},\n    props = {},\n    styleOverrides = {}\n  } = inputTheme, other = _objectWithoutPropertiesLoose(inputTheme, _excluded);\n  const theme = _extends({}, other, {\n    components: {}\n  });\n  Object.keys(defaultProps).forEach((component) => {\n    const componentValue = theme.components[component] || {};\n    componentValue.defaultProps = defaultProps[component];\n    theme.components[component] = componentValue;\n  });\n  Object.keys(props).forEach((component) => {\n    const componentValue = theme.components[component] || {};\n    componentValue.defaultProps = props[component];\n    theme.components[component] = componentValue;\n  });\n  Object.keys(styleOverrides).forEach((component) => {\n    const componentValue = theme.components[component] || {};\n    componentValue.styleOverrides = styleOverrides[component];\n    theme.components[component] = componentValue;\n  });\n  Object.keys(overrides).forEach((component) => {\n    const componentValue = theme.components[component] || {};\n    componentValue.styleOverrides = overrides[component];\n    theme.components[component] = componentValue;\n  });\n  theme.spacing = createSpacing(inputTheme.spacing);\n  const breakpoints = createBreakpoints(inputTheme.breakpoints || {});\n  const spacing = theme.spacing;\n  theme.mixins = _extends({\n    gutters: (styles = {}) => {\n      return _extends({\n        paddingLeft: spacing(2),\n        paddingRight: spacing(2)\n      }, styles, {\n        [breakpoints.up(\"sm\")]: _extends({\n          paddingLeft: spacing(3),\n          paddingRight: spacing(3)\n        }, styles[breakpoints.up(\"sm\")])\n      });\n    }\n  }, mixins);\n  const {\n    type: typeInput,\n    mode: modeInput\n  } = palette, paletteRest = _objectWithoutPropertiesLoose(palette, _excluded2);\n  const finalMode = modeInput || typeInput || \"light\";\n  theme.palette = _extends({\n    // theme.palette.text.hint\n    text: {\n      hint: finalMode === \"dark\" ? \"rgba(255, 255, 255, 0.5)\" : \"rgba(0, 0, 0, 0.38)\"\n    },\n    mode: finalMode,\n    type: finalMode\n  }, paletteRest);\n  return theme;\n}\n\n// node_modules/@mui/material/styles/index.js\ninit_createTheme();\n\n// node_modules/@mui/material/styles/createMuiStrictModeTheme.js\ninit_deepmerge();\ninit_createTheme();\nfunction createMuiStrictModeTheme(options, ...args) {\n  return createTheme_default(deepmerge({\n    unstable_strictMode: true\n  }, options), ...args);\n}\n\n// node_modules/@mui/material/styles/createStyles.js\nvar warnedOnce = false;\nfunction createStyles(styles) {\n  if (!warnedOnce) {\n    console.warn([\"MUI: createStyles from @mui/material/styles is deprecated.\", \"Please use @mui/styles/createStyles\"].join(\"\\n\"));\n    warnedOnce = true;\n  }\n  return styles;\n}\n\n// node_modules/@mui/material/styles/cssUtils.js\nfunction isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n}\nfunction getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || \"\";\n}\nfunction toUnitless(length) {\n  return parseFloat(length);\n}\nfunction convertLength(baseFontSize) {\n  return (length, toUnit) => {\n    const fromUnit = getUnit(length);\n    if (fromUnit === toUnit) {\n      return length;\n    }\n    let pxLength = toUnitless(length);\n    if (fromUnit !== \"px\") {\n      if (fromUnit === \"em\") {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === \"rem\") {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      }\n    }\n    let outputLength = pxLength;\n    if (toUnit !== \"px\") {\n      if (toUnit === \"em\") {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === \"rem\") {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nfunction alignProperty({\n  size,\n  grid\n}) {\n  const sizeBelow = size - size % grid;\n  const sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n}\nfunction fontGrid({\n  lineHeight,\n  pixels,\n  htmlFontSize\n}) {\n  return pixels / (lineHeight * htmlFontSize);\n}\nfunction responsiveProperty({\n  cssProperty,\n  min,\n  max,\n  unit = \"rem\",\n  breakpoints = [600, 900, 1200],\n  transform = null\n}) {\n  const output = {\n    [cssProperty]: `${min}${unit}`\n  };\n  const factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach((breakpoint) => {\n    let value = min + factor * breakpoint;\n    if (transform !== null) {\n      value = transform(value);\n    }\n    output[`@media (min-width:${breakpoint}px)`] = {\n      [cssProperty]: `${Math.round(value * 1e4) / 1e4}${unit}`\n    };\n  });\n  return output;\n}\n\n// node_modules/@mui/material/styles/responsiveFontSizes.js\ninit_extends();\ninit_formatMuiErrorMessage();\nfunction responsiveFontSizes(themeInput, options = {}) {\n  const {\n    breakpoints = [\"sm\", \"md\", \"lg\"],\n    disableAlign = false,\n    factor = 2,\n    variants = [\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"subtitle1\", \"subtitle2\", \"body1\", \"body2\", \"caption\", \"button\", \"overline\"]\n  } = options;\n  const theme = _extends({}, themeInput);\n  theme.typography = _extends({}, theme.typography);\n  const typography = theme.typography;\n  const convert = convertLength(typography.htmlFontSize);\n  const breakpointValues = breakpoints.map((x) => theme.breakpoints.values[x]);\n  variants.forEach((variant) => {\n    const style = typography[variant];\n    if (!style) {\n      return;\n    }\n    const remFontSize = parseFloat(convert(style.fontSize, \"rem\"));\n    if (remFontSize <= 1) {\n      return;\n    }\n    const maxFontSize = remFontSize;\n    const minFontSize = 1 + (maxFontSize - 1) / factor;\n    let {\n      lineHeight\n    } = style;\n    if (!isUnitless(lineHeight) && !disableAlign) {\n      throw new Error(true ? `MUI: Unsupported non-unitless line height with grid alignment.\nUse unitless line heights instead.` : formatMuiErrorMessage(6));\n    }\n    if (!isUnitless(lineHeight)) {\n      lineHeight = parseFloat(convert(lineHeight, \"rem\")) / parseFloat(remFontSize);\n    }\n    let transform = null;\n    if (!disableAlign) {\n      transform = (value) => alignProperty({\n        size: value,\n        grid: fontGrid({\n          pixels: 4,\n          lineHeight,\n          htmlFontSize: typography.htmlFontSize\n        })\n      });\n    }\n    typography[variant] = _extends({}, style, responsiveProperty({\n      cssProperty: \"fontSize\",\n      min: minFontSize,\n      max: maxFontSize,\n      unit: \"rem\",\n      breakpoints: breakpointValues,\n      transform\n    }));\n  });\n  return theme;\n}\n\n// node_modules/@mui/material/styles/index.js\ninit_createTransitions();\n\n// node_modules/@mui/material/styles/useThemeProps.js\ninit_defaultTheme();\ninit_identifier();\nfunction useThemeProps2({\n  props,\n  name\n}) {\n  return useThemeProps({\n    props,\n    name,\n    defaultTheme: defaultTheme_default,\n    themeId: identifier_default\n  });\n}\n\n// node_modules/@mui/material/styles/index.js\ninit_styled();\ninit_styled();\n\n// node_modules/@mui/material/styles/ThemeProvider.js\ninit_extends();\ninit_objectWithoutPropertiesLoose();\nvar React = __toESM(require_react());\nvar import_prop_types = __toESM(require_prop_types());\ninit_identifier();\nvar import_jsx_runtime = __toESM(require_jsx_runtime());\nvar _excluded3 = [\"theme\"];\nfunction ThemeProvider(_ref) {\n  let {\n    theme: themeInput\n  } = _ref, props = _objectWithoutPropertiesLoose(_ref, _excluded3);\n  const scopedTheme = themeInput[identifier_default];\n  return (0, import_jsx_runtime.jsx)(ThemeProvider_default, _extends({}, props, {\n    themeId: scopedTheme ? identifier_default : void 0,\n    theme: scopedTheme || themeInput\n  }));\n}\ntrue ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: import_prop_types.default.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: import_prop_types.default.oneOfType([import_prop_types.default.object, import_prop_types.default.func]).isRequired\n... (24776 more characters)"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00045737496111541986
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-Q7E4KWGW.js (200) — 2024-07-28T11:41:27.197Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-Q7E4KWGW.js"
        }
      ]
    }
  ]
}