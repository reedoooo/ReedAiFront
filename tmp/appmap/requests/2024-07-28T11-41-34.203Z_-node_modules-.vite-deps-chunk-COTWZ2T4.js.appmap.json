{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-COTWZ2T4.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"12c9-nGWyBWCesgQ4/V0U4YCuqHqXV2k\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  require_markup_templating\n} from \"/node_modules/.vite/deps/chunk-BCCZJ3TR.js?v=b39bb78e\";\nimport {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/smarty.js\nvar require_smarty = __commonJS({\n  \"node_modules/refractor/lang/smarty.js\"(exports, module) {\n    var refractorMarkupTemplating = require_markup_templating();\n    module.exports = smarty;\n    smarty.displayName = \"smarty\";\n    smarty.aliases = [];\n    function smarty(Prism) {\n      Prism.register(refractorMarkupTemplating);\n      (function(Prism2) {\n        Prism2.languages.smarty = {\n          comment: {\n            pattern: /^\\{\\*[\\s\\S]*?\\*\\}/,\n            greedy: true\n          },\n          \"embedded-php\": {\n            pattern: /^\\{php\\}[\\s\\S]*?\\{\\/php\\}/,\n            greedy: true,\n            inside: {\n              smarty: {\n                pattern: /^\\{php\\}|\\{\\/php\\}$/,\n                inside: null\n                // see below\n              },\n              php: {\n                pattern: /[\\s\\S]+/,\n                alias: \"language-php\",\n                inside: Prism2.languages.php\n              }\n            }\n          },\n          string: [\n            {\n              pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n              greedy: true,\n              inside: {\n                interpolation: {\n                  pattern: /\\{[^{}]*\\}|`[^`]*`/,\n                  inside: {\n                    \"interpolation-punctuation\": {\n                      pattern: /^[{`]|[`}]$/,\n                      alias: \"punctuation\"\n                    },\n                    expression: {\n                      pattern: /[\\s\\S]+/,\n                      inside: null\n                      // see below\n                    }\n                  }\n                },\n                variable: /\\$\\w+/\n              }\n            },\n            {\n              pattern: /'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n              greedy: true\n            }\n          ],\n          keyword: {\n            pattern: /(^\\{\\/?)[a-z_]\\w*\\b(?!\\()/i,\n            lookbehind: true,\n            greedy: true\n          },\n          delimiter: {\n            pattern: /^\\{\\/?|\\}$/,\n            greedy: true,\n            alias: \"punctuation\"\n          },\n          number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n          variable: [\n            /\\$(?!\\d)\\w+/,\n            /#(?!\\d)\\w+#/,\n            {\n              pattern: /(\\.|->|\\w\\s*=)(?!\\d)\\w+\\b(?!\\()/,\n              lookbehind: true\n            },\n            {\n              pattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n              lookbehind: true\n            }\n          ],\n          function: {\n            pattern: /(\\|\\s*)@?[a-z_]\\w*|\\b[a-z_]\\w*(?=\\()/i,\n            lookbehind: true\n          },\n          \"attr-name\": /\\b[a-z_]\\w*(?=\\s*=)/i,\n          boolean: /\\b(?:false|no|off|on|true|yes)\\b/,\n          punctuation: /[\\[\\](){}.,:`]|->/,\n          operator: [\n            /[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/,\n            /\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/,\n            /\\b(?:and|eq|gt?e|gt|lt?e|lt|mod|neq?|not|or)\\b/\n          ]\n        };\n        Prism2.languages.smarty[\"embedded-php\"].inside.smarty.inside = Prism2.languages.smarty;\n        Prism2.languages.smarty.string[0].inside.interpolation.inside.expression.inside = Prism2.languages.smarty;\n        var string = /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/;\n        var smartyPattern = RegExp(\n          // comments\n          /\\{\\*[\\s\\S]*?\\*\\}/.source + \"|\" + // php tags\n          /\\{php\\}[\\s\\S]*?\\{\\/php\\}/.source + \"|\" + // smarty blocks\n          /\\{(?:[^{}\"']|<str>|\\{(?:[^{}\"']|<str>|\\{(?:[^{}\"']|<str>)*\\})*\\})*\\}/.source.replace(\n            /<str>/g,\n            function() {\n              return string.source;\n            }\n          ),\n          \"g\"\n        );\n        Prism2.hooks.add(\"before-tokenize\", function(env) {\n          var smartyLiteralStart = \"{literal}\";\n          var smartyLiteralEnd = \"{/literal}\";\n          var smartyLiteralMode = false;\n          Prism2.languages[\"markup-templating\"].buildPlaceholders(\n            env,\n            \"smarty\",\n            smartyPattern,\n            function(match) {\n              if (match === smartyLiteralEnd) {\n                smartyLiteralMode = false;\n              }\n              if (!smartyLiteralMode) {\n                if (match === smartyLiteralStart) {\n                  smartyLiteralMode = true;\n                }\n                return true;\n              }\n              return false;\n            }\n          );\n        });\n        Prism2.hooks.add(\"after-tokenize\", function(env) {\n          Prism2.languages[\"markup-templating\"].tokenizePlaceholders(env, \"smarty\");\n        });\n      })(Prism);\n    }\n  }\n});\n\nexport {\n  require_smarty\n};\n//# sourceMappingURL=chunk-COTWZ2T4.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00015466695185750723
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-COTWZ2T4.js (200) â€” 2024-07-28T11:41:34.203Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-COTWZ2T4.js"
        }
      ]
    }
  ]
}