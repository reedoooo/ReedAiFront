{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-EVBNS7GY.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"3649-pxr9rs44TGqc8qW2mS+RuQXIHdM\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/sql.js\nvar require_sql = __commonJS({\n  \"node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/sql.js\"(exports, module) {\n    function source(re) {\n      if (!re) return null;\n      if (typeof re === \"string\") return re;\n      return re.source;\n    }\n    function concat(...args) {\n      const joined = args.map((x) => source(x)).join(\"\");\n      return joined;\n    }\n    function either(...args) {\n      const joined = \"(\" + args.map((x) => source(x)).join(\"|\") + \")\";\n      return joined;\n    }\n    function sql(hljs) {\n      const COMMENT_MODE = hljs.COMMENT(\"--\", \"$\");\n      const STRING = {\n        className: \"string\",\n        variants: [\n          {\n            begin: /'/,\n            end: /'/,\n            contains: [\n              { begin: /''/ }\n            ]\n          }\n        ]\n      };\n      const QUOTED_IDENTIFIER = {\n        begin: /\"/,\n        end: /\"/,\n        contains: [{ begin: /\"\"/ }]\n      };\n      const LITERALS = [\n        \"true\",\n        \"false\",\n        // Not sure it's correct to call NULL literal, and clauses like IS [NOT] NULL look strange that way.\n        // \"null\",\n        \"unknown\"\n      ];\n      const MULTI_WORD_TYPES = [\n        \"double precision\",\n        \"large object\",\n        \"with timezone\",\n        \"without timezone\"\n      ];\n      const TYPES = [\n        \"bigint\",\n        \"binary\",\n        \"blob\",\n        \"boolean\",\n        \"char\",\n        \"character\",\n        \"clob\",\n        \"date\",\n        \"dec\",\n        \"decfloat\",\n        \"decimal\",\n        \"float\",\n        \"int\",\n        \"integer\",\n        \"interval\",\n        \"nchar\",\n        \"nclob\",\n        \"national\",\n        \"numeric\",\n        \"real\",\n        \"row\",\n        \"smallint\",\n        \"time\",\n        \"timestamp\",\n        \"varchar\",\n        \"varying\",\n        // modifier (character varying)\n        \"varbinary\"\n      ];\n      const NON_RESERVED_WORDS = [\n        \"add\",\n        \"asc\",\n        \"collation\",\n        \"desc\",\n        \"final\",\n        \"first\",\n        \"last\",\n        \"view\"\n      ];\n      const RESERVED_WORDS = [\n        \"abs\",\n        \"acos\",\n        \"all\",\n        \"allocate\",\n        \"alter\",\n        \"and\",\n        \"any\",\n        \"are\",\n        \"array\",\n        \"array_agg\",\n        \"array_max_cardinality\",\n        \"as\",\n        \"asensitive\",\n        \"asin\",\n        \"asymmetric\",\n        \"at\",\n        \"atan\",\n        \"atomic\",\n        \"authorization\",\n        \"avg\",\n        \"begin\",\n        \"begin_frame\",\n        \"begin_partition\",\n        \"between\",\n        \"bigint\",\n        \"binary\",\n        \"blob\",\n        \"boolean\",\n        \"both\",\n        \"by\",\n        \"call\",\n        \"called\",\n        \"cardinality\",\n        \"cascaded\",\n        \"case\",\n        \"cast\",\n        \"ceil\",\n        \"ceiling\",\n        \"char\",\n        \"char_length\",\n        \"character\",\n        \"character_length\",\n        \"check\",\n        \"classifier\",\n        \"clob\",\n        \"close\",\n        \"coalesce\",\n        \"collate\",\n        \"collect\",\n        \"column\",\n        \"commit\",\n        \"condition\",\n        \"connect\",\n        \"constraint\",\n        \"contains\",\n        \"convert\",\n        \"copy\",\n        \"corr\",\n        \"corresponding\",\n        \"cos\",\n        \"cosh\",\n        \"count\",\n        \"covar_pop\",\n        \"covar_samp\",\n        \"create\",\n        \"cross\",\n        \"cube\",\n        \"cume_dist\",\n        \"current\",\n        \"current_catalog\",\n        \"current_date\",\n        \"current_default_transform_group\",\n        \"current_path\",\n        \"current_role\",\n        \"current_row\",\n        \"current_schema\",\n        \"current_time\",\n        \"current_timestamp\",\n        \"current_path\",\n        \"current_role\",\n        \"current_transform_group_for_type\",\n        \"current_user\",\n        \"cursor\",\n        \"cycle\",\n        \"date\",\n        \"day\",\n        \"deallocate\",\n        \"dec\",\n        \"decimal\",\n        \"decfloat\",\n        \"declare\",\n        \"default\",\n        \"define\",\n        \"delete\",\n        \"dense_rank\",\n        \"deref\",\n        \"describe\",\n        \"deterministic\",\n        \"disconnect\",\n        \"distinct\",\n        \"double\",\n        \"drop\",\n        \"dynamic\",\n        \"each\",\n        \"element\",\n        \"else\",\n        \"empty\",\n        \"end\",\n        \"end_frame\",\n        \"end_partition\",\n        \"end-exec\",\n        \"equals\",\n        \"escape\",\n        \"every\",\n        \"except\",\n        \"exec\",\n        \"execute\",\n        \"exists\",\n        \"exp\",\n        \"external\",\n        \"extract\",\n        \"false\",\n        \"fetch\",\n        \"filter\",\n        \"first_value\",\n        \"float\",\n        \"floor\",\n        \"for\",\n        \"foreign\",\n        \"frame_row\",\n        \"free\",\n        \"from\",\n        \"full\",\n        \"function\",\n        \"fusion\",\n        \"get\",\n        \"global\",\n        \"grant\",\n        \"group\",\n        \"grouping\",\n        \"groups\",\n        \"having\",\n        \"hold\",\n        \"hour\",\n        \"identity\",\n        \"in\",\n        \"indicator\",\n        \"initial\",\n        \"inner\",\n        \"inout\",\n        \"insensitive\",\n        \"insert\",\n        \"int\",\n        \"integer\",\n        \"intersect\",\n        \"intersection\",\n        \"interval\",\n        \"into\",\n        \"is\",\n        \"join\",\n        \"json_array\",\n        \"json_arrayagg\",\n        \"json_exists\",\n        \"json_object\",\n        \"json_objectagg\",\n        \"json_query\",\n        \"json_table\",\n        \"json_table_primitive\",\n        \"json_value\",\n        \"lag\",\n        \"language\",\n        \"large\",\n        \"last_value\",\n        \"lateral\",\n        \"lead\",\n        \"leading\",\n        \"left\",\n        \"like\",\n        \"like_regex\",\n        \"listagg\",\n        \"ln\",\n        \"local\",\n        \"localtime\",\n        \"localtimestamp\",\n        \"log\",\n        \"log10\",\n        \"lower\",\n        \"match\",\n        \"match_number\",\n        \"match_recognize\",\n        \"matches\",\n        \"max\",\n        \"member\",\n        \"merge\",\n        \"method\",\n        \"min\",\n        \"minute\",\n        \"mod\",\n        \"modifies\",\n        \"module\",\n        \"month\",\n        \"multiset\",\n        \"national\",\n        \"natural\",\n        \"nchar\",\n        \"nclob\",\n        \"new\",\n        \"no\",\n        \"none\",\n        \"normalize\",\n        \"not\",\n        \"nth_value\",\n        \"ntile\",\n        \"null\",\n        \"nullif\",\n        \"numeric\",\n        \"octet_length\",\n        \"occurrences_regex\",\n        \"of\",\n        \"offset\",\n        \"old\",\n        \"omit\",\n        \"on\",\n        \"one\",\n        \"only\",\n        \"open\",\n        \"or\",\n        \"order\",\n        \"out\",\n        \"outer\",\n        \"over\",\n        \"overlaps\",\n        \"overlay\",\n        \"parameter\",\n        \"partition\",\n        \"pattern\",\n        \"per\",\n        \"percent\",\n        \"percent_rank\",\n        \"percentile_cont\",\n        \"percentile_disc\",\n        \"period\",\n        \"portion\",\n        \"position\",\n        \"position_regex\",\n        \"power\",\n        \"precedes\",\n        \"precision\",\n        \"prepare\",\n        \"primary\",\n        \"procedure\",\n        \"ptf\",\n        \"range\",\n        \"rank\",\n        \"reads\",\n        \"real\",\n        \"recursive\",\n        \"ref\",\n        \"references\",\n        \"referencing\",\n        \"regr_avgx\",\n        \"regr_avgy\",\n        \"regr_count\",\n        \"regr_intercept\",\n        \"regr_r2\",\n        \"regr_slope\",\n        \"regr_sxx\",\n        \"regr_sxy\",\n        \"regr_syy\",\n        \"release\",\n        \"result\",\n        \"return\",\n        \"returns\",\n        \"revoke\",\n        \"right\",\n        \"rollback\",\n        \"rollup\",\n        \"row\",\n        \"row_number\",\n        \"rows\",\n        \"running\",\n        \"savepoint\",\n        \"scope\",\n        \"scroll\",\n        \"search\",\n        \"second\",\n        \"seek\",\n        \"select\",\n        \"sensitive\",\n        \"session_user\",\n        \"set\",\n        \"show\",\n        \"similar\",\n        \"sin\",\n        \"sinh\",\n        \"skip\",\n        \"smallint\",\n        \"some\",\n        \"specific\",\n        \"specifictype\",\n        \"sql\",\n        \"sqlexception\",\n        \"sqlstate\",\n        \"sqlwarning\",\n        \"sqrt\",\n        \"start\",\n        \"static\",\n        \"stddev_pop\",\n        \"stddev_samp\",\n        \"submultiset\",\n        \"subset\",\n        \"substring\",\n        \"substring_regex\",\n        \"succeeds\",\n        \"sum\",\n        \"symmetric\",\n        \"system\",\n        \"system_time\",\n        \"system_user\",\n        \"table\",\n        \"tablesample\",\n        \"tan\",\n        \"tanh\",\n        \"then\",\n        \"time\",\n        \"timestamp\",\n        \"timezone_hour\",\n        \"timezone_minute\",\n        \"to\",\n        \"trailing\",\n        \"translate\",\n        \"translate_regex\",\n        \"translation\",\n        \"treat\",\n        \"trigger\",\n        \"trim\",\n        \"trim_array\",\n        \"true\",\n        \"truncate\",\n        \"uescape\",\n        \"union\",\n        \"unique\",\n        \"unknown\",\n        \"unnest\",\n        \"update   \",\n        \"upper\",\n        \"user\",\n        \"using\",\n        \"value\",\n        \"values\",\n        \"value_of\",\n        \"var_pop\",\n        \"var_samp\",\n        \"varbinary\",\n        \"varchar\",\n        \"varying\",\n        \"versioning\",\n        \"when\",\n        \"whenever\",\n        \"where\",\n        \"width_bucket\",\n        \"window\",\n        \"with\",\n        \"within\",\n        \"without\",\n        \"year\"\n      ];\n      const RESERVED_FUNCTIONS = [\n        \"abs\",\n        \"acos\",\n        \"array_agg\",\n        \"asin\",\n        \"atan\",\n        \"avg\",\n        \"cast\",\n        \"ceil\",\n        \"ceiling\",\n        \"coalesce\",\n        \"corr\",\n        \"cos\",\n        \"cosh\",\n        \"count\",\n        \"covar_pop\",\n        \"covar_samp\",\n        \"cume_dist\",\n        \"dense_rank\",\n        \"deref\",\n        \"element\",\n        \"exp\",\n        \"extract\",\n        \"first_value\",\n        \"floor\",\n        \"json_array\",\n        \"json_arrayagg\",\n        \"json_exists\",\n        \"json_object\",\n        \"json_objectagg\",\n        \"json_query\",\n        \"json_table\",\n        \"json_table_primitive\",\n        \"json_value\",\n        \"lag\",\n        \"last_value\",\n        \"lead\",\n        \"listagg\",\n     ... (3897 more characters)"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.0003437920240685344
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-EVBNS7GY.js (200) — 2024-07-28T11:41:35.276Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-EVBNS7GY.js"
        }
      ]
    }
  ]
}