{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-V2E7GPDF.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"183b-PzYAufHuqiHumodx+Q7nAJIr59c\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/java.js\nvar require_java = __commonJS({\n  \"node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/java.js\"(exports, module) {\n    var decimalDigits = \"[0-9](_*[0-9])*\";\n    var frac = `\\\\.(${decimalDigits})`;\n    var hexDigits = \"[0-9a-fA-F](_*[0-9a-fA-F])*\";\n    var NUMERIC = {\n      className: \"number\",\n      variants: [\n        // DecimalFloatingPointLiteral\n        // including ExponentPart\n        { begin: `(\\\\b(${decimalDigits})((${frac})|\\\\.)?|(${frac}))[eE][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n        // excluding ExponentPart\n        { begin: `\\\\b(${decimalDigits})((${frac})[fFdD]?\\\\b|\\\\.([fFdD]\\\\b)?)` },\n        { begin: `(${frac})[fFdD]?\\\\b` },\n        { begin: `\\\\b(${decimalDigits})[fFdD]\\\\b` },\n        // HexadecimalFloatingPointLiteral\n        { begin: `\\\\b0[xX]((${hexDigits})\\\\.?|(${hexDigits})?\\\\.(${hexDigits}))[pP][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n        // DecimalIntegerLiteral\n        { begin: \"\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\b\" },\n        // HexIntegerLiteral\n        { begin: `\\\\b0[xX](${hexDigits})[lL]?\\\\b` },\n        // OctalIntegerLiteral\n        { begin: \"\\\\b0(_*[0-7])*[lL]?\\\\b\" },\n        // BinaryIntegerLiteral\n        { begin: \"\\\\b0[bB][01](_*[01])*[lL]?\\\\b\" }\n      ],\n      relevance: 0\n    };\n    function java(hljs) {\n      var JAVA_IDENT_RE = \"[À-ʸa-zA-Z_$][À-ʸa-zA-Z_$0-9]*\";\n      var GENERIC_IDENT_RE = JAVA_IDENT_RE + \"(<\" + JAVA_IDENT_RE + \"(\\\\s*,\\\\s*\" + JAVA_IDENT_RE + \")*>)?\";\n      var KEYWORDS = \"false synchronized int abstract float private char boolean var static null if const for true while long strictfp finally protected import native final void enum else break transient catch instanceof byte super volatile case assert short package default double public try this switch continue throws protected public private module requires exports do\";\n      var ANNOTATION = {\n        className: \"meta\",\n        begin: \"@\" + JAVA_IDENT_RE,\n        contains: [\n          {\n            begin: /\\(/,\n            end: /\\)/,\n            contains: [\"self\"]\n            // allow nested () inside our annotation\n          }\n        ]\n      };\n      const NUMBER = NUMERIC;\n      return {\n        name: \"Java\",\n        aliases: [\"jsp\"],\n        keywords: KEYWORDS,\n        illegal: /<\\/|#/,\n        contains: [\n          hljs.COMMENT(\n            \"/\\\\*\\\\*\",\n            \"\\\\*/\",\n            {\n              relevance: 0,\n              contains: [\n                {\n                  // eat up @'s in emails to prevent them to be recognized as doctags\n                  begin: /\\w+@/,\n                  relevance: 0\n                },\n                {\n                  className: \"doctag\",\n                  begin: \"@[A-Za-z]+\"\n                }\n              ]\n            }\n          ),\n          // relevance boost\n          {\n            begin: /import java\\.[a-z]+\\./,\n            keywords: \"import\",\n            relevance: 2\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.APOS_STRING_MODE,\n          hljs.QUOTE_STRING_MODE,\n          {\n            className: \"class\",\n            beginKeywords: \"class interface enum\",\n            end: /[{;=]/,\n            excludeEnd: true,\n            // TODO: can this be removed somehow?\n            // an extra boost because Java is more popular than other languages with\n            // this same syntax feature (this is just to preserve our tests passing\n            // for now)\n            relevance: 1,\n            keywords: \"class interface enum\",\n            illegal: /[:\"\\[\\]]/,\n            contains: [\n              { beginKeywords: \"extends implements\" },\n              hljs.UNDERSCORE_TITLE_MODE\n            ]\n          },\n          {\n            // Expression keywords prevent 'keyword Name(...)' from being\n            // recognized as a function definition\n            beginKeywords: \"new throw return else\",\n            relevance: 0\n          },\n          {\n            className: \"class\",\n            begin: \"record\\\\s+\" + hljs.UNDERSCORE_IDENT_RE + \"\\\\s*\\\\(\",\n            returnBegin: true,\n            excludeEnd: true,\n            end: /[{;=]/,\n            keywords: KEYWORDS,\n            contains: [\n              { beginKeywords: \"record\" },\n              {\n                begin: hljs.UNDERSCORE_IDENT_RE + \"\\\\s*\\\\(\",\n                returnBegin: true,\n                relevance: 0,\n                contains: [hljs.UNDERSCORE_TITLE_MODE]\n              },\n              {\n                className: \"params\",\n                begin: /\\(/,\n                end: /\\)/,\n                keywords: KEYWORDS,\n                relevance: 0,\n                contains: [\n                  hljs.C_BLOCK_COMMENT_MODE\n                ]\n              },\n              hljs.C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE\n            ]\n          },\n          {\n            className: \"function\",\n            begin: \"(\" + GENERIC_IDENT_RE + \"\\\\s+)+\" + hljs.UNDERSCORE_IDENT_RE + \"\\\\s*\\\\(\",\n            returnBegin: true,\n            end: /[{;=]/,\n            excludeEnd: true,\n            keywords: KEYWORDS,\n            contains: [\n              {\n                begin: hljs.UNDERSCORE_IDENT_RE + \"\\\\s*\\\\(\",\n                returnBegin: true,\n                relevance: 0,\n                contains: [hljs.UNDERSCORE_TITLE_MODE]\n              },\n              {\n                className: \"params\",\n                begin: /\\(/,\n                end: /\\)/,\n                keywords: KEYWORDS,\n                relevance: 0,\n                contains: [\n                  ANNOTATION,\n                  hljs.APOS_STRING_MODE,\n                  hljs.QUOTE_STRING_MODE,\n                  NUMBER,\n                  hljs.C_BLOCK_COMMENT_MODE\n                ]\n              },\n              hljs.C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE\n            ]\n          },\n          NUMBER,\n          ANNOTATION\n        ]\n      };\n    }\n    module.exports = java;\n  }\n});\n\nexport {\n  require_java\n};\n//# sourceMappingURL=chunk-V2E7GPDF.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00025154196191579103
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-V2E7GPDF.js (200) — 2024-07-28T11:41:39.514Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-V2E7GPDF.js"
        }
      ]
    }
  ]
}