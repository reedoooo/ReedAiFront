{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-MYD42LL3.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"111a-OM6RjHVDPyy9a6tbQ0J3zYwFqWY\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/moonscript.js\nvar require_moonscript = __commonJS({\n  \"node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/moonscript.js\"(exports, module) {\n    function moonscript(hljs) {\n      const KEYWORDS = {\n        keyword: (\n          // Moonscript keywords\n          \"if then not for in while do return else elseif break continue switch and or unless when class extends super local import export from using\"\n        ),\n        literal: \"true false nil\",\n        built_in: \"_G _VERSION assert collectgarbage dofile error getfenv getmetatable ipairs load loadfile loadstring module next pairs pcall print rawequal rawget rawset require select setfenv setmetatable tonumber tostring type unpack xpcall coroutine debug io math os package string table\"\n      };\n      const JS_IDENT_RE = \"[A-Za-z$_][0-9A-Za-z$_]*\";\n      const SUBST = {\n        className: \"subst\",\n        begin: /#\\{/,\n        end: /\\}/,\n        keywords: KEYWORDS\n      };\n      const EXPRESSIONS = [\n        hljs.inherit(\n          hljs.C_NUMBER_MODE,\n          {\n            starts: {\n              end: \"(\\\\s*/)?\",\n              relevance: 0\n            }\n          }\n        ),\n        // a number tries to eat the following slash to prevent treating it as a regexp\n        {\n          className: \"string\",\n          variants: [\n            {\n              begin: /'/,\n              end: /'/,\n              contains: [hljs.BACKSLASH_ESCAPE]\n            },\n            {\n              begin: /\"/,\n              end: /\"/,\n              contains: [\n                hljs.BACKSLASH_ESCAPE,\n                SUBST\n              ]\n            }\n          ]\n        },\n        {\n          className: \"built_in\",\n          begin: \"@__\" + hljs.IDENT_RE\n        },\n        {\n          begin: \"@\" + hljs.IDENT_RE\n          // relevance booster on par with CoffeeScript\n        },\n        {\n          begin: hljs.IDENT_RE + \"\\\\\\\\\" + hljs.IDENT_RE\n          // inst\\method\n        }\n      ];\n      SUBST.contains = EXPRESSIONS;\n      const TITLE = hljs.inherit(hljs.TITLE_MODE, {\n        begin: JS_IDENT_RE\n      });\n      const POSSIBLE_PARAMS_RE = \"(\\\\(.*\\\\)\\\\s*)?\\\\B[-=]>\";\n      const PARAMS = {\n        className: \"params\",\n        begin: \"\\\\([^\\\\(]\",\n        returnBegin: true,\n        /* We need another contained nameless mode to not have every nested\n        pair of parens to be called \"params\" */\n        contains: [\n          {\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: KEYWORDS,\n            contains: [\"self\"].concat(EXPRESSIONS)\n          }\n        ]\n      };\n      return {\n        name: \"MoonScript\",\n        aliases: [\"moon\"],\n        keywords: KEYWORDS,\n        illegal: /\\/\\*/,\n        contains: EXPRESSIONS.concat([\n          hljs.COMMENT(\"--\", \"$\"),\n          {\n            className: \"function\",\n            // function: -> =>\n            begin: \"^\\\\s*\" + JS_IDENT_RE + \"\\\\s*=\\\\s*\" + POSSIBLE_PARAMS_RE,\n            end: \"[-=]>\",\n            returnBegin: true,\n            contains: [\n              TITLE,\n              PARAMS\n            ]\n          },\n          {\n            begin: /[\\(,:=]\\s*/,\n            // anonymous function start\n            relevance: 0,\n            contains: [\n              {\n                className: \"function\",\n                begin: POSSIBLE_PARAMS_RE,\n                end: \"[-=]>\",\n                returnBegin: true,\n                contains: [PARAMS]\n              }\n            ]\n          },\n          {\n            className: \"class\",\n            beginKeywords: \"class\",\n            end: \"$\",\n            illegal: /[:=\"\\[\\]]/,\n            contains: [\n              {\n                beginKeywords: \"extends\",\n                endsWithParent: true,\n                illegal: /[:=\"\\[\\]]/,\n                contains: [TITLE]\n              },\n              TITLE\n            ]\n          },\n          {\n            className: \"name\",\n            // table\n            begin: JS_IDENT_RE + \":\",\n            end: \":\",\n            returnBegin: true,\n            returnEnd: true,\n            relevance: 0\n          }\n        ])\n      };\n    }\n    module.exports = moonscript;\n  }\n});\n\nexport {\n  require_moonscript\n};\n//# sourceMappingURL=chunk-MYD42LL3.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.0021876670653000474
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-MYD42LL3.js (200) â€” 2024-07-28T11:41:38.835Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-MYD42LL3.js"
        }
      ]
    }
  ]
}