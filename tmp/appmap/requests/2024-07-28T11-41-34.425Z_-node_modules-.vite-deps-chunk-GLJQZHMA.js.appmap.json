{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-GLJQZHMA.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"e1b-q1+w2ots/OwppptFWsY9tPuf4U0\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/regex.js\nvar require_regex = __commonJS({\n  \"node_modules/refractor/lang/regex.js\"(exports, module) {\n    module.exports = regex;\n    regex.displayName = \"regex\";\n    regex.aliases = [];\n    function regex(Prism) {\n      ;\n      (function(Prism2) {\n        var specialEscape = {\n          pattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\n          alias: \"escape\"\n        };\n        var escape = /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/;\n        var charSet = {\n          pattern: /\\.|\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n          alias: \"class-name\"\n        };\n        var charSetWithoutDot = {\n          pattern: /\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n          alias: \"class-name\"\n        };\n        var rangeChar = \"(?:[^\\\\\\\\-]|\" + escape.source + \")\";\n        var range = RegExp(rangeChar + \"-\" + rangeChar);\n        var groupName = {\n          pattern: /(<|')[^<>']+(?=[>']$)/,\n          lookbehind: true,\n          alias: \"variable\"\n        };\n        Prism2.languages.regex = {\n          \"char-class\": {\n            pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\n            lookbehind: true,\n            inside: {\n              \"char-class-negation\": {\n                pattern: /(^\\[)\\^/,\n                lookbehind: true,\n                alias: \"operator\"\n              },\n              \"char-class-punctuation\": {\n                pattern: /^\\[|\\]$/,\n                alias: \"punctuation\"\n              },\n              range: {\n                pattern: range,\n                inside: {\n                  escape,\n                  \"range-punctuation\": {\n                    pattern: /-/,\n                    alias: \"operator\"\n                  }\n                }\n              },\n              \"special-escape\": specialEscape,\n              \"char-set\": charSetWithoutDot,\n              escape\n            }\n          },\n          \"special-escape\": specialEscape,\n          \"char-set\": charSet,\n          backreference: [\n            {\n              // a backreference which is not an octal escape\n              pattern: /\\\\(?![123][0-7]{2})[1-9]/,\n              alias: \"keyword\"\n            },\n            {\n              pattern: /\\\\k<[^<>']+>/,\n              alias: \"keyword\",\n              inside: {\n                \"group-name\": groupName\n              }\n            }\n          ],\n          anchor: {\n            pattern: /[$^]|\\\\[ABbGZz]/,\n            alias: \"function\"\n          },\n          escape,\n          group: [\n            {\n              // https://docs.oracle.com/javase/10/docs/api/java/util/regex/Pattern.html\n              // https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference?view=netframework-4.7.2#grouping-constructs\n              // (), (?<name>), (?'name'), (?>), (?:), (?=), (?!), (?<=), (?<!), (?is-m), (?i-m:)\n              pattern: /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\n              alias: \"punctuation\",\n              inside: {\n                \"group-name\": groupName\n              }\n            },\n            {\n              pattern: /\\)/,\n              alias: \"punctuation\"\n            }\n          ],\n          quantifier: {\n            pattern: /(?:[+*?]|\\{\\d+(?:,\\d*)?\\})[?+]?/,\n            alias: \"number\"\n          },\n          alternation: {\n            pattern: /\\|/,\n            alias: \"keyword\"\n          }\n        };\n      })(Prism);\n    }\n  }\n});\n\nexport {\n  require_regex\n};\n//# sourceMappingURL=chunk-GLJQZHMA.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.0000955839641392231
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-GLJQZHMA.js (200) â€” 2024-07-28T11:41:34.425Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-GLJQZHMA.js"
        }
      ]
    }
  ]
}