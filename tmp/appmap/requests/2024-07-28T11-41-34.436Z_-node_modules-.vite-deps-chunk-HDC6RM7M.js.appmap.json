{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-HDC6RM7M.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"ec1-M6YvnLjS/T5fmcl/Rm9C0K0Vgms\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/purebasic.js\nvar require_purebasic = __commonJS({\n  \"node_modules/refractor/lang/purebasic.js\"(exports, module) {\n    module.exports = purebasic;\n    purebasic.displayName = \"purebasic\";\n    purebasic.aliases = [];\n    function purebasic(Prism) {\n      Prism.languages.purebasic = Prism.languages.extend(\"clike\", {\n        comment: /;.*/,\n        keyword: /\\b(?:align|and|as|break|calldebugger|case|compilercase|compilerdefault|compilerelse|compilerelseif|compilerendif|compilerendselect|compilererror|compilerif|compilerselect|continue|data|datasection|debug|debuglevel|declare|declarec|declarecdll|declaredll|declaremodule|default|define|dim|disableasm|disabledebugger|disableexplicit|else|elseif|enableasm|enabledebugger|enableexplicit|end|enddatasection|enddeclaremodule|endenumeration|endif|endimport|endinterface|endmacro|endmodule|endprocedure|endselect|endstructure|endstructureunion|endwith|enumeration|extends|fakereturn|for|foreach|forever|global|gosub|goto|if|import|importc|includebinary|includefile|includepath|interface|macro|module|newlist|newmap|next|not|or|procedure|procedurec|procedurecdll|proceduredll|procedurereturn|protected|prototype|prototypec|read|redim|repeat|restore|return|runtime|select|shared|static|step|structure|structureunion|swap|threaded|to|until|wend|while|with|xincludefile|xor)\\b/i,\n        function: /\\b\\w+(?:\\.\\w+)?\\s*(?=\\()/,\n        number: /(?:\\$[\\da-f]+|\\b-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+-]?\\d+)?)\\b/i,\n        operator: /(?:@\\*?|\\?|\\*)\\w+|-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|?\\||[~^%?*/@]/\n      });\n      Prism.languages.insertBefore(\"purebasic\", \"keyword\", {\n        tag: /#\\w+\\$?/,\n        asm: {\n          pattern: /(^[\\t ]*)!.*/m,\n          lookbehind: true,\n          alias: \"tag\",\n          inside: {\n            comment: /;.*/,\n            string: {\n              pattern: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n              greedy: true\n            },\n            // Anonymous label references, i.e.: jmp @b\n            \"label-reference-anonymous\": {\n              pattern: /(!\\s*j[a-z]+\\s+)@[fb]/i,\n              lookbehind: true,\n              alias: \"fasm-label\"\n            },\n            // Named label reference, i.e.: jne label1\n            \"label-reference-addressed\": {\n              pattern: /(!\\s*j[a-z]+\\s+)[A-Z._?$@][\\w.?$@~#]*/i,\n              lookbehind: true,\n              alias: \"fasm-label\"\n            },\n            keyword: [\n              /\\b(?:extern|global)\\b[^;\\r\\n]*/i,\n              /\\b(?:CPU|DEFAULT|FLOAT)\\b.*/\n            ],\n            function: {\n              pattern: /^([\\t ]*!\\s*)[\\da-z]+(?=\\s|$)/im,\n              lookbehind: true\n            },\n            \"function-inline\": {\n              pattern: /(:\\s*)[\\da-z]+(?=\\s)/i,\n              lookbehind: true,\n              alias: \"function\"\n            },\n            label: {\n              pattern: /^([\\t ]*!\\s*)[A-Za-z._?$@][\\w.?$@~#]*(?=:)/m,\n              lookbehind: true,\n              alias: \"fasm-label\"\n            },\n            register: /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s|mm\\d+)\\b/i,\n            number: /(?:\\b|-|(?=\\$))(?:0[hx](?:[\\da-f]*\\.)?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n            operator: /[\\[\\]*+\\-/%<>=&|$!,.:]/\n          }\n        }\n      });\n      delete Prism.languages.purebasic[\"class-name\"];\n      delete Prism.languages.purebasic[\"boolean\"];\n      Prism.languages.pbfasm = Prism.languages[\"purebasic\"];\n    }\n  }\n});\n\nexport {\n  require_purebasic\n};\n//# sourceMappingURL=chunk-HDC6RM7M.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00016149994917213917
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-HDC6RM7M.js (200) â€” 2024-07-28T11:41:34.436Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-HDC6RM7M.js"
        }
      ]
    }
  ]
}