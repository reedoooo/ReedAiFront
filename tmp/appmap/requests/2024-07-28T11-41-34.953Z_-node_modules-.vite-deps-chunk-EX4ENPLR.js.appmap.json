{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-EX4ENPLR.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"12f0-wcDO/i2mhhIGoscdJRRStOdFyns\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/yaml.js\nvar require_yaml = __commonJS({\n  \"node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/yaml.js\"(exports, module) {\n    function yaml(hljs) {\n      var LITERALS = \"true false yes no null\";\n      var URI_CHARACTERS = \"[\\\\w#;/?:@&=+$,.~*'()[\\\\]]+\";\n      var KEY = {\n        className: \"attr\",\n        variants: [\n          { begin: \"\\\\w[\\\\w :\\\\/.-]*:(?=[ \t]|$)\" },\n          { begin: '\"\\\\w[\\\\w :\\\\/.-]*\":(?=[ \t]|$)' },\n          // double quoted keys\n          { begin: \"'\\\\w[\\\\w :\\\\/.-]*':(?=[ \t]|$)\" }\n          // single quoted keys\n        ]\n      };\n      var TEMPLATE_VARIABLES = {\n        className: \"template-variable\",\n        variants: [\n          { begin: /\\{\\{/, end: /\\}\\}/ },\n          // jinja templates Ansible\n          { begin: /%\\{/, end: /\\}/ }\n          // Ruby i18n\n        ]\n      };\n      var STRING = {\n        className: \"string\",\n        relevance: 0,\n        variants: [\n          { begin: /'/, end: /'/ },\n          { begin: /\"/, end: /\"/ },\n          { begin: /\\S+/ }\n        ],\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          TEMPLATE_VARIABLES\n        ]\n      };\n      var CONTAINER_STRING = hljs.inherit(STRING, {\n        variants: [\n          { begin: /'/, end: /'/ },\n          { begin: /\"/, end: /\"/ },\n          { begin: /[^\\s,{}[\\]]+/ }\n        ]\n      });\n      var DATE_RE = \"[0-9]{4}(-[0-9][0-9]){0,2}\";\n      var TIME_RE = \"([Tt \\\\t][0-9][0-9]?(:[0-9][0-9]){2})?\";\n      var FRACTION_RE = \"(\\\\.[0-9]*)?\";\n      var ZONE_RE = \"([ \\\\t])*(Z|[-+][0-9][0-9]?(:[0-9][0-9])?)?\";\n      var TIMESTAMP = {\n        className: \"number\",\n        begin: \"\\\\b\" + DATE_RE + TIME_RE + FRACTION_RE + ZONE_RE + \"\\\\b\"\n      };\n      var VALUE_CONTAINER = {\n        end: \",\",\n        endsWithParent: true,\n        excludeEnd: true,\n        keywords: LITERALS,\n        relevance: 0\n      };\n      var OBJECT = {\n        begin: /\\{/,\n        end: /\\}/,\n        contains: [VALUE_CONTAINER],\n        illegal: \"\\\\n\",\n        relevance: 0\n      };\n      var ARRAY = {\n        begin: \"\\\\[\",\n        end: \"\\\\]\",\n        contains: [VALUE_CONTAINER],\n        illegal: \"\\\\n\",\n        relevance: 0\n      };\n      var MODES = [\n        KEY,\n        {\n          className: \"meta\",\n          begin: \"^---\\\\s*$\",\n          relevance: 10\n        },\n        {\n          // multi line string\n          // Blocks start with a | or > followed by a newline\n          //\n          // Indentation of subsequent lines must be the same to\n          // be considered part of the block\n          className: \"string\",\n          begin: \"[\\\\|>]([1-9]?[+-])?[ ]*\\\\n( +)[^ ][^\\\\n]*\\\\n(\\\\2[^\\\\n]+\\\\n?)*\"\n        },\n        {\n          // Ruby/Rails erb\n          begin: \"<%[%=-]?\",\n          end: \"[%-]?%>\",\n          subLanguage: \"ruby\",\n          excludeBegin: true,\n          excludeEnd: true,\n          relevance: 0\n        },\n        {\n          // named tags\n          className: \"type\",\n          begin: \"!\\\\w+!\" + URI_CHARACTERS\n        },\n        // https://yaml.org/spec/1.2/spec.html#id2784064\n        {\n          // verbatim tags\n          className: \"type\",\n          begin: \"!<\" + URI_CHARACTERS + \">\"\n        },\n        {\n          // primary tags\n          className: \"type\",\n          begin: \"!\" + URI_CHARACTERS\n        },\n        {\n          // secondary tags\n          className: \"type\",\n          begin: \"!!\" + URI_CHARACTERS\n        },\n        {\n          // fragment id &ref\n          className: \"meta\",\n          begin: \"&\" + hljs.UNDERSCORE_IDENT_RE + \"$\"\n        },\n        {\n          // fragment reference *ref\n          className: \"meta\",\n          begin: \"\\\\*\" + hljs.UNDERSCORE_IDENT_RE + \"$\"\n        },\n        {\n          // array listing\n          className: \"bullet\",\n          // TODO: remove |$ hack when we have proper look-ahead support\n          begin: \"-(?=[ ]|$)\",\n          relevance: 0\n        },\n        hljs.HASH_COMMENT_MODE,\n        {\n          beginKeywords: LITERALS,\n          keywords: { literal: LITERALS }\n        },\n        TIMESTAMP,\n        // numbers are any valid C-style number that\n        // sit isolated from other words\n        {\n          className: \"number\",\n          begin: hljs.C_NUMBER_RE + \"\\\\b\",\n          relevance: 0\n        },\n        OBJECT,\n        ARRAY,\n        STRING\n      ];\n      var VALUE_MODES = [...MODES];\n      VALUE_MODES.pop();\n      VALUE_MODES.push(CONTAINER_STRING);\n      VALUE_CONTAINER.contains = VALUE_MODES;\n      return {\n        name: \"YAML\",\n        case_insensitive: true,\n        aliases: [\"yml\"],\n        contains: MODES\n      };\n    }\n    module.exports = yaml;\n  }\n});\n\nexport {\n  require_yaml\n};\n//# sourceMappingURL=chunk-EX4ENPLR.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00017574999947100878
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-EX4ENPLR.js (200) â€” 2024-07-28T11:41:34.953Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-EX4ENPLR.js"
        }
      ]
    }
  ]
}