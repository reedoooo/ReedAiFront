{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-WWO2WH4X.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"2327-AIXZ/AFx4HYp9zOOYA1Wdp6/JdI\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/avisynth.js\nvar require_avisynth = __commonJS({\n  \"node_modules/refractor/lang/avisynth.js\"(exports, module) {\n    module.exports = avisynth;\n    avisynth.displayName = \"avisynth\";\n    avisynth.aliases = [\"avs\"];\n    function avisynth(Prism) {\n      ;\n      (function(Prism2) {\n        function replace(pattern, replacements) {\n          return pattern.replace(/<<(\\d+)>>/g, function(m, index) {\n            return replacements[+index];\n          });\n        }\n        function re(pattern, replacements, flags) {\n          return RegExp(replace(pattern, replacements), flags || \"\");\n        }\n        var types = /bool|clip|float|int|string|val/.source;\n        var internals = [\n          // bools\n          /is(?:bool|clip|float|int|string)|defined|(?:(?:internal)?function|var)?exists?/.source,\n          // control\n          /apply|assert|default|eval|import|nop|select|undefined/.source,\n          // global\n          /opt_(?:allowfloataudio|avipadscanlines|dwchannelmask|enable_(?:b64a|planartopackedrgb|v210|y3_10_10|y3_10_16)|usewaveextensible|vdubplanarhack)|set(?:cachemode|maxcpu|memorymax|planarlegacyalignment|workingdir)/.source,\n          // conv\n          /hex(?:value)?|value/.source,\n          // numeric\n          /abs|ceil|continued(?:denominator|numerator)?|exp|floor|fmod|frac|log(?:10)?|max|min|muldiv|pi|pow|rand|round|sign|spline|sqrt/.source,\n          // trig\n          /a?sinh?|a?cosh?|a?tan[2h]?/.source,\n          // bit\n          /(?:bit(?:and|not|x?or|[lr]?shift[aslu]?|sh[lr]|sa[lr]|[lr]rotatel?|ro[rl]|te?st|set(?:count)?|cl(?:ea)?r|ch(?:an)?ge?))/.source,\n          // runtime\n          /average(?:[bgr]|chroma[uv]|luma)|(?:[rgb]|chroma[uv]|luma|rgb|[yuv](?=difference(?:fromprevious|tonext)))difference(?:fromprevious|tonext)?|[yuvrgb]plane(?:median|min|max|minmaxdifference)/.source,\n          // script\n          /getprocessinfo|logmsg|script(?:dir(?:utf8)?|file(?:utf8)?|name(?:utf8)?)|setlogparams/.source,\n          // string\n          /chr|(?:fill|find|left|mid|replace|rev|right)str|format|[lu]case|ord|str(?:cmpi?|fromutf8|len|toutf8)|time|trim(?:all|left|right)/.source,\n          // version\n          /isversionorgreater|version(?:number|string)/.source,\n          // helper\n          /buildpixeltype|colorspacenametopixeltype/.source,\n          // avsplus\n          /addautoloaddir|on(?:cpu|cuda)|prefetch|setfiltermtmode/.source\n        ].join(\"|\");\n        var properties = [\n          // content\n          /has(?:audio|video)/.source,\n          // resolution\n          /height|width/.source,\n          // framerate\n          /frame(?:count|rate)|framerate(?:denominator|numerator)/.source,\n          // interlacing\n          /getparity|is(?:field|frame)based/.source,\n          // color format\n          /bitspercomponent|componentsize|hasalpha|is(?:planar(?:rgba?)?|interleaved|rgb(?:24|32|48|64)?|y(?:8|u(?:va?|y2))?|yv(?:12|16|24|411)|420|422|444|packedrgb)|numcomponents|pixeltype/.source,\n          // audio\n          /audio(?:bits|channels|duration|length(?:[fs]|hi|lo)?|rate)|isaudio(?:float|int)/.source\n        ].join(\"|\");\n        var filters = [\n          // source\n          /avi(?:file)?source|directshowsource|image(?:reader|source|sourceanim)|opendmlsource|segmented(?:avisource|directshowsource)|wavsource/.source,\n          // color\n          /coloryuv|convertbacktoyuy2|convertto(?:RGB(?:24|32|48|64)|(?:planar)?RGBA?|Y8?|YV(?:12|16|24|411)|YUVA?(?:411|420|422|444)|YUY2)|fixluminance|gr[ae]yscale|invert|levels|limiter|mergea?rgb|merge(?:chroma|luma)|rgbadjust|show(?:alpha|blue|green|red)|swapuv|tweak|[uv]toy8?|ytouv/.source,\n          // overlay\n          /(?:colorkey|reset)mask|layer|mask(?:hs)?|merge|overlay|subtract/.source,\n          // geometry\n          /addborders|(?:bicubic|bilinear|blackman|gauss|lanczos4|lanczos|point|sinc|spline(?:16|36|64))resize|crop(?:bottom)?|flip(?:horizontal|vertical)|(?:horizontal|vertical)?reduceby2|letterbox|skewrows|turn(?:180|left|right)/.source,\n          // pixel\n          /blur|fixbrokenchromaupsampling|generalconvolution|(?:spatial|temporal)soften|sharpen/.source,\n          // timeline\n          /trim|(?:un)?alignedsplice|(?:assume|assumescaled|change|convert)FPS|(?:delete|duplicate)frame|dissolve|fade(?:in|io|out)[02]?|freezeframe|interleave|loop|reverse|select(?:even|odd|(?:range)?every)/.source,\n          // interlace\n          /assume[bt]ff|assume(?:field|frame)based|bob|complementparity|doubleweave|peculiarblend|pulldown|separate(?:columns|fields|rows)|swapfields|weave(?:columns|rows)?/.source,\n          // audio\n          /amplify(?:db)?|assumesamplerate|audiodub(?:ex)?|audiotrim|convertaudioto(?:(?:8|16|24|32)bit|float)|converttomono|delayaudio|ensurevbrmp3sync|get(?:left|right)?channel|kill(?:audio|video)|mergechannels|mixaudio|monotostereo|normalize|resampleaudio|ssrc|supereq|timestretch/.source,\n          // conditional\n          /animate|applyrange|conditional(?:filter|reader|select)|frameevaluate|scriptclip|tcp(?:server|source)|writefile(?:end|if|start)?/.source,\n          // export\n          /imagewriter/.source,\n          // debug\n          /blackness|blankclip|colorbars(?:hd)?|compare|dumpfiltergraph|echo|histogram|info|messageclip|preroll|setgraphanalysis|show(?:framenumber|smpte|time)|showfiveversions|stack(?:horizontal|vertical)|subtitle|tone|version/.source\n        ].join(\"|\");\n        var allinternals = [internals, properties, filters].join(\"|\");\n        Prism2.languages.avisynth = {\n          comment: [\n            {\n              // Matches [* *] nestable block comments, but only supports 1 level of nested comments\n              // /\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\])|<self>)*\\*\\]/\n              pattern: /(^|[^\\\\])\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\])|\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\]))*\\*\\])*\\*\\]/,\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              // Matches /* */ block comments\n              pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              // Matches # comments\n              pattern: /(^|[^\\\\$])#.*/,\n              lookbehind: true,\n              greedy: true\n            }\n          ],\n          // Handle before strings because optional arguments are surrounded by double quotes\n          argument: {\n            pattern: re(/\\b(?:<<0>>)\\s+(\"?)\\w+\\1/.source, [types], \"i\"),\n            inside: {\n              keyword: /^\\w+/\n            }\n          },\n          // Optional argument assignment\n          \"argument-label\": {\n            pattern: /([,(][\\s\\\\]*)\\w+\\s*=(?!=)/,\n            lookbehind: true,\n            inside: {\n              \"argument-name\": {\n                pattern: /^\\w+/,\n                alias: \"punctuation\"\n              },\n              punctuation: /=$/\n            }\n          },\n          string: [\n            {\n              // triple double-quoted\n              pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n              greedy: true\n            },\n            {\n              // single double-quoted\n              pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n              greedy: true,\n              inside: {\n                constant: {\n                  // These *are* case-sensitive!\n                  pattern: /\\b(?:DEFAULT_MT_MODE|(?:MAINSCRIPT|PROGRAM|SCRIPT)DIR|(?:MACHINE|USER)_(?:CLASSIC|PLUS)_PLUGINS)\\b/\n                }\n              }\n            }\n          ],\n          // The special \"last\" variable that takes the value of the last implicitly returned clip\n          variable: /\\b(?:last)\\b/i,\n          boolean: /\\b(?:false|no|true|yes)\\b/i,\n          keyword: /\\b(?:catch|else|for|function|global|if|return|try|while|__END__)\\b/i,\n          constant: /\\bMT_(?:MULTI_INSTANCE|NICE_FILTER|SERIALIZED|SPECIAL_MT)\\b/,\n          // AviSynth's internal functions, filters, and properties\n          \"builtin-function\": {\n            pattern: re(/\\b(?:<<0>>)\\b/.source, [allinternals], \"i\"),\n            alias: \"function\"\n          },\n          \"type-cast\": {\n            pattern: re(/\\b(?:<<0>>)(?=\\s*\\()/.source, [types], \"i\"),\n            alias: \"keyword\"\n          },\n          // External/user-defined filters\n          function: {\n            pattern: /\\b[a-z_]\\w*(?=\\s*\\()|(\\.)[a-z_]\\w*\\b/i,\n            lookbehind: true\n          },\n          // Matches a \\ as the first or last character on a line\n          \"line-continuation\": {\n            pattern: /(^[ \\t]*)\\\\|\\\\(?=[ \\t]*$)/m,\n            lookbehind: true,\n            alias: \"punctuation\"\n          },\n          number: /\\B\\$(?:[\\da-f]{6}|[\\da-f]{8})\\b|(?:(?:\\b|\\B-)\\d+(?:\\.\\d*)?\\b|\\B\\.\\d+\\b)/i,\n          operator: /\\+\\+?|[!=<>]=?|&&|\\|\\||[?:*/%-]/,\n          punctuation: /[{}\\[\\]();,.]/\n        };\n        Prism2.languages.avs = Prism2.languages.avisynth;\n      })(Prism);\n    }\n  }\n});\n\nexport {\n  require_avisynth\n};\n//# sourceMappingURL=chunk-WWO2WH4X.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00015466695185750723
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-WWO2WH4X.js (200) — 2024-07-28T11:41:34.821Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-WWO2WH4X.js"
        }
      ]
    }
  ]
}