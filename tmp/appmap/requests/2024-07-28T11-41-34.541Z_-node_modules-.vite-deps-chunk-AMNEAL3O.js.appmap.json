{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-AMNEAL3O.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"fbe-YruqqAutRFO+nicxVAQC/DUuJpk\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/nevod.js\nvar require_nevod = __commonJS({\n  \"node_modules/refractor/lang/nevod.js\"(exports, module) {\n    module.exports = nevod;\n    nevod.displayName = \"nevod\";\n    nevod.aliases = [];\n    function nevod(Prism) {\n      Prism.languages.nevod = {\n        comment: /\\/\\/.*|(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$))/,\n        string: {\n          pattern: /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))!?\\*?/,\n          greedy: true,\n          inside: {\n            \"string-attrs\": /!$|!\\*$|\\*$/\n          }\n        },\n        namespace: {\n          pattern: /(@namespace\\s+)[a-zA-Z0-9\\-.]+(?=\\s*\\{)/,\n          lookbehind: true\n        },\n        pattern: {\n          pattern: /(@pattern\\s+)?#?[a-zA-Z0-9\\-.]+(?:\\s*\\(\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]+\\s*(?:,\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]*)*\\))?(?=\\s*=)/,\n          lookbehind: true,\n          inside: {\n            \"pattern-name\": {\n              pattern: /^#?[a-zA-Z0-9\\-.]+/,\n              alias: \"class-name\"\n            },\n            fields: {\n              pattern: /\\(.*\\)/,\n              inside: {\n                \"field-name\": {\n                  pattern: /[a-zA-Z0-9\\-.]+/,\n                  alias: \"variable\"\n                },\n                punctuation: /[,()]/,\n                operator: {\n                  pattern: /~/,\n                  alias: \"field-hidden-mark\"\n                }\n              }\n            }\n          }\n        },\n        search: {\n          pattern: /(@search\\s+|#)[a-zA-Z0-9\\-.]+(?:\\.\\*)?(?=\\s*;)/,\n          alias: \"function\",\n          lookbehind: true\n        },\n        keyword: /@(?:having|inside|namespace|outside|pattern|require|search|where)\\b/,\n        \"standard-pattern\": {\n          pattern: /\\b(?:Alpha|AlphaNum|Any|Blank|End|LineBreak|Num|NumAlpha|Punct|Space|Start|Symbol|Word|WordBreak)\\b(?:\\([a-zA-Z0-9\\-.,\\s+]*\\))?/,\n          inside: {\n            \"standard-pattern-name\": {\n              pattern: /^[a-zA-Z0-9\\-.]+/,\n              alias: \"builtin\"\n            },\n            quantifier: {\n              pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n              alias: \"number\"\n            },\n            \"standard-pattern-attr\": {\n              pattern: /[a-zA-Z0-9\\-.]+/,\n              alias: \"builtin\"\n            },\n            punctuation: /[,()]/\n          }\n        },\n        quantifier: {\n          pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n          alias: \"number\"\n        },\n        operator: [\n          {\n            pattern: /=/,\n            alias: \"pattern-def\"\n          },\n          {\n            pattern: /&/,\n            alias: \"conjunction\"\n          },\n          {\n            pattern: /~/,\n            alias: \"exception\"\n          },\n          {\n            pattern: /\\?/,\n            alias: \"optionality\"\n          },\n          {\n            pattern: /[[\\]]/,\n            alias: \"repetition\"\n          },\n          {\n            pattern: /[{}]/,\n            alias: \"variation\"\n          },\n          {\n            pattern: /[+_]/,\n            alias: \"sequence\"\n          },\n          {\n            pattern: /\\.{2,3}/,\n            alias: \"span\"\n          }\n        ],\n        \"field-capture\": [\n          {\n            pattern: /([a-zA-Z0-9\\-.]+\\s*\\()\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+(?:\\s*,\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+)*(?=\\s*\\))/,\n            lookbehind: true,\n            inside: {\n              \"field-name\": {\n                pattern: /[a-zA-Z0-9\\-.]+/,\n                alias: \"variable\"\n              },\n              colon: /:/\n            }\n          },\n          {\n            pattern: /[a-zA-Z0-9\\-.]+\\s*:/,\n            inside: {\n              \"field-name\": {\n                pattern: /[a-zA-Z0-9\\-.]+/,\n                alias: \"variable\"\n              },\n              colon: /:/\n            }\n          }\n        ],\n        punctuation: /[:;,()]/,\n        name: /[a-zA-Z0-9\\-.]+/\n      };\n    }\n  }\n});\n\nexport {\n  require_nevod\n};\n//# sourceMappingURL=chunk-AMNEAL3O.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.0013500830391421914
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-AMNEAL3O.js (200) â€” 2024-07-28T11:41:34.541Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-AMNEAL3O.js"
        }
      ]
    }
  ]
}