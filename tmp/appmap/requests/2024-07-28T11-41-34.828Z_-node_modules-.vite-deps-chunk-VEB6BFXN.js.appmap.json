{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-VEB6BFXN.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"adf-1KxJq/zpL3S/aIkmKcrTTgxxIKw\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/bicep.js\nvar require_bicep = __commonJS({\n  \"node_modules/refractor/lang/bicep.js\"(exports, module) {\n    module.exports = bicep;\n    bicep.displayName = \"bicep\";\n    bicep.aliases = [];\n    function bicep(Prism) {\n      Prism.languages.bicep = {\n        comment: [\n          {\n            // multiline comments eg /* ASDF */\n            pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n            lookbehind: true,\n            greedy: true\n          },\n          {\n            // singleline comments eg // ASDF\n            pattern: /(^|[^\\\\:])\\/\\/.*/,\n            lookbehind: true,\n            greedy: true\n          }\n        ],\n        property: [\n          {\n            pattern: /([\\r\\n][ \\t]*)[a-z_]\\w*(?=[ \\t]*:)/i,\n            lookbehind: true\n          },\n          {\n            pattern: /([\\r\\n][ \\t]*)'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'(?=[ \\t]*:)/,\n            lookbehind: true,\n            greedy: true\n          }\n        ],\n        string: [\n          {\n            pattern: /'''[^'][\\s\\S]*?'''/,\n            greedy: true\n          },\n          {\n            pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'/,\n            lookbehind: true,\n            greedy: true\n          }\n        ],\n        \"interpolated-string\": {\n          pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?:(?!\\{)|\\{[^{}\\r\\n]*\\})|[^'\\\\\\r\\n$])*'/,\n          lookbehind: true,\n          greedy: true,\n          inside: {\n            interpolation: {\n              pattern: /\\$\\{[^{}\\r\\n]*\\}/,\n              inside: {\n                expression: {\n                  pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n                  lookbehind: true\n                },\n                punctuation: /^\\$\\{|\\}$/\n              }\n            },\n            string: /[\\s\\S]+/\n          }\n        },\n        datatype: {\n          pattern: /(\\b(?:output|param)\\b[ \\t]+\\w+[ \\t]+)\\w+\\b/,\n          lookbehind: true,\n          alias: \"class-name\"\n        },\n        boolean: /\\b(?:false|true)\\b/,\n        // https://github.com/Azure/bicep/blob/114a3251b4e6e30082a58729f19a8cc4e374ffa6/src/textmate/bicep.tmlanguage#L184\n        keyword: /\\b(?:existing|for|if|in|module|null|output|param|resource|targetScope|var)\\b/,\n        decorator: /@\\w+\\b/,\n        function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n        number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n        operator: /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/,\n        punctuation: /[{}[\\];(),.:]/\n      };\n      Prism.languages.bicep[\"interpolated-string\"].inside[\"interpolation\"].inside[\"expression\"].inside = Prism.languages.bicep;\n    }\n  }\n});\n\nexport {\n  require_bicep\n};\n//# sourceMappingURL=chunk-VEB6BFXN.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00042604096233844757
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-VEB6BFXN.js (200) â€” 2024-07-28T11:41:34.828Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-VEB6BFXN.js"
        }
      ]
    }
  ]
}