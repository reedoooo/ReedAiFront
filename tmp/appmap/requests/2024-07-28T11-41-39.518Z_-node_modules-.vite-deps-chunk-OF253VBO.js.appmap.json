{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-OF253VBO.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"206e-SZYtG9XzKkKqW8nCu+LFIEm0Yho\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/julia.js\nvar require_julia = __commonJS({\n  \"node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/julia.js\"(exports, module) {\n    function julia(hljs) {\n      var VARIABLE_NAME_RE = \"[A-Za-z_\\\\u00A1-\\\\uFFFF][A-Za-z_0-9\\\\u00A1-\\\\uFFFF]*\";\n      var KEYWORD_LIST = [\n        \"baremodule\",\n        \"begin\",\n        \"break\",\n        \"catch\",\n        \"ccall\",\n        \"const\",\n        \"continue\",\n        \"do\",\n        \"else\",\n        \"elseif\",\n        \"end\",\n        \"export\",\n        \"false\",\n        \"finally\",\n        \"for\",\n        \"function\",\n        \"global\",\n        \"if\",\n        \"import\",\n        \"in\",\n        \"isa\",\n        \"let\",\n        \"local\",\n        \"macro\",\n        \"module\",\n        \"quote\",\n        \"return\",\n        \"true\",\n        \"try\",\n        \"using\",\n        \"where\",\n        \"while\"\n      ];\n      var LITERAL_LIST = [\n        \"ARGS\",\n        \"C_NULL\",\n        \"DEPOT_PATH\",\n        \"ENDIAN_BOM\",\n        \"ENV\",\n        \"Inf\",\n        \"Inf16\",\n        \"Inf32\",\n        \"Inf64\",\n        \"InsertionSort\",\n        \"LOAD_PATH\",\n        \"MergeSort\",\n        \"NaN\",\n        \"NaN16\",\n        \"NaN32\",\n        \"NaN64\",\n        \"PROGRAM_FILE\",\n        \"QuickSort\",\n        \"RoundDown\",\n        \"RoundFromZero\",\n        \"RoundNearest\",\n        \"RoundNearestTiesAway\",\n        \"RoundNearestTiesUp\",\n        \"RoundToZero\",\n        \"RoundUp\",\n        \"VERSION|0\",\n        \"devnull\",\n        \"false\",\n        \"im\",\n        \"missing\",\n        \"nothing\",\n        \"pi\",\n        \"stderr\",\n        \"stdin\",\n        \"stdout\",\n        \"true\",\n        \"undef\",\n        \"π\",\n        \"ℯ\"\n      ];\n      var BUILT_IN_LIST = [\n        \"AbstractArray\",\n        \"AbstractChannel\",\n        \"AbstractChar\",\n        \"AbstractDict\",\n        \"AbstractDisplay\",\n        \"AbstractFloat\",\n        \"AbstractIrrational\",\n        \"AbstractMatrix\",\n        \"AbstractRange\",\n        \"AbstractSet\",\n        \"AbstractString\",\n        \"AbstractUnitRange\",\n        \"AbstractVecOrMat\",\n        \"AbstractVector\",\n        \"Any\",\n        \"ArgumentError\",\n        \"Array\",\n        \"AssertionError\",\n        \"BigFloat\",\n        \"BigInt\",\n        \"BitArray\",\n        \"BitMatrix\",\n        \"BitSet\",\n        \"BitVector\",\n        \"Bool\",\n        \"BoundsError\",\n        \"CapturedException\",\n        \"CartesianIndex\",\n        \"CartesianIndices\",\n        \"Cchar\",\n        \"Cdouble\",\n        \"Cfloat\",\n        \"Channel\",\n        \"Char\",\n        \"Cint\",\n        \"Cintmax_t\",\n        \"Clong\",\n        \"Clonglong\",\n        \"Cmd\",\n        \"Colon\",\n        \"Complex\",\n        \"ComplexF16\",\n        \"ComplexF32\",\n        \"ComplexF64\",\n        \"CompositeException\",\n        \"Condition\",\n        \"Cptrdiff_t\",\n        \"Cshort\",\n        \"Csize_t\",\n        \"Cssize_t\",\n        \"Cstring\",\n        \"Cuchar\",\n        \"Cuint\",\n        \"Cuintmax_t\",\n        \"Culong\",\n        \"Culonglong\",\n        \"Cushort\",\n        \"Cvoid\",\n        \"Cwchar_t\",\n        \"Cwstring\",\n        \"DataType\",\n        \"DenseArray\",\n        \"DenseMatrix\",\n        \"DenseVecOrMat\",\n        \"DenseVector\",\n        \"Dict\",\n        \"DimensionMismatch\",\n        \"Dims\",\n        \"DivideError\",\n        \"DomainError\",\n        \"EOFError\",\n        \"Enum\",\n        \"ErrorException\",\n        \"Exception\",\n        \"ExponentialBackOff\",\n        \"Expr\",\n        \"Float16\",\n        \"Float32\",\n        \"Float64\",\n        \"Function\",\n        \"GlobalRef\",\n        \"HTML\",\n        \"IO\",\n        \"IOBuffer\",\n        \"IOContext\",\n        \"IOStream\",\n        \"IdDict\",\n        \"IndexCartesian\",\n        \"IndexLinear\",\n        \"IndexStyle\",\n        \"InexactError\",\n        \"InitError\",\n        \"Int\",\n        \"Int128\",\n        \"Int16\",\n        \"Int32\",\n        \"Int64\",\n        \"Int8\",\n        \"Integer\",\n        \"InterruptException\",\n        \"InvalidStateException\",\n        \"Irrational\",\n        \"KeyError\",\n        \"LinRange\",\n        \"LineNumberNode\",\n        \"LinearIndices\",\n        \"LoadError\",\n        \"MIME\",\n        \"Matrix\",\n        \"Method\",\n        \"MethodError\",\n        \"Missing\",\n        \"MissingException\",\n        \"Module\",\n        \"NTuple\",\n        \"NamedTuple\",\n        \"Nothing\",\n        \"Number\",\n        \"OrdinalRange\",\n        \"OutOfMemoryError\",\n        \"OverflowError\",\n        \"Pair\",\n        \"PartialQuickSort\",\n        \"PermutedDimsArray\",\n        \"Pipe\",\n        \"ProcessFailedException\",\n        \"Ptr\",\n        \"QuoteNode\",\n        \"Rational\",\n        \"RawFD\",\n        \"ReadOnlyMemoryError\",\n        \"Real\",\n        \"ReentrantLock\",\n        \"Ref\",\n        \"Regex\",\n        \"RegexMatch\",\n        \"RoundingMode\",\n        \"SegmentationFault\",\n        \"Set\",\n        \"Signed\",\n        \"Some\",\n        \"StackOverflowError\",\n        \"StepRange\",\n        \"StepRangeLen\",\n        \"StridedArray\",\n        \"StridedMatrix\",\n        \"StridedVecOrMat\",\n        \"StridedVector\",\n        \"String\",\n        \"StringIndexError\",\n        \"SubArray\",\n        \"SubString\",\n        \"SubstitutionString\",\n        \"Symbol\",\n        \"SystemError\",\n        \"Task\",\n        \"TaskFailedException\",\n        \"Text\",\n        \"TextDisplay\",\n        \"Timer\",\n        \"Tuple\",\n        \"Type\",\n        \"TypeError\",\n        \"TypeVar\",\n        \"UInt\",\n        \"UInt128\",\n        \"UInt16\",\n        \"UInt32\",\n        \"UInt64\",\n        \"UInt8\",\n        \"UndefInitializer\",\n        \"UndefKeywordError\",\n        \"UndefRefError\",\n        \"UndefVarError\",\n        \"Union\",\n        \"UnionAll\",\n        \"UnitRange\",\n        \"Unsigned\",\n        \"Val\",\n        \"Vararg\",\n        \"VecElement\",\n        \"VecOrMat\",\n        \"Vector\",\n        \"VersionNumber\",\n        \"WeakKeyDict\",\n        \"WeakRef\"\n      ];\n      var KEYWORDS = {\n        $pattern: VARIABLE_NAME_RE,\n        keyword: KEYWORD_LIST,\n        literal: LITERAL_LIST,\n        built_in: BUILT_IN_LIST\n      };\n      var DEFAULT = {\n        keywords: KEYWORDS,\n        illegal: /<\\//\n      };\n      var NUMBER = {\n        className: \"number\",\n        // supported numeric literals:\n        //  * binary literal (e.g. 0x10)\n        //  * octal literal (e.g. 0o76543210)\n        //  * hexadecimal literal (e.g. 0xfedcba876543210)\n        //  * hexadecimal floating point literal (e.g. 0x1p0, 0x1.2p2)\n        //  * decimal literal (e.g. 9876543210, 100_000_000)\n        //  * floating pointe literal (e.g. 1.2, 1.2f, .2, 1., 1.2e10, 1.2e-10)\n        begin: /(\\b0x[\\d_]*(\\.[\\d_]*)?|0x\\.\\d[\\d_]*)p[-+]?\\d+|\\b0[box][a-fA-F0-9][a-fA-F0-9_]*|(\\b\\d[\\d_]*(\\.[\\d_]*)?|\\.\\d[\\d_]*)([eEfF][-+]?\\d+)?/,\n        relevance: 0\n      };\n      var CHAR = {\n        className: \"string\",\n        begin: /'(.|\\\\[xXuU][a-zA-Z0-9]+)'/\n      };\n      var INTERPOLATION = {\n        className: \"subst\",\n        begin: /\\$\\(/,\n        end: /\\)/,\n        keywords: KEYWORDS\n      };\n      var INTERPOLATED_VARIABLE = {\n        className: \"variable\",\n        begin: \"\\\\$\" + VARIABLE_NAME_RE\n      };\n      var STRING = {\n        className: \"string\",\n        contains: [hljs.BACKSLASH_ESCAPE, INTERPOLATION, INTERPOLATED_VARIABLE],\n        variants: [\n          { begin: /\\w*\"\"\"/, end: /\"\"\"\\w*/, relevance: 10 },\n          { begin: /\\w*\"/, end: /\"\\w*/ }\n        ]\n      };\n      var COMMAND = {\n        className: \"string\",\n        contains: [hljs.BACKSLASH_ESCAPE, INTERPOLATION, INTERPOLATED_VARIABLE],\n        begin: \"`\",\n        end: \"`\"\n      };\n      var MACROCALL = {\n        className: \"meta\",\n        begin: \"@\" + VARIABLE_NAME_RE\n      };\n      var COMMENT = {\n        className: \"comment\",\n        variants: [\n          { begin: \"#=\", end: \"=#\", relevance: 10 },\n          { begin: \"#\", end: \"$\" }\n        ]\n      };\n      DEFAULT.name = \"Julia\";\n      DEFAULT.contains = [\n        NUMBER,\n        CHAR,\n        STRING,\n        COMMAND,\n        MACROCALL,\n        COMMENT,\n        hljs.HASH_COMMENT_MODE,\n        {\n          className: \"keyword\",\n          begin: \"\\\\b(((abstract|primitive)\\\\s+)type|(mutable\\\\s+)?struct)\\\\b\"\n        },\n        { begin: /<:/ }\n        // relevance booster\n      ];\n      INTERPOLATION.contains = DEFAULT.contains;\n      return DEFAULT;\n    }\n    module.exports = julia;\n  }\n});\n\nexport {\n  require_julia\n};\n//# sourceMappingURL=chunk-OF253VBO.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.0005182919558137655
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-OF253VBO.js (200) — 2024-07-28T11:41:39.518Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-OF253VBO.js"
        }
      ]
    }
  ]
}