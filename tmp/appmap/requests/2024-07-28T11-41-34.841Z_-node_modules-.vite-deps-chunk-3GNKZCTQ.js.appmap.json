{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-3GNKZCTQ.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"ed5-UggJtIoHiDUxQwdwJAHd3Xwz2UA\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  require_sql\n} from \"/node_modules/.vite/deps/chunk-J5Z6PBEF.js?v=b39bb78e\";\nimport {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/apex.js\nvar require_apex = __commonJS({\n  \"node_modules/refractor/lang/apex.js\"(exports, module) {\n    var refractorSql = require_sql();\n    module.exports = apex;\n    apex.displayName = \"apex\";\n    apex.aliases = [];\n    function apex(Prism) {\n      Prism.register(refractorSql);\n      (function(Prism2) {\n        var keywords = /\\b(?:(?:after|before)(?=\\s+[a-z])|abstract|activate|and|any|array|as|asc|autonomous|begin|bigdecimal|blob|boolean|break|bulk|by|byte|case|cast|catch|char|class|collect|commit|const|continue|currency|date|datetime|decimal|default|delete|desc|do|double|else|end|enum|exception|exit|export|extends|final|finally|float|for|from|get(?=\\s*[{};])|global|goto|group|having|hint|if|implements|import|in|inner|insert|instanceof|int|integer|interface|into|join|like|limit|list|long|loop|map|merge|new|not|null|nulls|number|object|of|on|or|outer|override|package|parallel|pragma|private|protected|public|retrieve|return|rollback|select|set|short|sObject|sort|static|string|super|switch|synchronized|system|testmethod|then|this|throw|time|transaction|transient|trigger|try|undelete|update|upsert|using|virtual|void|webservice|when|where|while|(?:inherited|with|without)\\s+sharing)\\b/i;\n        var className = /\\b(?:(?=[a-z_]\\w*\\s*[<\\[])|(?!<keyword>))[A-Z_]\\w*(?:\\s*\\.\\s*[A-Z_]\\w*)*\\b(?:\\s*(?:\\[\\s*\\]|<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>))*/.source.replace(\n          /<keyword>/g,\n          function() {\n            return keywords.source;\n          }\n        );\n        function insertClassName(pattern) {\n          return RegExp(\n            pattern.replace(/<CLASS-NAME>/g, function() {\n              return className;\n            }),\n            \"i\"\n          );\n        }\n        var classNameInside = {\n          keyword: keywords,\n          punctuation: /[()\\[\\]{};,:.<>]/\n        };\n        Prism2.languages.apex = {\n          comment: Prism2.languages.clike.comment,\n          string: Prism2.languages.clike.string,\n          sql: {\n            pattern: /((?:[=,({:]|\\breturn)\\s*)\\[[^\\[\\]]*\\]/i,\n            lookbehind: true,\n            greedy: true,\n            alias: \"language-sql\",\n            inside: Prism2.languages.sql\n          },\n          annotation: {\n            pattern: /@\\w+\\b/,\n            alias: \"punctuation\"\n          },\n          \"class-name\": [\n            {\n              pattern: insertClassName(\n                /(\\b(?:class|enum|extends|implements|instanceof|interface|new|trigger\\s+\\w+\\s+on)\\s+)<CLASS-NAME>/.source\n              ),\n              lookbehind: true,\n              inside: classNameInside\n            },\n            {\n              // cast\n              pattern: insertClassName(\n                /(\\(\\s*)<CLASS-NAME>(?=\\s*\\)\\s*[\\w(])/.source\n              ),\n              lookbehind: true,\n              inside: classNameInside\n            },\n            {\n              // variable/parameter declaration and return types\n              pattern: insertClassName(/<CLASS-NAME>(?=\\s*\\w+\\s*[;=,(){:])/.source),\n              inside: classNameInside\n            }\n          ],\n          trigger: {\n            pattern: /(\\btrigger\\s+)\\w+\\b/i,\n            lookbehind: true,\n            alias: \"class-name\"\n          },\n          keyword: keywords,\n          function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n          boolean: /\\b(?:false|true)\\b/i,\n          number: /(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d+|L)?)\\b/i,\n          operator: /[!=](?:==?)?|\\?\\.?|&&|\\|\\||--|\\+\\+|[-+*/^&|]=?|:|<<?=?|>{1,3}=?/,\n          punctuation: /[()\\[\\]{};,.]/\n        };\n      })(Prism);\n    }\n  }\n});\n\nexport {\n  require_apex\n};\n//# sourceMappingURL=chunk-3GNKZCTQ.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.0007194160716608167
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-3GNKZCTQ.js (200) â€” 2024-07-28T11:41:34.841Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-3GNKZCTQ.js"
        }
      ]
    }
  ]
}