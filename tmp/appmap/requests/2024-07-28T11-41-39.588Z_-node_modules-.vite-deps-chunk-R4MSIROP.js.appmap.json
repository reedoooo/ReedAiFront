{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-R4MSIROP.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"af6-uWTmXK2RE+W75RFgY2vQeBTMth8\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/http.js\nvar require_http = __commonJS({\n  \"node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/http.js\"(exports, module) {\n    function source(re) {\n      if (!re) return null;\n      if (typeof re === \"string\") return re;\n      return re.source;\n    }\n    function concat(...args) {\n      const joined = args.map((x) => source(x)).join(\"\");\n      return joined;\n    }\n    function http(hljs) {\n      const VERSION = \"HTTP/(2|1\\\\.[01])\";\n      const HEADER_NAME = /[A-Za-z][A-Za-z0-9-]*/;\n      const HEADER = {\n        className: \"attribute\",\n        begin: concat(\"^\", HEADER_NAME, \"(?=\\\\:\\\\s)\"),\n        starts: {\n          contains: [\n            {\n              className: \"punctuation\",\n              begin: /: /,\n              relevance: 0,\n              starts: {\n                end: \"$\",\n                relevance: 0\n              }\n            }\n          ]\n        }\n      };\n      const HEADERS_AND_BODY = [\n        HEADER,\n        {\n          begin: \"\\\\n\\\\n\",\n          starts: { subLanguage: [], endsWithParent: true }\n        }\n      ];\n      return {\n        name: \"HTTP\",\n        aliases: [\"https\"],\n        illegal: /\\S/,\n        contains: [\n          // response\n          {\n            begin: \"^(?=\" + VERSION + \" \\\\d{3})\",\n            end: /$/,\n            contains: [\n              {\n                className: \"meta\",\n                begin: VERSION\n              },\n              {\n                className: \"number\",\n                begin: \"\\\\b\\\\d{3}\\\\b\"\n              }\n            ],\n            starts: {\n              end: /\\b\\B/,\n              illegal: /\\S/,\n              contains: HEADERS_AND_BODY\n            }\n          },\n          // request\n          {\n            begin: \"(?=^[A-Z]+ (.*?) \" + VERSION + \"$)\",\n            end: /$/,\n            contains: [\n              {\n                className: \"string\",\n                begin: \" \",\n                end: \" \",\n                excludeBegin: true,\n                excludeEnd: true\n              },\n              {\n                className: \"meta\",\n                begin: VERSION\n              },\n              {\n                className: \"keyword\",\n                begin: \"[A-Z]+\"\n              }\n            ],\n            starts: {\n              end: /\\b\\B/,\n              illegal: /\\S/,\n              contains: HEADERS_AND_BODY\n            }\n          },\n          // to allow headers to work even without a preamble\n          hljs.inherit(HEADER, {\n            relevance: 0\n          })\n        ]\n      };\n    }\n    module.exports = http;\n  }\n});\n\nexport {\n  require_http\n};\n//# sourceMappingURL=chunk-R4MSIROP.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00006804207805544138
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-R4MSIROP.js (200) â€” 2024-07-28T11:41:39.588Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-R4MSIROP.js"
        }
      ]
    }
  ]
}