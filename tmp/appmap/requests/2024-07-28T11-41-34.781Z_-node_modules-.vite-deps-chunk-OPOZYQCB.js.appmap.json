{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-OPOZYQCB.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"109c-wDT/WR0FkDUSKeGOmxgPINIhM1I\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/d.js\nvar require_d = __commonJS({\n  \"node_modules/refractor/lang/d.js\"(exports, module) {\n    module.exports = d;\n    d.displayName = \"d\";\n    d.aliases = [];\n    function d(Prism) {\n      Prism.languages.d = Prism.languages.extend(\"clike\", {\n        comment: [\n          {\n            // Shebang\n            pattern: /^\\s*#!.+/,\n            greedy: true\n          },\n          {\n            pattern: RegExp(\n              /(^|[^\\\\])/.source + \"(?:\" + [\n                // /+ comment +/\n                // Allow one level of nesting\n                /\\/\\+(?:\\/\\+(?:[^+]|\\+(?!\\/))*\\+\\/|(?!\\/\\+)[\\s\\S])*?\\+\\//.source,\n                // // comment\n                /\\/\\/.*/.source,\n                // /* comment */\n                /\\/\\*[\\s\\S]*?\\*\\//.source\n              ].join(\"|\") + \")\"\n            ),\n            lookbehind: true,\n            greedy: true\n          }\n        ],\n        string: [\n          {\n            pattern: RegExp(\n              [\n                // r\"\", x\"\"\n                /\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/.source,\n                // q\"[]\", q\"()\", q\"<>\", q\"{}\"\n                /\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/.source,\n                // q\"IDENT\n                // ...\n                // IDENT\"\n                /\\bq\"((?!\\d)\\w+)$[\\s\\S]*?^\\1\"/.source,\n                // q\"//\", q\"||\", etc.\n                // eslint-disable-next-line regexp/strict\n                /\\bq\"(.)[\\s\\S]*?\\2\"/.source,\n                // eslint-disable-next-line regexp/strict\n                /([\"`])(?:\\\\[\\s\\S]|(?!\\3)[^\\\\])*\\3[cwd]?/.source\n              ].join(\"|\"),\n              \"m\"\n            ),\n            greedy: true\n          },\n          {\n            pattern: /\\bq\\{(?:\\{[^{}]*\\}|[^{}])*\\}/,\n            greedy: true,\n            alias: \"token-string\"\n          }\n        ],\n        // In order: $, keywords and special tokens, globally defined symbols\n        keyword: /\\$|\\b(?:__(?:(?:DATE|EOF|FILE|FUNCTION|LINE|MODULE|PRETTY_FUNCTION|TIMESTAMP|TIME|VENDOR|VERSION)__|gshared|parameters|traits|vector)|abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|dstring|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|ptrdiff_t|public|pure|real|ref|return|scope|shared|short|size_t|static|string|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|wstring)\\b/,\n        number: [\n          // The lookbehind and the negative look-ahead try to prevent bad highlighting of the .. operator\n          // Hexadecimal numbers must be handled separately to avoid problems with exponent \"e\"\n          /\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]{0,4}/i,\n          {\n            pattern: /((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]{0,4}/i,\n            lookbehind: true\n          }\n        ],\n        operator: /\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/\n      });\n      Prism.languages.insertBefore(\"d\", \"string\", {\n        // Characters\n        // 'a', '\\\\', '\\n', '\\xFF', '\\377', '\\uFFFF', '\\U0010FFFF', '\\quot'\n        char: /'(?:\\\\(?:\\W|\\w+)|[^\\\\])'/\n      });\n      Prism.languages.insertBefore(\"d\", \"keyword\", {\n        property: /\\B@\\w*/\n      });\n      Prism.languages.insertBefore(\"d\", \"function\", {\n        register: {\n          // Iasm registers\n          pattern: /\\b(?:[ABCD][LHX]|E?(?:BP|DI|SI|SP)|[BS]PL|[ECSDGF]S|CR[0234]|[DS]IL|DR[012367]|E[ABCD]X|X?MM[0-7]|R(?:1[0-5]|[89])[BWD]?|R[ABCD]X|R[BS]P|R[DS]I|TR[3-7]|XMM(?:1[0-5]|[89])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,\n          alias: \"variable\"\n        }\n      });\n    }\n  }\n});\n\nexport {\n  require_d\n};\n//# sourceMappingURL=chunk-OPOZYQCB.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00021466694306582212
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-OPOZYQCB.js (200) â€” 2024-07-28T11:41:34.781Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-OPOZYQCB.js"
        }
      ]
    }
  ]
}