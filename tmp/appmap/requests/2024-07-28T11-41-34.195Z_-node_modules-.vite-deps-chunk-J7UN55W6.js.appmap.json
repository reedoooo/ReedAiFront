{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-J7UN55W6.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"cf1-DYkSiBtFWVGNwT6z7hDocT+FwZI\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/scss.js\nvar require_scss = __commonJS({\n  \"node_modules/refractor/lang/scss.js\"(exports, module) {\n    module.exports = scss;\n    scss.displayName = \"scss\";\n    scss.aliases = [];\n    function scss(Prism) {\n      Prism.languages.scss = Prism.languages.extend(\"css\", {\n        comment: {\n          pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n          lookbehind: true\n        },\n        atrule: {\n          pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n          inside: {\n            rule: /@[\\w-]+/\n            // See rest below\n          }\n        },\n        // url, compassified\n        url: /(?:[-a-z]+-)?url(?=\\()/i,\n        // CSS selector regex is not appropriate for Sass\n        // since there can be lot more things (var, @ directive, nesting..)\n        // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n        // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n        // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n        // can \"pass\" as a selector- e.g: proper#{$erty})\n        // this one was hard to do, so please be careful if you edit this one :)\n        selector: {\n          // Initial look-ahead is used to prevent matching of blank selectors\n          pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,\n          inside: {\n            parent: {\n              pattern: /&/,\n              alias: \"important\"\n            },\n            placeholder: /%[-\\w]+/,\n            variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n          }\n        },\n        property: {\n          pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n          inside: {\n            variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n          }\n        }\n      });\n      Prism.languages.insertBefore(\"scss\", \"atrule\", {\n        keyword: [\n          /@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i,\n          {\n            pattern: /( )(?:from|through)(?= )/,\n            lookbehind: true\n          }\n        ]\n      });\n      Prism.languages.insertBefore(\"scss\", \"important\", {\n        // var and interpolated vars\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      });\n      Prism.languages.insertBefore(\"scss\", \"function\", {\n        \"module-modifier\": {\n          pattern: /\\b(?:as|hide|show|with)\\b/i,\n          alias: \"keyword\"\n        },\n        placeholder: {\n          pattern: /%[-\\w]+/,\n          alias: \"selector\"\n        },\n        statement: {\n          pattern: /\\B!(?:default|optional)\\b/i,\n          alias: \"keyword\"\n        },\n        boolean: /\\b(?:false|true)\\b/,\n        null: {\n          pattern: /\\bnull\\b/,\n          alias: \"keyword\"\n        },\n        operator: {\n          pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,\n          lookbehind: true\n        }\n      });\n      Prism.languages.scss[\"atrule\"].inside.rest = Prism.languages.scss;\n    }\n  }\n});\n\nexport {\n  require_scss\n};\n//# sourceMappingURL=chunk-J7UN55W6.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00013037491589784622
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-J7UN55W6.js (200) â€” 2024-07-28T11:41:34.195Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-J7UN55W6.js"
        }
      ]
    }
  ]
}