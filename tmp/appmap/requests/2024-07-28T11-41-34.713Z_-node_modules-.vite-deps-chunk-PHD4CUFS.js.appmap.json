{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-PHD4CUFS.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"c19-5mdcwYZltd2r6AksQmTQcGFLP50\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/groovy.js\nvar require_groovy = __commonJS({\n  \"node_modules/refractor/lang/groovy.js\"(exports, module) {\n    module.exports = groovy;\n    groovy.displayName = \"groovy\";\n    groovy.aliases = [];\n    function groovy(Prism) {\n      Prism.languages.groovy = Prism.languages.extend(\"clike\", {\n        string: [\n          {\n            // https://groovy-lang.org/syntax.html#_dollar_slashy_string\n            pattern: /(\"\"\"|''')(?:[^\\\\]|\\\\[\\s\\S])*?\\1|\\$\\/(?:[^/$]|\\$(?:[/$]|(?![/$]))|\\/(?!\\$))*\\/\\$/,\n            greedy: true\n          },\n          {\n            // TODO: Slash strings (e.g. /foo/) can contain line breaks but this will cause a lot of trouble with\n            // simple division (see JS regex), so find a fix maybe?\n            pattern: /([\"'/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true\n          }\n        ],\n        keyword: /\\b(?:abstract|as|assert|boolean|break|byte|case|catch|char|class|const|continue|def|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|in|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n        number: /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?\\d+)?)[glidf]?\\b/i,\n        operator: {\n          pattern: /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.\\.(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n          lookbehind: true\n        },\n        punctuation: /\\.+|[{}[\\];(),:$]/\n      });\n      Prism.languages.insertBefore(\"groovy\", \"string\", {\n        shebang: {\n          pattern: /#!.+/,\n          alias: \"comment\"\n        }\n      });\n      Prism.languages.insertBefore(\"groovy\", \"punctuation\", {\n        \"spock-block\": /\\b(?:and|cleanup|expect|given|setup|then|when|where):/\n      });\n      Prism.languages.insertBefore(\"groovy\", \"function\", {\n        annotation: {\n          pattern: /(^|[^.])@\\w+/,\n          lookbehind: true,\n          alias: \"punctuation\"\n        }\n      });\n      Prism.hooks.add(\"wrap\", function(env) {\n        if (env.language === \"groovy\" && env.type === \"string\") {\n          var delimiter = env.content.value[0];\n          if (delimiter != \"'\") {\n            var pattern = /([^\\\\])(?:\\$(?:\\{.*?\\}|[\\w.]+))/;\n            if (delimiter === \"$\") {\n              pattern = /([^\\$])(?:\\$(?:\\{.*?\\}|[\\w.]+))/;\n            }\n            env.content.value = env.content.value.replace(/&lt;/g, \"<\").replace(/&amp;/g, \"&\");\n            env.content = Prism.highlight(env.content.value, {\n              expression: {\n                pattern,\n                lookbehind: true,\n                inside: Prism.languages.groovy\n              }\n            });\n            env.classes.push(delimiter === \"/\" ? \"regex\" : \"gstring\");\n          }\n        }\n      });\n    }\n  }\n});\n\nexport {\n  require_groovy\n};\n//# sourceMappingURL=chunk-PHD4CUFS.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00019120797514915466
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-PHD4CUFS.js (200) â€” 2024-07-28T11:41:34.713Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-PHD4CUFS.js"
        }
      ]
    }
  ]
}