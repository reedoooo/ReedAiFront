{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/src/layouts/chat/index.jsx",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/src/routes/index.jsx",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22",
          "If-None-Match": "W/\"29a2-Ue/He4FUnNYyVJyGcq9lq2sW0x4\""
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "no-cache",
          "Etag": "W/\"2992-24LbvSgEODjQYIQiSvB4Lz6ZiJg\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import { createHotContext as __vite__createHotContext } from \"/@vite/client\";import.meta.hot = __vite__createHotContext(\"/src/layouts/chat/index.jsx\");import __vite__cjsImport0_react_jsxDevRuntime from \"/node_modules/.vite/deps/react_jsx-dev-runtime.js?v=f00dba07\"; const Fragment = __vite__cjsImport0_react_jsxDevRuntime[\"Fragment\"]; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime[\"jsxDEV\"];\nimport RefreshRuntime from \"/@react-refresh\";\nconst inWebWorker = typeof WorkerGlobalScope !== \"undefined\" && self instanceof WorkerGlobalScope;\nlet prevRefreshReg;\nlet prevRefreshSig;\nif (import.meta.hot && !inWebWorker) {\n  if (!window.__vite_plugin_react_preamble_installed__) {\n    throw new Error(\"@vitejs/plugin-react can't detect preamble. Something is wrong. See https://github.com/vitejs/vite-plugin-react/pull/11#discussion_r430879201\");\n  }\n  prevRefreshReg = window.$RefreshReg$;\n  prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    RefreshRuntime.register(type, \"/Users/reedvogt/Desktop/ReedAiFront/src/layouts/chat/index.jsx \" + id);\n  };\n  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport { Box, CircularProgress, Portal } from \"/node_modules/.vite/deps/@mui_material.js?v=6aadf61c\";\nimport __vite__cjsImport4_react from \"/node_modules/.vite/deps/react.js?v=f00dba07\"; const React = __vite__cjsImport4_react.__esModule ? __vite__cjsImport4_react.default : __vite__cjsImport4_react; const useCallback = __vite__cjsImport4_react[\"useCallback\"]; const useEffect = __vite__cjsImport4_react[\"useEffect\"]; const useRef = __vite__cjsImport4_react[\"useRef\"]; const useState = __vite__cjsImport4_react[\"useState\"];\nimport { Outlet, useNavigation } from \"/node_modules/.vite/deps/react-router-dom.js?v=20530588\";\nimport { ChatSidebar } from \"/src/components/chat/sidebar/index.jsx\";\nimport { useAuthStore } from \"/src/contexts/AuthProvider.jsx\";\nimport { useChatStore } from \"/src/contexts/ChatProvider.jsx\";\nimport { useUserStore } from \"/src/contexts/UserProvider.jsx\";\nimport useMode from \"/src/hooks/useMode.jsx\";\nimport useRouter from \"/src/hooks/useRouter.jsx\";\nimport { getLoadType } from \"/src/utils/navigation/index.jsx\";\nimport LoadingOverlay from \"/src/layouts/chat/components/LoadingStepsOverlay.jsx\";\nconst initialSections = [\n  {\n    title: \"User Setup\",\n    steps: [\n      { label: \"Checking for active user\", completed: false },\n      { label: \"Setting user profile\", completed: false }\n    ]\n  },\n  {\n    title: \"Workspace Setup\",\n    steps: [\n      { label: \"Setting up workspaces\", completed: false },\n      { label: \"Checking for selected workspace\", completed: false },\n      { label: \"Setting up assistants\", completed: false }\n    ]\n  },\n  {\n    title: \"Data Loading\",\n    steps: [\n      { label: \"Setting up collections\", completed: false },\n      { label: \"Setting workspace folder\", completed: false },\n      { label: \"Setting workspace files\", completed: false },\n      { label: \"Setting workspace prompt\", completed: false },\n      { label: \"Setting tools\", completed: false }\n    ]\n  },\n  {\n    title: \"Chat Setup\",\n    steps: [\n      { label: \"Checking for active user chat session\", completed: false },\n      { label: \"Setting active user chat session\", completed: false },\n      { label: \"Setting chat session messages\", completed: false },\n      { label: \"Setting chat settings\", completed: false },\n      { label: \"Saving chat setup settings\", completed: false }\n    ]\n  }\n];\nconst ChatLayout = () => {\n  _s();\n  const { theme } = useMode();\n  const navigation = useNavigation();\n  const loadType = getLoadType(navigation);\n  const authStore = useAuthStore();\n  const userStore = useUserStore();\n  const chatStore = useChatStore();\n  const boxRef = useRef(null);\n  const topCheckboxRef = useRef(null);\n  const { navigate } = useRouter();\n  const [state, setState] = useState({\n    isLoggedIn: false,\n    isApiKeyValid: false,\n    loading: true,\n    loadingSections: initialSections\n  });\n  const { isLoggedIn, isApiKeyValid, loading, loadingSections } = state;\n  const updateStep = useCallback((sectionIndex, stepIndex, completed) => {\n    setState((prevState) => {\n      const newSections = [...prevState.loadingSections];\n      if (!newSections[sectionIndex]) return prevState;\n      newSections[sectionIndex].steps[stepIndex].completed = completed;\n      return { ...prevState, loadingSections: newSections };\n    });\n  }, []);\n  const checkUser = useCallback(() => !!localStorage.getItem(\"userId\"), []);\n  const checkApiKey = useCallback(() => !!localStorage.getItem(\"apiKey\"), []);\n  useEffect(() => {\n    const handleStorageChange = () => {\n      setState((prevState) => ({\n        ...prevState,\n        isLoggedIn: checkUser(),\n        isApiKeyValid: checkApiKey()\n      }));\n    };\n    handleStorageChange();\n    window.addEventListener(\"storage\", handleStorageChange);\n    return () => {\n      window.removeEventListener(\"storage\", handleStorageChange);\n    };\n  }, [checkUser, checkApiKey]);\n  const fetchData = useCallback(async () => {\n    setState((prevState) => ({ ...prevState, loading: true }));\n    try {\n      updateStep(0, 0, true);\n      updateStep(0, 1, true);\n      const storedUserData = JSON.parse(localStorage.getItem(\"userStorage\"));\n      if (!storedUserData) {\n        return navigate(\"/auth/sign-in\");\n      }\n      storedUserData.user.profile && updateStep(1, 0, true);\n      storedUserData.user.chatSessions && updateStep(1, 1, true);\n      storedUserData.user.assistants && updateStep(1, 2, true);\n      storedUserData.user.collections && updateStep(2, 0, true);\n      storedUserData.user.folders && updateStep(2, 1, true);\n      storedUserData.user.files && updateStep(2, 2, true);\n      storedUserData.user.presetData && updateStep(2, 3, true);\n      storedUserData.user.toolData && updateStep(2, 4, true);\n      storedUserData.user.modelData && updateStep(2, 5, true);\n      chatStore.actions?.setChatSettings({\n        model: \"gpt-4-1106-preview\",\n        prompt: storedUserData.user.workspace?.default_prompt || \"You are a friendly, helpful AI assistant.\",\n        temperature: storedUserData.user.workspace?.default_temperature || 0.5,\n        contextLength: storedUserData.user.workspace?.default_context_length || 4096,\n        includeProfileContext: storedUserData.user.workspace?.include_profile_context || true,\n        includeWorkspaceInstructions: storedUserData.user.workspace?.include_workspace_instructions || true,\n        embeddingsProvider: storedUserData.user.workspace?.embeddings_provider || \"openai\"\n      });\n      updateStep(3, 3, true);\n      updateStep(3, 4, true);\n      storedUserData.user.chatSessions[0].active && updateStep(4, 0, true);\n      updateStep(4, 1, true);\n      updateStep(4, 2, true);\n      updateStep(4, 3, true);\n      updateStep(4, 4, true);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    } finally {\n      setState((prevState) => ({ ...prevState, loading: false }));\n    }\n  }, [chatStore, updateStep]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  if (loadType === \"lazy\") {\n    console.log(\"lazy\");\n  } else if (loadType === \"normal\") {\n    console.log(\"normal\");\n    return /* @__PURE__ */ jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: \"/Users/reedvogt/Desktop/ReedAiFront/src/layouts/chat/index.jsx\",\n      lineNumber: 155,\n      columnNumber: 12\n    }, this);\n  } else if (loadType === \"redirect\") {\n    console.log(\"redirect\");\n  }\n  return /* @__PURE__ */ jsxDEV(Box, { sx: { display: \"flex\", flexDirection: \"column\", minHeight: \"100vh\" }, children: [\n    /* @__PURE__ */ jsxDEV(LoadingOverlay, { loading, sections: loadingSections }, void 0, false, {\n      fileName: \"/Users/reedvogt/Desktop/ReedAiFront/src/layouts/chat/index.jsx\",\n      lineNumber: 162,\n      columnNumber: 7\n    }, this),\n    /* @__PURE__ */ jsxDEV(Fragment, { children: [\n      /* @__PURE__ */ jsxDEV(Portal, { children: /* @__PURE__ */ jsxDEV(Box, { sx: { padding: \"4px\", maxHeight: \"calc(100% - 16px)\" }, children: /* @__PURE__ */ jsxDEV(ChatSidebar, {}, void 0, false, {\n        fileName: \"/Users/reedvogt/Desktop/ReedAiFront/src/layouts/chat/index.jsx\",\n        lineNumber: 166,\n        columnNumber: 13\n      }, this) }, void 0, false, {\n        fileName: \"/Users/reedvogt/Desktop/ReedAiFront/src/layouts/chat/index.jsx\",\n        lineNumber: 165,\n        columnNumber: 11\n      }, this) }, void 0, false, {\n        fileName: \"/Users/reedvogt/Desktop/ReedAiFront/src/layouts/chat/index.jsx\",\n        lineNumber: 164,\n        columnNumber: 9\n      }, this),\n      /* @__PURE__ */ jsxDEV(\n        Box,\n        {\n          sx: {\n            flexGrow: 1,\n            marginLeft: \"60px\",\n            // Adjust to match the sidebar padding\n            display: \"flex\",\n            flexDirection: \"column\",\n            width: \"calc(100% - 40px)\"\n            // Assuming the sidebar width is 240px + 16px padding\n          },\n          children: /* @__PURE__ */ jsxDEV(Outlet, {}, void 0, false, {\n            fileName: \"/Users/reedvogt/Desktop/ReedAiFront/src/layouts/chat/index.jsx\",\n            lineNumber: 178,\n            columnNumber: 11\n          }, this)\n        },\n        void 0,\n        false,\n        {\n          fileName: \"/Users/reedvogt/Desktop/ReedAiFront/src/layouts/chat/index.jsx\",\n          lineNumber: 169,\n          columnNumber: 9\n        },\n        this\n      )\n    ] }, void 0, true, {\n      fileName: \"/Users/reedvogt/Desktop/ReedAiFront/src/layouts/chat/index.jsx\",\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)\n  ] }, void 0, true, {\n    fileName: \"/Users/reedvogt/Desktop/ReedAiFront/src/layouts/chat/index.jsx\",\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatLayout, \"vCQ5Tp+5VX4BFWcSvxYScUSbUlo=\", false, function() {\n  return [useMode, useNavigation, useAuthStore, useUserStore, useChatStore, useRouter];\n});\n_c = ChatLayout;\nexport default ChatLayout;\nvar _c;\n$RefreshReg$(_c, \"ChatLayout\");\nif (import.m... (18569 more characters)"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.10319204104598612
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /src/layouts/chat/index.jsx (200) — 2024-07-28T11:41:32.781Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /src/layouts/chat/index.jsx"
        }
      ]
    }
  ]
}