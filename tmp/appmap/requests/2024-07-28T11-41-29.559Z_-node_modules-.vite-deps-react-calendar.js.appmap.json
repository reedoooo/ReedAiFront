{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/react-calendar.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/src/components/themed/calendar/MiniCalendar.jsx",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'4a244832'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"14271-Hm3Ko+14hFxoCLHSi4SBzy537wQ\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  require_jsx_runtime\n} from \"/node_modules/.vite/deps/chunk-CRNJR6QK.js?v=b39bb78e\";\nimport {\n  clsx_default,\n  init_clsx\n} from \"/node_modules/.vite/deps/chunk-KR3C65D2.js?v=b39bb78e\";\nimport {\n  require_react\n} from \"/node_modules/.vite/deps/chunk-ZMLY2J2T.js?v=b39bb78e\";\nimport {\n  __commonJS,\n  __toESM\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/mem/node_modules/mimic-fn/index.js\nvar require_mimic_fn = __commonJS({\n  \"node_modules/mem/node_modules/mimic-fn/index.js\"(exports, module) {\n    \"use strict\";\n    var copyProperty = (to, from, property, ignoreNonConfigurable) => {\n      if (property === \"length\" || property === \"prototype\") {\n        return;\n      }\n      if (property === \"arguments\" || property === \"caller\") {\n        return;\n      }\n      const toDescriptor = Object.getOwnPropertyDescriptor(to, property);\n      const fromDescriptor = Object.getOwnPropertyDescriptor(from, property);\n      if (!canCopyProperty(toDescriptor, fromDescriptor) && ignoreNonConfigurable) {\n        return;\n      }\n      Object.defineProperty(to, property, fromDescriptor);\n    };\n    var canCopyProperty = function(toDescriptor, fromDescriptor) {\n      return toDescriptor === void 0 || toDescriptor.configurable || toDescriptor.writable === fromDescriptor.writable && toDescriptor.enumerable === fromDescriptor.enumerable && toDescriptor.configurable === fromDescriptor.configurable && (toDescriptor.writable || toDescriptor.value === fromDescriptor.value);\n    };\n    var changePrototype = (to, from) => {\n      const fromPrototype = Object.getPrototypeOf(from);\n      if (fromPrototype === Object.getPrototypeOf(to)) {\n        return;\n      }\n      Object.setPrototypeOf(to, fromPrototype);\n    };\n    var wrappedToString = (withName, fromBody) => `/* Wrapped ${withName}*/\n${fromBody}`;\n    var toStringDescriptor = Object.getOwnPropertyDescriptor(Function.prototype, \"toString\");\n    var toStringName = Object.getOwnPropertyDescriptor(Function.prototype.toString, \"name\");\n    var changeToString = (to, from, name) => {\n      const withName = name === \"\" ? \"\" : `with ${name.trim()}() `;\n      const newToString = wrappedToString.bind(null, withName, from.toString());\n      Object.defineProperty(newToString, \"name\", toStringName);\n      Object.defineProperty(to, \"toString\", { ...toStringDescriptor, value: newToString });\n    };\n    var mimicFn = (to, from, { ignoreNonConfigurable = false } = {}) => {\n      const { name } = to;\n      for (const property of Reflect.ownKeys(from)) {\n        copyProperty(to, from, property, ignoreNonConfigurable);\n      }\n      changePrototype(to, from);\n      changeToString(to, from, name);\n      return to;\n    };\n    module.exports = mimicFn;\n  }\n});\n\n// node_modules/p-defer/index.js\nvar require_p_defer = __commonJS({\n  \"node_modules/p-defer/index.js\"(exports, module) {\n    \"use strict\";\n    module.exports = () => {\n      const ret = {};\n      ret.promise = new Promise((resolve, reject) => {\n        ret.resolve = resolve;\n        ret.reject = reject;\n      });\n      return ret;\n    };\n  }\n});\n\n// node_modules/map-age-cleaner/dist/index.js\nvar require_dist = __commonJS({\n  \"node_modules/map-age-cleaner/dist/index.js\"(exports, module) {\n    \"use strict\";\n    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {\n      return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n          try {\n            step(generator.next(value));\n          } catch (e) {\n            reject(e);\n          }\n        }\n        function rejected(value) {\n          try {\n            step(generator[\"throw\"](value));\n          } catch (e) {\n            reject(e);\n          }\n        }\n        function step(result) {\n          result.done ? resolve(result.value) : new P(function(resolve2) {\n            resolve2(result.value);\n          }).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n      });\n    };\n    var __importDefault = exports && exports.__importDefault || function(mod) {\n      return mod && mod.__esModule ? mod : { \"default\": mod };\n    };\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var p_defer_1 = __importDefault(require_p_defer());\n    function mapAgeCleaner(map, property = \"maxAge\") {\n      let processingKey;\n      let processingTimer;\n      let processingDeferred;\n      const cleanup = () => __awaiter(this, void 0, void 0, function* () {\n        if (processingKey !== void 0) {\n          return;\n        }\n        const setupTimer = (item) => __awaiter(this, void 0, void 0, function* () {\n          processingDeferred = p_defer_1.default();\n          const delay = item[1][property] - Date.now();\n          if (delay <= 0) {\n            map.delete(item[0]);\n            processingDeferred.resolve();\n            return;\n          }\n          processingKey = item[0];\n          processingTimer = setTimeout(() => {\n            map.delete(item[0]);\n            if (processingDeferred) {\n              processingDeferred.resolve();\n            }\n          }, delay);\n          if (typeof processingTimer.unref === \"function\") {\n            processingTimer.unref();\n          }\n          return processingDeferred.promise;\n        });\n        try {\n          for (const entry of map) {\n            yield setupTimer(entry);\n          }\n        } catch (_a2) {\n        }\n        processingKey = void 0;\n      });\n      const reset = () => {\n        processingKey = void 0;\n        if (processingTimer !== void 0) {\n          clearTimeout(processingTimer);\n          processingTimer = void 0;\n        }\n        if (processingDeferred !== void 0) {\n          processingDeferred.reject(void 0);\n          processingDeferred = void 0;\n        }\n      };\n      const originalSet = map.set.bind(map);\n      map.set = (key, value) => {\n        if (map.has(key)) {\n          map.delete(key);\n        }\n        const result = originalSet(key, value);\n        if (processingKey && processingKey === key) {\n          reset();\n        }\n        cleanup();\n        return result;\n      };\n      cleanup();\n      return map;\n    }\n    exports.default = mapAgeCleaner;\n    module.exports = mapAgeCleaner;\n    module.exports.default = mapAgeCleaner;\n  }\n});\n\n// node_modules/mem/dist/index.js\nvar require_dist2 = __commonJS({\n  \"node_modules/mem/dist/index.js\"(exports, module) {\n    \"use strict\";\n    var mimicFn = require_mimic_fn();\n    var mapAgeCleaner = require_dist();\n    var decoratorInstanceMap = /* @__PURE__ */ new WeakMap();\n    var cacheStore = /* @__PURE__ */ new WeakMap();\n    var mem2 = (fn, { cacheKey, cache = /* @__PURE__ */ new Map(), maxAge } = {}) => {\n      if (typeof maxAge === \"number\") {\n        mapAgeCleaner(cache);\n      }\n      const memoized = function(...arguments_) {\n        const key = cacheKey ? cacheKey(arguments_) : arguments_[0];\n        const cacheItem = cache.get(key);\n        if (cacheItem) {\n          return cacheItem.data;\n        }\n        const result = fn.apply(this, arguments_);\n        cache.set(key, {\n          data: result,\n          maxAge: maxAge ? Date.now() + maxAge : Number.POSITIVE_INFINITY\n        });\n        return result;\n      };\n      mimicFn(memoized, fn, {\n        ignoreNonConfigurable: true\n      });\n      cacheStore.set(memoized, cache);\n      return memoized;\n    };\n    mem2.decorator = (options = {}) => (target, propertyKey, descriptor) => {\n      const input = target[propertyKey];\n      if (typeof input !== \"function\") {\n        throw new TypeError(\"The decorated value must be a function\");\n      }\n      delete descriptor.value;\n      delete descriptor.writable;\n      descriptor.get = function() {\n        if (!decoratorInstanceMap.has(this)) {\n          const value = mem2(input, options);\n          decoratorInstanceMap.set(this, value);\n          return value;\n        }\n        return decoratorInstanceMap.get(this);\n      };\n    };\n    mem2.clear = (fn) => {\n      const cache = cacheStore.get(fn);\n      if (!cache) {\n        throw new TypeError(\"Can't clear a function that was not memoized!\");\n      }\n      if (typeof cache.clear !== \"function\") {\n        throw new TypeError(\"The cache Map can't be cleared!\");\n      }\n      cache.clear();\n    };\n    module.exports = mem2;\n  }\n});\n\n// node_modules/react-calendar/dist/esm/Calendar.js\nvar import_jsx_runtime20 = __toESM(require_jsx_runtime(), 1);\nvar import_react3 = __toESM(require_react(), 1);\ninit_clsx();\n\n// node_modules/react-calendar/dist/esm/Calendar/Navigation.js\nvar import_jsx_runtime = __toESM(require_jsx_runtime(), 1);\n\n// node_modules/get-user-locale/dist/esm/index.js\nvar import_mem = __toESM(require_dist2());\nfunction isString(el) {\n  return typeof el === \"string\";\n}\nfunction isUnique(el, index, arr) {\n  return arr.indexOf(el) === index;\n}\nfunction isAllLowerCase(el) {\n  return el.toLowerCase() === el;\n}\nfunction fixCommas(el) {\n  return el.indexOf(\",\") === -1 ? el : el.split(\",\");\n}\nfunction normalizeLocale(locale) {\n  if (!locale) {\n    return locale;\n  }\n  if (locale === \"C\" || locale === \"posix\" || locale === \"POSIX\") {\n    return \"en-US\";\n  }\n  if (locale.indexOf(\".\") !== -1) {\n    var _a2 = locale.split(\".\")[0], actualLocale = _a2 === void 0 ? \"\" : _a2;\n    return normalizeLocale(actualLocale);\n  }\n  if (locale.indexOf(\"@\") !== -1) {\n    var _b = locale.split(\"@\")[0], actualLocale = _b === void 0 ? \"\" : _b;\n    return normalizeLocale(actualLocale);\n  }\n  if (locale.indexOf(\"-\") === -1 || !isAllLowerCase(locale)) {\n    return locale;\n  }\n  var _c = locale.split(\"-\"), splitEl1 = _c[0], _d = _c[1], splitEl2 = _d === void 0 ? \"\" : _d;\n  return \"\".concat(splitEl1, \"-\").concat(splitEl2.toUpperCase());\n}\nfunction getUserLocalesInternal(_a2) {\n  var _b = _a2 === void 0 ? {} : _a2, _c = _b.useFallbackLocale, useFallbackLocale = _c === void 0 ? true : _c, _d = _b.fallbackLocale, fallbackLocale = _d === void 0 ? \"en-US\" : _d;\n  var languageList = ... (72535 more characters)"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.0013696670066565275
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/react-calendar.js (200) — 2024-07-28T11:41:29.559Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/react-calendar.js"
        }
      ]
    }
  ]
}