{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-M22FXWLE.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"eaf-7lnrLhzUGCtrxn8D61Dt5wXUAag\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  require_markup_templating\n} from \"/node_modules/.vite/deps/chunk-BCCZJ3TR.js?v=b39bb78e\";\nimport {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/soy.js\nvar require_soy = __commonJS({\n  \"node_modules/refractor/lang/soy.js\"(exports, module) {\n    var refractorMarkupTemplating = require_markup_templating();\n    module.exports = soy;\n    soy.displayName = \"soy\";\n    soy.aliases = [];\n    function soy(Prism) {\n      Prism.register(refractorMarkupTemplating);\n      (function(Prism2) {\n        var stringPattern = /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n        var numberPattern = /\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/;\n        Prism2.languages.soy = {\n          comment: [\n            /\\/\\*[\\s\\S]*?\\*\\//,\n            {\n              pattern: /(\\s)\\/\\/.*/,\n              lookbehind: true,\n              greedy: true\n            }\n          ],\n          \"command-arg\": {\n            pattern: /(\\{+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,\n            lookbehind: true,\n            alias: \"string\",\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          parameter: {\n            pattern: /(\\{+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,\n            lookbehind: true,\n            alias: \"variable\"\n          },\n          keyword: [\n            {\n              pattern: /(\\{+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,\n              lookbehind: true\n            },\n            /\\b(?:any|as|attributes|bool|css|float|html|in|int|js|list|map|null|number|string|uri)\\b/\n          ],\n          delimiter: {\n            pattern: /^\\{+\\/?|\\/?\\}+$/,\n            alias: \"punctuation\"\n          },\n          property: /\\w+(?==)/,\n          variable: {\n            pattern: /\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+\\]))*/,\n            inside: {\n              string: {\n                pattern: stringPattern,\n                greedy: true\n              },\n              number: numberPattern,\n              punctuation: /[\\[\\].?]/\n            }\n          },\n          string: {\n            pattern: stringPattern,\n            greedy: true\n          },\n          function: [\n            /\\w+(?=\\()/,\n            {\n              pattern: /(\\|[^\\S\\r\\n]*)\\w+/,\n              lookbehind: true\n            }\n          ],\n          boolean: /\\b(?:false|true)\\b/,\n          number: numberPattern,\n          operator: /\\?:?|<=?|>=?|==?|!=|[+*/%-]|\\b(?:and|not|or)\\b/,\n          punctuation: /[{}()\\[\\]|.,:]/\n        };\n        Prism2.hooks.add(\"before-tokenize\", function(env) {\n          var soyPattern = /\\{\\{.+?\\}\\}|\\{.+?\\}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g;\n          var soyLitteralStart = \"{literal}\";\n          var soyLitteralEnd = \"{/literal}\";\n          var soyLitteralMode = false;\n          Prism2.languages[\"markup-templating\"].buildPlaceholders(\n            env,\n            \"soy\",\n            soyPattern,\n            function(match) {\n              if (match === soyLitteralEnd) {\n                soyLitteralMode = false;\n              }\n              if (!soyLitteralMode) {\n                if (match === soyLitteralStart) {\n                  soyLitteralMode = true;\n                }\n                return true;\n              }\n              return false;\n            }\n          );\n        });\n        Prism2.hooks.add(\"after-tokenize\", function(env) {\n          Prism2.languages[\"markup-templating\"].tokenizePlaceholders(env, \"soy\");\n        });\n      })(Prism);\n    }\n  }\n});\n\nexport {\n  require_soy\n};\n//# sourceMappingURL=chunk-M22FXWLE.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.0001944160321727395
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-M22FXWLE.js (200) â€” 2024-07-28T11:41:34.172Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-M22FXWLE.js"
        }
      ]
    }
  ]
}