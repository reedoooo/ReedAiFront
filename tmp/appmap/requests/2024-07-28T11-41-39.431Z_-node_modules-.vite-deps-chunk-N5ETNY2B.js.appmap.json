{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-N5ETNY2B.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"c53-SEXdXf+Zbsqgvbm9B6MgN6J7byA\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/lisp.js\nvar require_lisp = __commonJS({\n  \"node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/lisp.js\"(exports, module) {\n    function lisp(hljs) {\n      var LISP_IDENT_RE = \"[a-zA-Z_\\\\-+\\\\*\\\\/<=>&#][a-zA-Z0-9_\\\\-+*\\\\/<=>&#!]*\";\n      var MEC_RE = \"\\\\|[^]*?\\\\|\";\n      var LISP_SIMPLE_NUMBER_RE = \"(-|\\\\+)?\\\\d+(\\\\.\\\\d+|\\\\/\\\\d+)?((d|e|f|l|s|D|E|F|L|S)(\\\\+|-)?\\\\d+)?\";\n      var LITERAL = {\n        className: \"literal\",\n        begin: \"\\\\b(t{1}|nil)\\\\b\"\n      };\n      var NUMBER = {\n        className: \"number\",\n        variants: [\n          { begin: LISP_SIMPLE_NUMBER_RE, relevance: 0 },\n          { begin: \"#(b|B)[0-1]+(/[0-1]+)?\" },\n          { begin: \"#(o|O)[0-7]+(/[0-7]+)?\" },\n          { begin: \"#(x|X)[0-9a-fA-F]+(/[0-9a-fA-F]+)?\" },\n          { begin: \"#(c|C)\\\\(\" + LISP_SIMPLE_NUMBER_RE + \" +\" + LISP_SIMPLE_NUMBER_RE, end: \"\\\\)\" }\n        ]\n      };\n      var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null });\n      var COMMENT = hljs.COMMENT(\n        \";\",\n        \"$\",\n        {\n          relevance: 0\n        }\n      );\n      var VARIABLE = {\n        begin: \"\\\\*\",\n        end: \"\\\\*\"\n      };\n      var KEYWORD = {\n        className: \"symbol\",\n        begin: \"[:&]\" + LISP_IDENT_RE\n      };\n      var IDENT = {\n        begin: LISP_IDENT_RE,\n        relevance: 0\n      };\n      var MEC = {\n        begin: MEC_RE\n      };\n      var QUOTED_LIST = {\n        begin: \"\\\\(\",\n        end: \"\\\\)\",\n        contains: [\"self\", LITERAL, STRING, NUMBER, IDENT]\n      };\n      var QUOTED = {\n        contains: [NUMBER, STRING, VARIABLE, KEYWORD, QUOTED_LIST, IDENT],\n        variants: [\n          {\n            begin: \"['`]\\\\(\",\n            end: \"\\\\)\"\n          },\n          {\n            begin: \"\\\\(quote \",\n            end: \"\\\\)\",\n            keywords: { name: \"quote\" }\n          },\n          {\n            begin: \"'\" + MEC_RE\n          }\n        ]\n      };\n      var QUOTED_ATOM = {\n        variants: [\n          { begin: \"'\" + LISP_IDENT_RE },\n          { begin: \"#'\" + LISP_IDENT_RE + \"(::\" + LISP_IDENT_RE + \")*\" }\n        ]\n      };\n      var LIST = {\n        begin: \"\\\\(\\\\s*\",\n        end: \"\\\\)\"\n      };\n      var BODY = {\n        endsWithParent: true,\n        relevance: 0\n      };\n      LIST.contains = [\n        {\n          className: \"name\",\n          variants: [\n            {\n              begin: LISP_IDENT_RE,\n              relevance: 0\n            },\n            { begin: MEC_RE }\n          ]\n        },\n        BODY\n      ];\n      BODY.contains = [QUOTED, QUOTED_ATOM, LIST, LITERAL, NUMBER, STRING, COMMENT, VARIABLE, KEYWORD, MEC, IDENT];\n      return {\n        name: \"Lisp\",\n        illegal: /\\S/,\n        contains: [\n          NUMBER,\n          hljs.SHEBANG(),\n          LITERAL,\n          STRING,\n          COMMENT,\n          QUOTED,\n          QUOTED_ATOM,\n          LIST,\n          IDENT\n        ]\n      };\n    }\n    module.exports = lisp;\n  }\n});\n\nexport {\n  require_lisp\n};\n//# sourceMappingURL=chunk-N5ETNY2B.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00040779204573482275
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-N5ETNY2B.js (200) â€” 2024-07-28T11:41:39.431Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-N5ETNY2B.js"
        }
      ]
    }
  ]
}