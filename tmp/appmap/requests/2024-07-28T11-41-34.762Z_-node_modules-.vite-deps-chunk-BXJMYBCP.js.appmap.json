{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-BXJMYBCP.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"703-t4TpZZl2lAiyt7G0ukz0P5yNLi0\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/erlang.js\nvar require_erlang = __commonJS({\n  \"node_modules/refractor/lang/erlang.js\"(exports, module) {\n    module.exports = erlang;\n    erlang.displayName = \"erlang\";\n    erlang.aliases = [];\n    function erlang(Prism) {\n      Prism.languages.erlang = {\n        comment: /%.+/,\n        string: {\n          pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n          greedy: true\n        },\n        \"quoted-function\": {\n          pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n          alias: \"function\"\n        },\n        \"quoted-atom\": {\n          pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n          alias: \"atom\"\n        },\n        boolean: /\\b(?:false|true)\\b/,\n        keyword: /\\b(?:after|case|catch|end|fun|if|of|receive|try|when)\\b/,\n        number: [\n          /\\$\\\\?./,\n          /\\b\\d+#[a-z0-9]+/i,\n          /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i\n        ],\n        function: /\\b[a-z][\\w@]*(?=\\()/,\n        variable: {\n          // Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n          pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n          lookbehind: true\n        },\n        operator: [\n          /[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:and|andalso|band|bnot|bor|bsl|bsr|bxor|div|not|or|orelse|rem|xor)\\b/,\n          {\n            // We don't want to match <<\n            pattern: /(^|[^<])<(?!<)/,\n            lookbehind: true\n          },\n          {\n            // We don't want to match >>\n            pattern: /(^|[^>])>(?!>)/,\n            lookbehind: true\n          }\n        ],\n        atom: /\\b[a-z][\\w@]*/,\n        punctuation: /[()[\\]{}:;,.#|]|<<|>>/\n      };\n    }\n  }\n});\n\nexport {\n  require_erlang\n};\n//# sourceMappingURL=chunk-BXJMYBCP.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00020037498325109482
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-BXJMYBCP.js (200) â€” 2024-07-28T11:41:34.762Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-BXJMYBCP.js"
        }
      ]
    }
  ]
}