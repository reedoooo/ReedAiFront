{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-DJXLHHRU.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"212a-rfMm2QQZvLMo6deeZJhUATcabPE\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/crystal.js\nvar require_crystal = __commonJS({\n  \"node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/crystal.js\"(exports, module) {\n    function crystal(hljs) {\n      const INT_SUFFIX = \"(_?[ui](8|16|32|64|128))?\";\n      const FLOAT_SUFFIX = \"(_?f(32|64))?\";\n      const CRYSTAL_IDENT_RE = \"[a-zA-Z_]\\\\w*[!?=]?\";\n      const CRYSTAL_METHOD_RE = \"[a-zA-Z_]\\\\w*[!?=]?|[-+~]@|<<|>>|[=!]~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~|]|//|//=|&[-+*]=?|&\\\\*\\\\*|\\\\[\\\\][=?]?\";\n      const CRYSTAL_PATH_RE = \"[A-Za-z_]\\\\w*(::\\\\w+)*(\\\\?|!)?\";\n      const CRYSTAL_KEYWORDS = {\n        $pattern: CRYSTAL_IDENT_RE,\n        keyword: \"abstract alias annotation as as? asm begin break case class def do else elsif end ensure enum extend for fun if include instance_sizeof is_a? lib macro module next nil? of out pointerof private protected rescue responds_to? return require select self sizeof struct super then type typeof union uninitialized unless until verbatim when while with yield __DIR__ __END_LINE__ __FILE__ __LINE__\",\n        literal: \"false nil true\"\n      };\n      const SUBST = {\n        className: \"subst\",\n        begin: /#\\{/,\n        end: /\\}/,\n        keywords: CRYSTAL_KEYWORDS\n      };\n      const EXPANSION = {\n        className: \"template-variable\",\n        variants: [\n          {\n            begin: \"\\\\{\\\\{\",\n            end: \"\\\\}\\\\}\"\n          },\n          {\n            begin: \"\\\\{%\",\n            end: \"%\\\\}\"\n          }\n        ],\n        keywords: CRYSTAL_KEYWORDS\n      };\n      function recursiveParen(begin, end) {\n        const contains = [\n          {\n            begin,\n            end\n          }\n        ];\n        contains[0].contains = contains;\n        return contains;\n      }\n      const STRING = {\n        className: \"string\",\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          SUBST\n        ],\n        variants: [\n          {\n            begin: /'/,\n            end: /'/\n          },\n          {\n            begin: /\"/,\n            end: /\"/\n          },\n          {\n            begin: /`/,\n            end: /`/\n          },\n          {\n            begin: \"%[Qwi]?\\\\(\",\n            end: \"\\\\)\",\n            contains: recursiveParen(\"\\\\(\", \"\\\\)\")\n          },\n          {\n            begin: \"%[Qwi]?\\\\[\",\n            end: \"\\\\]\",\n            contains: recursiveParen(\"\\\\[\", \"\\\\]\")\n          },\n          {\n            begin: \"%[Qwi]?\\\\{\",\n            end: /\\}/,\n            contains: recursiveParen(/\\{/, /\\}/)\n          },\n          {\n            begin: \"%[Qwi]?<\",\n            end: \">\",\n            contains: recursiveParen(\"<\", \">\")\n          },\n          {\n            begin: \"%[Qwi]?\\\\|\",\n            end: \"\\\\|\"\n          },\n          {\n            begin: /<<-\\w+$/,\n            end: /^\\s*\\w+$/\n          }\n        ],\n        relevance: 0\n      };\n      const Q_STRING = {\n        className: \"string\",\n        variants: [\n          {\n            begin: \"%q\\\\(\",\n            end: \"\\\\)\",\n            contains: recursiveParen(\"\\\\(\", \"\\\\)\")\n          },\n          {\n            begin: \"%q\\\\[\",\n            end: \"\\\\]\",\n            contains: recursiveParen(\"\\\\[\", \"\\\\]\")\n          },\n          {\n            begin: \"%q\\\\{\",\n            end: /\\}/,\n            contains: recursiveParen(/\\{/, /\\}/)\n          },\n          {\n            begin: \"%q<\",\n            end: \">\",\n            contains: recursiveParen(\"<\", \">\")\n          },\n          {\n            begin: \"%q\\\\|\",\n            end: \"\\\\|\"\n          },\n          {\n            begin: /<<-'\\w+'$/,\n            end: /^\\s*\\w+$/\n          }\n        ],\n        relevance: 0\n      };\n      const REGEXP = {\n        begin: \"(?!%\\\\})(\" + hljs.RE_STARTERS_RE + \"|\\\\n|\\\\b(case|if|select|unless|until|when|while)\\\\b)\\\\s*\",\n        keywords: \"case if select unless until when while\",\n        contains: [\n          {\n            className: \"regexp\",\n            contains: [\n              hljs.BACKSLASH_ESCAPE,\n              SUBST\n            ],\n            variants: [\n              {\n                begin: \"//[a-z]*\",\n                relevance: 0\n              },\n              {\n                begin: \"/(?!\\\\/)\",\n                end: \"/[a-z]*\"\n              }\n            ]\n          }\n        ],\n        relevance: 0\n      };\n      const REGEXP2 = {\n        className: \"regexp\",\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          SUBST\n        ],\n        variants: [\n          {\n            begin: \"%r\\\\(\",\n            end: \"\\\\)\",\n            contains: recursiveParen(\"\\\\(\", \"\\\\)\")\n          },\n          {\n            begin: \"%r\\\\[\",\n            end: \"\\\\]\",\n            contains: recursiveParen(\"\\\\[\", \"\\\\]\")\n          },\n          {\n            begin: \"%r\\\\{\",\n            end: /\\}/,\n            contains: recursiveParen(/\\{/, /\\}/)\n          },\n          {\n            begin: \"%r<\",\n            end: \">\",\n            contains: recursiveParen(\"<\", \">\")\n          },\n          {\n            begin: \"%r\\\\|\",\n            end: \"\\\\|\"\n          }\n        ],\n        relevance: 0\n      };\n      const ATTRIBUTE = {\n        className: \"meta\",\n        begin: \"@\\\\[\",\n        end: \"\\\\]\",\n        contains: [\n          hljs.inherit(hljs.QUOTE_STRING_MODE, {\n            className: \"meta-string\"\n          })\n        ]\n      };\n      const CRYSTAL_DEFAULT_CONTAINS = [\n        EXPANSION,\n        STRING,\n        Q_STRING,\n        REGEXP2,\n        REGEXP,\n        ATTRIBUTE,\n        hljs.HASH_COMMENT_MODE,\n        {\n          className: \"class\",\n          beginKeywords: \"class module struct\",\n          end: \"$|;\",\n          illegal: /=/,\n          contains: [\n            hljs.HASH_COMMENT_MODE,\n            hljs.inherit(hljs.TITLE_MODE, {\n              begin: CRYSTAL_PATH_RE\n            }),\n            {\n              // relevance booster for inheritance\n              begin: \"<\"\n            }\n          ]\n        },\n        {\n          className: \"class\",\n          beginKeywords: \"lib enum union\",\n          end: \"$|;\",\n          illegal: /=/,\n          contains: [\n            hljs.HASH_COMMENT_MODE,\n            hljs.inherit(hljs.TITLE_MODE, {\n              begin: CRYSTAL_PATH_RE\n            })\n          ]\n        },\n        {\n          beginKeywords: \"annotation\",\n          end: \"$|;\",\n          illegal: /=/,\n          contains: [\n            hljs.HASH_COMMENT_MODE,\n            hljs.inherit(hljs.TITLE_MODE, {\n              begin: CRYSTAL_PATH_RE\n            })\n          ],\n          relevance: 2\n        },\n        {\n          className: \"function\",\n          beginKeywords: \"def\",\n          end: /\\B\\b/,\n          contains: [\n            hljs.inherit(hljs.TITLE_MODE, {\n              begin: CRYSTAL_METHOD_RE,\n              endsParent: true\n            })\n          ]\n        },\n        {\n          className: \"function\",\n          beginKeywords: \"fun macro\",\n          end: /\\B\\b/,\n          contains: [\n            hljs.inherit(hljs.TITLE_MODE, {\n              begin: CRYSTAL_METHOD_RE,\n              endsParent: true\n            })\n          ],\n          relevance: 2\n        },\n        {\n          className: \"symbol\",\n          begin: hljs.UNDERSCORE_IDENT_RE + \"(!|\\\\?)?:\",\n          relevance: 0\n        },\n        {\n          className: \"symbol\",\n          begin: \":\",\n          contains: [\n            STRING,\n            {\n              begin: CRYSTAL_METHOD_RE\n            }\n          ],\n          relevance: 0\n        },\n        {\n          className: \"number\",\n          variants: [\n            {\n              begin: \"\\\\b0b([01_]+)\" + INT_SUFFIX\n            },\n            {\n              begin: \"\\\\b0o([0-7_]+)\" + INT_SUFFIX\n            },\n            {\n              begin: \"\\\\b0x([A-Fa-f0-9_]+)\" + INT_SUFFIX\n            },\n            {\n              begin: \"\\\\b([1-9][0-9_]*[0-9]|[0-9])(\\\\.[0-9][0-9_]*)?([eE]_?[-+]?[0-9_]*)?\" + FLOAT_SUFFIX + \"(?!_)\"\n            },\n            {\n              begin: \"\\\\b([1-9][0-9_]*|0)\" + INT_SUFFIX\n            }\n          ],\n          relevance: 0\n        }\n      ];\n      SUBST.contains = CRYSTAL_DEFAULT_CONTAINS;\n      EXPANSION.contains = CRYSTAL_DEFAULT_CONTAINS.slice(1);\n      return {\n        name: \"Crystal\",\n        aliases: [\"cr\"],\n        keywords: CRYSTAL_KEYWORDS,\n        contains: CRYSTAL_DEFAULT_CONTAINS\n      };\n    }\n    module.exports = crystal;\n  }\n});\n\nexport {\n  require_crystal\n};\n//# sourceMappingURL=chunk-DJXLHHRU.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00023987493477761745
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-DJXLHHRU.js (200) — 2024-07-28T11:41:40.107Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-DJXLHHRU.js"
        }
      ]
    }
  ]
}