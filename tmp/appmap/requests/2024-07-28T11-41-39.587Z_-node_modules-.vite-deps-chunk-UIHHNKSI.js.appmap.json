{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-UIHHNKSI.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"122f-0S4xFUF6pRPCb+XcoZDKpC9i/SE\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/haxe.js\nvar require_haxe = __commonJS({\n  \"node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/haxe.js\"(exports, module) {\n    function haxe(hljs) {\n      const HAXE_BASIC_TYPES = \"Int Float String Bool Dynamic Void Array \";\n      return {\n        name: \"Haxe\",\n        aliases: [\"hx\"],\n        keywords: {\n          keyword: \"break case cast catch continue default do dynamic else enum extern for function here if import in inline never new override package private get set public return static super switch this throw trace try typedef untyped using var while \" + HAXE_BASIC_TYPES,\n          built_in: \"trace this\",\n          literal: \"true false null _\"\n        },\n        contains: [\n          {\n            className: \"string\",\n            // interpolate-able strings\n            begin: \"'\",\n            end: \"'\",\n            contains: [\n              hljs.BACKSLASH_ESCAPE,\n              {\n                className: \"subst\",\n                // interpolation\n                begin: \"\\\\$\\\\{\",\n                end: \"\\\\}\"\n              },\n              {\n                className: \"subst\",\n                // interpolation\n                begin: \"\\\\$\",\n                end: /\\W\\}/\n              }\n            ]\n          },\n          hljs.QUOTE_STRING_MODE,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.C_NUMBER_MODE,\n          {\n            className: \"meta\",\n            // compiler meta\n            begin: \"@:\",\n            end: \"$\"\n          },\n          {\n            className: \"meta\",\n            // compiler conditionals\n            begin: \"#\",\n            end: \"$\",\n            keywords: {\n              \"meta-keyword\": \"if else elseif end error\"\n            }\n          },\n          {\n            className: \"type\",\n            // function types\n            begin: \":[ \t]*\",\n            end: \"[^A-Za-z0-9_ \t\\\\->]\",\n            excludeBegin: true,\n            excludeEnd: true,\n            relevance: 0\n          },\n          {\n            className: \"type\",\n            // types\n            begin: \":[ \t]*\",\n            end: \"\\\\W\",\n            excludeBegin: true,\n            excludeEnd: true\n          },\n          {\n            className: \"type\",\n            // instantiation\n            begin: \"new *\",\n            end: \"\\\\W\",\n            excludeBegin: true,\n            excludeEnd: true\n          },\n          {\n            className: \"class\",\n            // enums\n            beginKeywords: \"enum\",\n            end: \"\\\\{\",\n            contains: [hljs.TITLE_MODE]\n          },\n          {\n            className: \"class\",\n            // abstracts\n            beginKeywords: \"abstract\",\n            end: \"[\\\\{$]\",\n            contains: [\n              {\n                className: \"type\",\n                begin: \"\\\\(\",\n                end: \"\\\\)\",\n                excludeBegin: true,\n                excludeEnd: true\n              },\n              {\n                className: \"type\",\n                begin: \"from +\",\n                end: \"\\\\W\",\n                excludeBegin: true,\n                excludeEnd: true\n              },\n              {\n                className: \"type\",\n                begin: \"to +\",\n                end: \"\\\\W\",\n                excludeBegin: true,\n                excludeEnd: true\n              },\n              hljs.TITLE_MODE\n            ],\n            keywords: {\n              keyword: \"abstract from to\"\n            }\n          },\n          {\n            className: \"class\",\n            // classes\n            begin: \"\\\\b(class|interface) +\",\n            end: \"[\\\\{$]\",\n            excludeEnd: true,\n            keywords: \"class interface\",\n            contains: [\n              {\n                className: \"keyword\",\n                begin: \"\\\\b(extends|implements) +\",\n                keywords: \"extends implements\",\n                contains: [\n                  {\n                    className: \"type\",\n                    begin: hljs.IDENT_RE,\n                    relevance: 0\n                  }\n                ]\n              },\n              hljs.TITLE_MODE\n            ]\n          },\n          {\n            className: \"function\",\n            beginKeywords: \"function\",\n            end: \"\\\\(\",\n            excludeEnd: true,\n            illegal: \"\\\\S\",\n            contains: [hljs.TITLE_MODE]\n          }\n        ],\n        illegal: /<\\//\n      };\n    }\n    module.exports = haxe;\n  }\n});\n\nexport {\n  require_haxe\n};\n//# sourceMappingURL=chunk-UIHHNKSI.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00009795802179723978
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-UIHHNKSI.js (200) â€” 2024-07-28T11:41:39.587Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-UIHHNKSI.js"
        }
      ]
    }
  ]
}