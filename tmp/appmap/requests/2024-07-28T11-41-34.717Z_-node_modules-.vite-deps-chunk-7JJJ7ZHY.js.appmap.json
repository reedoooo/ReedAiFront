{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-7JJJ7ZHY.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"c02-/Bq35miwJzaGORrZvlfV7n4dsZM\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/haxe.js\nvar require_haxe = __commonJS({\n  \"node_modules/refractor/lang/haxe.js\"(exports, module) {\n    module.exports = haxe;\n    haxe.displayName = \"haxe\";\n    haxe.aliases = [];\n    function haxe(Prism) {\n      Prism.languages.haxe = Prism.languages.extend(\"clike\", {\n        string: {\n          // Strings can be multi-line\n          pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n          greedy: true\n        },\n        \"class-name\": [\n          {\n            pattern: /(\\b(?:abstract|class|enum|extends|implements|interface|new|typedef)\\s+)[A-Z_]\\w*/,\n            lookbehind: true\n          },\n          // based on naming convention\n          /\\b[A-Z]\\w*/\n        ],\n        // The final look-ahead prevents highlighting of keywords if expressions such as \"haxe.macro.Expr\"\n        keyword: /\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|final|for|from|function|if|implements|import|in|inline|interface|macro|new|null|operator|overload|override|package|private|public|return|static|super|switch|throw|to|try|typedef|untyped|using|var|while)(?!\\.)\\b/,\n        function: {\n          pattern: /\\b[a-z_]\\w*(?=\\s*(?:<[^<>]*>\\s*)?\\()/i,\n          greedy: true\n        },\n        operator: /\\.{3}|\\+\\+|--|&&|\\|\\||->|=>|(?:<<?|>{1,3}|[-+*/%!=&|^])=?|[?:~]/\n      });\n      Prism.languages.insertBefore(\"haxe\", \"string\", {\n        \"string-interpolation\": {\n          pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n          greedy: true,\n          inside: {\n            interpolation: {\n              pattern: /(^|[^\\\\])\\$(?:\\w+|\\{[^{}]+\\})/,\n              lookbehind: true,\n              inside: {\n                \"interpolation-punctuation\": {\n                  pattern: /^\\$\\{?|\\}$/,\n                  alias: \"punctuation\"\n                },\n                expression: {\n                  pattern: /[\\s\\S]+/,\n                  inside: Prism.languages.haxe\n                }\n              }\n            },\n            string: /[\\s\\S]+/\n          }\n        }\n      });\n      Prism.languages.insertBefore(\"haxe\", \"class-name\", {\n        regex: {\n          pattern: /~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[a-z]*/,\n          greedy: true,\n          inside: {\n            \"regex-flags\": /\\b[a-z]+$/,\n            \"regex-source\": {\n              pattern: /^(~\\/)[\\s\\S]+(?=\\/$)/,\n              lookbehind: true,\n              alias: \"language-regex\",\n              inside: Prism.languages.regex\n            },\n            \"regex-delimiter\": /^~\\/|\\/$/\n          }\n        }\n      });\n      Prism.languages.insertBefore(\"haxe\", \"keyword\", {\n        preprocessor: {\n          pattern: /#(?:else|elseif|end|if)\\b.*/,\n          alias: \"property\"\n        },\n        metadata: {\n          pattern: /@:?[\\w.]+/,\n          alias: \"symbol\"\n        },\n        reification: {\n          pattern: /\\$(?:\\w+|(?=\\{))/,\n          alias: \"important\"\n        }\n      });\n    }\n  }\n});\n\nexport {\n  require_haxe\n};\n//# sourceMappingURL=chunk-7JJJ7ZHY.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.000534582999534905
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-7JJJ7ZHY.js (200) â€” 2024-07-28T11:41:34.717Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-7JJJ7ZHY.js"
        }
      ]
    }
  ]
}