{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/react-markdown.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/src/components/messages/main.jsx",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'64d3d203'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"54bdb-e9Ean5rstP2MIm+N6a2pcb6xmFI\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  decodeNamedCharacterReference,\n  ok,\n  unreachable,\n  visit\n} from \"/node_modules/.vite/deps/chunk-SEH6VAJT.js?v=b39bb78e\";\nimport \"/node_modules/.vite/deps/chunk-HTVXVXIR.js?v=b39bb78e\";\nimport {\n  require_jsx_runtime\n} from \"/node_modules/.vite/deps/chunk-CRNJR6QK.js?v=b39bb78e\";\nimport \"/node_modules/.vite/deps/chunk-ZMLY2J2T.js?v=b39bb78e\";\nimport {\n  __commonJS,\n  __export,\n  __toESM\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/inline-style-parser/index.js\nvar require_inline_style_parser = __commonJS({\n  \"node_modules/inline-style-parser/index.js\"(exports, module) {\n    var COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n    var NEWLINE_REGEX = /\\n/g;\n    var WHITESPACE_REGEX = /^\\s*/;\n    var PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\n    var COLON_REGEX = /^:\\s*/;\n    var VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\n    var SEMICOLON_REGEX = /^[;\\s]*/;\n    var TRIM_REGEX = /^\\s+|\\s+$/g;\n    var NEWLINE = \"\\n\";\n    var FORWARD_SLASH = \"/\";\n    var ASTERISK = \"*\";\n    var EMPTY_STRING = \"\";\n    var TYPE_COMMENT = \"comment\";\n    var TYPE_DECLARATION = \"declaration\";\n    module.exports = function(style, options) {\n      if (typeof style !== \"string\") {\n        throw new TypeError(\"First argument must be a string\");\n      }\n      if (!style) return [];\n      options = options || {};\n      var lineno = 1;\n      var column = 1;\n      function updatePosition(str) {\n        var lines = str.match(NEWLINE_REGEX);\n        if (lines) lineno += lines.length;\n        var i = str.lastIndexOf(NEWLINE);\n        column = ~i ? str.length - i : column + str.length;\n      }\n      function position4() {\n        var start2 = { line: lineno, column };\n        return function(node2) {\n          node2.position = new Position(start2);\n          whitespace2();\n          return node2;\n        };\n      }\n      function Position(start2) {\n        this.start = start2;\n        this.end = { line: lineno, column };\n        this.source = options.source;\n      }\n      Position.prototype.content = style;\n      var errorsList = [];\n      function error(msg) {\n        var err = new Error(\n          options.source + \":\" + lineno + \":\" + column + \": \" + msg\n        );\n        err.reason = msg;\n        err.filename = options.source;\n        err.line = lineno;\n        err.column = column;\n        err.source = style;\n        if (options.silent) {\n          errorsList.push(err);\n        } else {\n          throw err;\n        }\n      }\n      function match(re2) {\n        var m = re2.exec(style);\n        if (!m) return;\n        var str = m[0];\n        updatePosition(str);\n        style = style.slice(str.length);\n        return m;\n      }\n      function whitespace2() {\n        match(WHITESPACE_REGEX);\n      }\n      function comments(rules) {\n        var c;\n        rules = rules || [];\n        while (c = comment()) {\n          if (c !== false) {\n            rules.push(c);\n          }\n        }\n        return rules;\n      }\n      function comment() {\n        var pos = position4();\n        if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n        var i = 2;\n        while (EMPTY_STRING != style.charAt(i) && (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))) {\n          ++i;\n        }\n        i += 2;\n        if (EMPTY_STRING === style.charAt(i - 1)) {\n          return error(\"End of comment missing\");\n        }\n        var str = style.slice(2, i - 2);\n        column += 2;\n        updatePosition(str);\n        style = style.slice(i);\n        column += 2;\n        return pos({\n          type: TYPE_COMMENT,\n          comment: str\n        });\n      }\n      function declaration() {\n        var pos = position4();\n        var prop = match(PROPERTY_REGEX);\n        if (!prop) return;\n        comment();\n        if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n        var val = match(VALUE_REGEX);\n        var ret = pos({\n          type: TYPE_DECLARATION,\n          property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n          value: val ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING)) : EMPTY_STRING\n        });\n        match(SEMICOLON_REGEX);\n        return ret;\n      }\n      function declarations() {\n        var decls = [];\n        comments(decls);\n        var decl;\n        while (decl = declaration()) {\n          if (decl !== false) {\n            decls.push(decl);\n            comments(decls);\n          }\n        }\n        return decls;\n      }\n      whitespace2();\n      return declarations();\n    };\n    function trim(str) {\n      return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n    }\n  }\n});\n\n// node_modules/style-to-object/cjs/index.js\nvar require_cjs = __commonJS({\n  \"node_modules/style-to-object/cjs/index.js\"(exports) {\n    \"use strict\";\n    var __importDefault = exports && exports.__importDefault || function(mod) {\n      return mod && mod.__esModule ? mod : { \"default\": mod };\n    };\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var inline_style_parser_1 = __importDefault(require_inline_style_parser());\n    function StyleToObject2(style, iterator) {\n      var styleObject = null;\n      if (!style || typeof style !== \"string\") {\n        return styleObject;\n      }\n      var declarations = (0, inline_style_parser_1.default)(style);\n      var hasIterator = typeof iterator === \"function\";\n      declarations.forEach(function(declaration) {\n        if (declaration.type !== \"declaration\") {\n          return;\n        }\n        var property = declaration.property, value = declaration.value;\n        if (hasIterator) {\n          iterator(property, value, declaration);\n        } else if (value) {\n          styleObject = styleObject || {};\n          styleObject[property] = value;\n        }\n      });\n      return styleObject;\n    }\n    exports.default = StyleToObject2;\n  }\n});\n\n// node_modules/ms/index.js\nvar require_ms = __commonJS({\n  \"node_modules/ms/index.js\"(exports, module) {\n    var s = 1e3;\n    var m = s * 60;\n    var h = m * 60;\n    var d = h * 24;\n    var w = d * 7;\n    var y = d * 365.25;\n    module.exports = function(val, options) {\n      options = options || {};\n      var type = typeof val;\n      if (type === \"string\" && val.length > 0) {\n        return parse2(val);\n      } else if (type === \"number\" && isFinite(val)) {\n        return options.long ? fmtLong(val) : fmtShort(val);\n      }\n      throw new Error(\n        \"val is not a non-empty string or a valid number. val=\" + JSON.stringify(val)\n      );\n    };\n    function parse2(str) {\n      str = String(str);\n      if (str.length > 100) {\n        return;\n      }\n      var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n        str\n      );\n      if (!match) {\n        return;\n      }\n      var n = parseFloat(match[1]);\n      var type = (match[2] || \"ms\").toLowerCase();\n      switch (type) {\n        case \"years\":\n        case \"year\":\n        case \"yrs\":\n        case \"yr\":\n        case \"y\":\n          return n * y;\n        case \"weeks\":\n        case \"week\":\n        case \"w\":\n          return n * w;\n        case \"days\":\n        case \"day\":\n        case \"d\":\n          return n * d;\n        case \"hours\":\n        case \"hour\":\n        case \"hrs\":\n        case \"hr\":\n        case \"h\":\n          return n * h;\n        case \"minutes\":\n        case \"minute\":\n        case \"mins\":\n        case \"min\":\n        case \"m\":\n          return n * m;\n        case \"seconds\":\n        case \"second\":\n        case \"secs\":\n        case \"sec\":\n        case \"s\":\n          return n * s;\n        case \"milliseconds\":\n        case \"millisecond\":\n        case \"msecs\":\n        case \"msec\":\n        case \"ms\":\n          return n;\n        default:\n          return void 0;\n      }\n    }\n    function fmtShort(ms) {\n      var msAbs = Math.abs(ms);\n      if (msAbs >= d) {\n        return Math.round(ms / d) + \"d\";\n      }\n      if (msAbs >= h) {\n        return Math.round(ms / h) + \"h\";\n      }\n      if (msAbs >= m) {\n        return Math.round(ms / m) + \"m\";\n      }\n      if (msAbs >= s) {\n        return Math.round(ms / s) + \"s\";\n      }\n      return ms + \"ms\";\n    }\n    function fmtLong(ms) {\n      var msAbs = Math.abs(ms);\n      if (msAbs >= d) {\n        return plural(ms, msAbs, d, \"day\");\n      }\n      if (msAbs >= h) {\n        return plural(ms, msAbs, h, \"hour\");\n      }\n      if (msAbs >= m) {\n        return plural(ms, msAbs, m, \"minute\");\n      }\n      if (msAbs >= s) {\n        return plural(ms, msAbs, s, \"second\");\n      }\n      return ms + \" ms\";\n    }\n    function plural(ms, msAbs, n, name2) {\n      var isPlural = msAbs >= n * 1.5;\n      return Math.round(ms / n) + \" \" + name2 + (isPlural ? \"s\" : \"\");\n    }\n  }\n});\n\n// node_modules/debug/src/common.js\nvar require_common = __commonJS({\n  \"node_modules/debug/src/common.js\"(exports, module) {\n    function setup(env2) {\n      createDebug2.debug = createDebug2;\n      createDebug2.default = createDebug2;\n      createDebug2.coerce = coerce;\n      createDebug2.disable = disable2;\n      createDebug2.enable = enable;\n      createDebug2.enabled = enabled;\n      createDebug2.humanize = require_ms();\n      createDebug2.destroy = destroy;\n      Object.keys(env2).forEach((key) => {\n        createDebug2[key] = env2[key];\n      });\n      createDebug2.names = [];\n      createDebug2.skips = [];\n      createDebug2.formatters = {};\n      function selectColor(namespace) {\n        let hash = 0;\n        for (let i = 0; i < namespace.length; i++) {\n          hash = (hash << 5) - hash + namespace.charCodeAt(i);\n          hash |= 0;\n        }\n        return createDebug2.colors[Math.abs(hash) % createDebug2.colors.length];\n      }\n      createDebug2.selectColor = selectColor;\n      function createDebug2(namespace) {\n        let prevTime;\n        let enableOverride = null;\n        let namespacesCache;\n        let enabledCache;\n        f... (337017 more characters)"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.003590625012293458
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/react-markdown.js (200) — 2024-07-28T11:41:33.862Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/react-markdown.js"
        }
      ]
    }
  ]
}