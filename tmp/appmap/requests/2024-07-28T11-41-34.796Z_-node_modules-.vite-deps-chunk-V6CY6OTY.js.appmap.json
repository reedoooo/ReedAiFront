{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-V6CY6OTY.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"1694-sekmvj7XU8bZducpAEZ/xaFkZFA\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/css-extras.js\nvar require_css_extras = __commonJS({\n  \"node_modules/refractor/lang/css-extras.js\"(exports, module) {\n    module.exports = cssExtras;\n    cssExtras.displayName = \"cssExtras\";\n    cssExtras.aliases = [];\n    function cssExtras(Prism) {\n      ;\n      (function(Prism2) {\n        var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n        var selectorInside;\n        Prism2.languages.css.selector = {\n          pattern: Prism2.languages.css.selector.pattern,\n          lookbehind: true,\n          inside: selectorInside = {\n            \"pseudo-element\": /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n            \"pseudo-class\": /:[-\\w]+/,\n            class: /\\.[-\\w]+/,\n            id: /#[-\\w]+/,\n            attribute: {\n              pattern: RegExp(`\\\\[(?:[^[\\\\]\"']|` + string.source + \")*\\\\]\"),\n              greedy: true,\n              inside: {\n                punctuation: /^\\[|\\]$/,\n                \"case-sensitivity\": {\n                  pattern: /(\\s)[si]$/i,\n                  lookbehind: true,\n                  alias: \"keyword\"\n                },\n                namespace: {\n                  pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n                  lookbehind: true,\n                  inside: {\n                    punctuation: /\\|$/\n                  }\n                },\n                \"attr-name\": {\n                  pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n                  lookbehind: true\n                },\n                \"attr-value\": [\n                  string,\n                  {\n                    pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n                    lookbehind: true\n                  }\n                ],\n                operator: /[|~*^$]?=/\n              }\n            },\n            \"n-th\": [\n              {\n                pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n                lookbehind: true,\n                inside: {\n                  number: /[\\dn]+/,\n                  operator: /[+-]/\n                }\n              },\n              {\n                pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n                lookbehind: true\n              }\n            ],\n            combinator: />|\\+|~|\\|\\|/,\n            // the `tag` token has been existed and removed.\n            // because we can't find a perfect tokenize to match it.\n            // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n            punctuation: /[(),]/\n          }\n        };\n        Prism2.languages.css[\"atrule\"].inside[\"selector-function-argument\"].inside = selectorInside;\n        Prism2.languages.insertBefore(\"css\", \"property\", {\n          variable: {\n            pattern: /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n            lookbehind: true\n          }\n        });\n        var unit = {\n          pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n          lookbehind: true\n        };\n        var number = {\n          pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n          lookbehind: true\n        };\n        Prism2.languages.insertBefore(\"css\", \"function\", {\n          operator: {\n            pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n            lookbehind: true\n          },\n          // CAREFUL!\n          // Previewers and Inline color use hexcode and color.\n          hexcode: {\n            pattern: /\\B#[\\da-f]{3,8}\\b/i,\n            alias: \"color\"\n          },\n          color: [\n            {\n              pattern: /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n              lookbehind: true\n            },\n            {\n              pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n              inside: {\n                unit,\n                number,\n                function: /[\\w-]+(?=\\()/,\n                punctuation: /[(),]/\n              }\n            }\n          ],\n          // it's important that there is no boundary assertion after the hex digits\n          entity: /\\\\[\\da-f]{1,8}/i,\n          unit,\n          number\n        });\n      })(Prism);\n    }\n  }\n});\n\nexport {\n  require_css_extras\n};\n//# sourceMappingURL=chunk-V6CY6OTY.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00015066599007695913
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-V6CY6OTY.js (200) â€” 2024-07-28T11:41:34.796Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-V6CY6OTY.js"
        }
      ]
    }
  ]
}