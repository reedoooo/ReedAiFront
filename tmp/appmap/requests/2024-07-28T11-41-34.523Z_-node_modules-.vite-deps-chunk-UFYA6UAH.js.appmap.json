{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-UFYA6UAH.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"84a-0hDkAV8F7ujjKdFGKr3OFXHSiC4\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/refractor/lang/parigp.js\nvar require_parigp = __commonJS({\n  \"node_modules/refractor/lang/parigp.js\"(exports, module) {\n    module.exports = parigp;\n    parigp.displayName = \"parigp\";\n    parigp.aliases = [];\n    function parigp(Prism) {\n      Prism.languages.parigp = {\n        comment: /\\/\\*[\\s\\S]*?\\*\\/|\\\\\\\\.*/,\n        string: {\n          pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n          greedy: true\n        },\n        // PARI/GP does not care about white spaces at all\n        // so let's process the keywords to build an appropriate regexp\n        // (e.g. \"b *r *e *a *k\", etc.)\n        keyword: function() {\n          var keywords = [\n            \"breakpoint\",\n            \"break\",\n            \"dbg_down\",\n            \"dbg_err\",\n            \"dbg_up\",\n            \"dbg_x\",\n            \"forcomposite\",\n            \"fordiv\",\n            \"forell\",\n            \"forpart\",\n            \"forprime\",\n            \"forstep\",\n            \"forsubgroup\",\n            \"forvec\",\n            \"for\",\n            \"iferr\",\n            \"if\",\n            \"local\",\n            \"my\",\n            \"next\",\n            \"return\",\n            \"until\",\n            \"while\"\n          ];\n          keywords = keywords.map(function(keyword) {\n            return keyword.split(\"\").join(\" *\");\n          }).join(\"|\");\n          return RegExp(\"\\\\b(?:\" + keywords + \")\\\\b\");\n        }(),\n        function: /\\b\\w(?:[\\w ]*\\w)?(?= *\\()/,\n        number: {\n          // The lookbehind and the negative lookahead prevent from breaking the .. operator\n          pattern: /((?:\\. *\\. *)?)(?:\\b\\d(?: *\\d)*(?: *(?!\\. *\\.)\\.(?: *\\d)*)?|\\. *\\d(?: *\\d)*)(?: *e *(?:[+-] *)?\\d(?: *\\d)*)?/i,\n          lookbehind: true\n        },\n        operator: /\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?: *>|(?: *<)?(?: *=)?)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]/,\n        punctuation: /[\\[\\]{}().,:;|]/\n      };\n    }\n  }\n});\n\nexport {\n  require_parigp\n};\n//# sourceMappingURL=chunk-UFYA6UAH.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00008849997539073229
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-UFYA6UAH.js (200) â€” 2024-07-28T11:41:34.523Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-UFYA6UAH.js"
        }
      ]
    }
  ]
}