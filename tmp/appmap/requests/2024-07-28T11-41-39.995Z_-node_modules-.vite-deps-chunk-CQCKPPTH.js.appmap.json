{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/chunk-CQCKPPTH.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:3000",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:3000/node_modules/.vite/deps/react-syntax-highlighter.js?v=69cd69d1",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "en-US,en;q=0.9",
          "Cookie": "__stripe_mid=ebfd26b6-c829-4742-8893-abaf894eb93edc4c96; colorMode=%22dark%22"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'b39bb78e'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"dd9-Yytm6hEbpMYgoZBaqEn/hbHHa/w\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  __commonJS\n} from \"/node_modules/.vite/deps/chunk-4B2QHNJT.js?v=b39bb78e\";\n\n// node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/dts.js\nvar require_dts = __commonJS({\n  \"node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/dts.js\"(exports, module) {\n    function dts(hljs) {\n      const STRINGS = {\n        className: \"string\",\n        variants: [\n          hljs.inherit(hljs.QUOTE_STRING_MODE, {\n            begin: '((u8?|U)|L)?\"'\n          }),\n          {\n            begin: '(u8?|U)?R\"',\n            end: '\"',\n            contains: [hljs.BACKSLASH_ESCAPE]\n          },\n          {\n            begin: \"'\\\\\\\\?.\",\n            end: \"'\",\n            illegal: \".\"\n          }\n        ]\n      };\n      const NUMBERS = {\n        className: \"number\",\n        variants: [\n          {\n            begin: \"\\\\b(\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)(u|U|l|L|ul|UL|f|F)\"\n          },\n          {\n            begin: hljs.C_NUMBER_RE\n          }\n        ],\n        relevance: 0\n      };\n      const PREPROCESSOR = {\n        className: \"meta\",\n        begin: \"#\",\n        end: \"$\",\n        keywords: {\n          \"meta-keyword\": \"if else elif endif define undef ifdef ifndef\"\n        },\n        contains: [\n          {\n            begin: /\\\\\\n/,\n            relevance: 0\n          },\n          {\n            beginKeywords: \"include\",\n            end: \"$\",\n            keywords: {\n              \"meta-keyword\": \"include\"\n            },\n            contains: [\n              hljs.inherit(STRINGS, {\n                className: \"meta-string\"\n              }),\n              {\n                className: \"meta-string\",\n                begin: \"<\",\n                end: \">\",\n                illegal: \"\\\\n\"\n              }\n            ]\n          },\n          STRINGS,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      };\n      const DTS_REFERENCE = {\n        className: \"variable\",\n        begin: /&[a-z\\d_]*\\b/\n      };\n      const DTS_KEYWORD = {\n        className: \"meta-keyword\",\n        begin: \"/[a-z][a-z\\\\d-]*/\"\n      };\n      const DTS_LABEL = {\n        className: \"symbol\",\n        begin: \"^\\\\s*[a-zA-Z_][a-zA-Z\\\\d_]*:\"\n      };\n      const DTS_CELL_PROPERTY = {\n        className: \"params\",\n        begin: \"<\",\n        end: \">\",\n        contains: [\n          NUMBERS,\n          DTS_REFERENCE\n        ]\n      };\n      const DTS_NODE = {\n        className: \"class\",\n        begin: /[a-zA-Z_][a-zA-Z\\d_@]*\\s\\{/,\n        end: /[{;=]/,\n        returnBegin: true,\n        excludeEnd: true\n      };\n      const DTS_ROOT_NODE = {\n        className: \"class\",\n        begin: \"/\\\\s*\\\\{\",\n        end: /\\};/,\n        relevance: 10,\n        contains: [\n          DTS_REFERENCE,\n          DTS_KEYWORD,\n          DTS_LABEL,\n          DTS_NODE,\n          DTS_CELL_PROPERTY,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          NUMBERS,\n          STRINGS\n        ]\n      };\n      return {\n        name: \"Device Tree\",\n        keywords: \"\",\n        contains: [\n          DTS_ROOT_NODE,\n          DTS_REFERENCE,\n          DTS_KEYWORD,\n          DTS_LABEL,\n          DTS_NODE,\n          DTS_CELL_PROPERTY,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          NUMBERS,\n          STRINGS,\n          PREPROCESSOR,\n          {\n            begin: hljs.IDENT_RE + \"::\",\n            keywords: \"\"\n          }\n        ]\n      };\n    }\n    module.exports = dts;\n  }\n});\n\nexport {\n  require_dts\n};\n//# sourceMappingURL=chunk-CQCKPPTH.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00019441707991063595
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.1",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.15.1"
    },
    "app": "MyApp",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/chunk-CQCKPPTH.js (200) â€” 2024-07-28T11:41:39.995Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/chunk-CQCKPPTH.js"
        }
      ]
    }
  ]
}