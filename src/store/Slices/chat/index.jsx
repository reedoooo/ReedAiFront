/* eslint-disable import/order */
import assistantReducer, {
  createAssistant,
  createMessage,
  createRun,
  createRunStream,
  createRunStreamWithFunctions,
  createThread,
  deleteAssistant,
  fetchAssistantByThread,
  fetchAssistantList,
  retrieveRun,
  setAssistantImages,
  setAssistants,
  setOpenaiAssistants,
  setSelectedAssistant,
  updateAssistant,
  uploadAssistantFile,
} from './assistantSlice';
import baseChatReducer, {
  // addEnvToUser,
  setAbortController,
  setApiKey,
  setAtCommand,
  setChatFileItems,
  setChatMessages,
  setChatRequestData,
  setChatSettings,
  setError,
  setFirstMessageReceived,
  setFirstTokenReceived,
  setFocusAssistant,
  setFocusFile,
  setFocusPrompt,
  setFocusTool,
  setHashtagCommand,
  setIsAssistantPickerOpen,
  setIsDisabled,
  setIsFilePickerOpen,
  setIsGenerating,
  setIsMessagesUpdated,
  setIsPromptPickerOpen,
  setIsToolPickerOpen,
  setStreamingMessageIndex,
  setLoading,
  setMode,
  setPayload,
  setSlashCommand,
  setSourceCount,
  setToolCommand,
  setUseRetrieval,
  setUserInput,
  syncChatMessages,
  setIsStreaming,
} from './baseChatSlice';
import chatSessionReducer, {
  clearChatSessions,
  createChatSession,
  setChatSessions,
  setSelectedChatSession,
  setSessionHeader,
  setSessionId,
} from './chatSessionSlice';
import collectionReducer, { setCollections } from './collectionSlice';
import fileReducer, {
  fetchFileData,
  setChatFiles,
  setChatImages,
  setFiles,
  setNewMessageFiles,
  setNewMessageImages,
  setShowFilesDisplay,
  addNewMessageFile,
  updateNewMessageFile,
  uploadFile,
  getAllStoredFiles,
  getStoredFilesByType,
  getStoredFilesBySpace,
  getStoredFileByName,
  getStoredFileById,
} from './fileSlice';
import folderReducer, {
  createFolder,
  deleteFolder,
  setFolders,
  setSelectedFolder,
  updateFolder,
} from './foldersSlice';
import modelReducer, {
  setAvailableHostedModels,
  setAvailableLocalModels,
  setAvailableOpenRouterModels,
  setModels,
  setSelectedModel,
} from './modelsSlice';
import presetReducer, { setPresets, setSelectedPreset } from './presetSlice';
import promptReducer, { setPrompts, setSelectedPrompt } from './promptSlice';
import toolReducer, {
  setSelectedTools,
  setToolInUse,
  setTools,
} from './toolSlice';
import workspaceReducer, {
  setHomeWorkSpace,
  setSelectedWorkspace,
  setWorkspaceId,
  setWorkspaceImages,
  setWorkspaces,
} from './workspaceSlice';

export {
  // addEnvToUser,
  setIsStreaming,
  setStreamingMessageIndex,
  addNewMessageFile,
  updateNewMessageFile,
  syncChatMessages,
  clearChatSessions,
  createAssistant,
  createChatSession,
  createFolder,
  createMessage,
  createRun,
  createRunStream,
  createRunStreamWithFunctions,
  createThread,
  deleteAssistant,
  deleteFolder,
  fetchAssistantByThread,
  fetchAssistantList,
  fetchFileData,
  retrieveRun,
  setAbortController,
  setApiKey,
  setAssistantImages,
  setAssistants,
  setAtCommand,
  setAvailableHostedModels,
  setAvailableLocalModels,
  setAvailableOpenRouterModels,
  setChatFileItems,
  setChatFiles,
  setChatImages,
  setChatMessages,
  setChatRequestData,
  setChatSessions,
  setChatSettings,
  setCollections,
  setError,
  setFiles,
  setFirstMessageReceived,
  setFirstTokenReceived,
  setFocusAssistant,
  setFocusFile,
  setFocusPrompt,
  setFocusTool,
  setFolders,
  setHashtagCommand,
  setHomeWorkSpace,
  setIsAssistantPickerOpen,
  setIsDisabled,
  setIsFilePickerOpen,
  setIsGenerating,
  setIsMessagesUpdated,
  setIsPromptPickerOpen,
  setIsToolPickerOpen,
  setLoading,
  setMode,
  setModels,
  setNewMessageFiles,
  setNewMessageImages,
  setOpenaiAssistants,
  setPayload,
  setPresets,
  setPrompts,
  setSelectedAssistant,
  setSelectedChatSession,
  setSelectedFolder,
  setSelectedModel,
  setSelectedPreset,
  setSelectedPrompt,
  setSelectedTools,
  setSelectedWorkspace,
  setSessionHeader,
  setSessionId,
  setShowFilesDisplay,
  setSlashCommand,
  setSourceCount,
  setToolCommand,
  setToolInUse,
  setTools,
  setUseRetrieval,
  setUserInput,
  setWorkspaceId,
  setWorkspaceImages,
  setWorkspaces,
  updateAssistant,
  updateFolder,
  uploadAssistantFile,
  uploadFile,
  getAllStoredFiles,
  getStoredFilesByType,
  getStoredFilesBySpace,
  getStoredFileByName,
  getStoredFileById,
};

export {
  assistantReducer,
  baseChatReducer,
  chatSessionReducer,
  collectionReducer,
  fileReducer,
  folderReducer,
  modelReducer,
  presetReducer,
  promptReducer,
  toolReducer,
  workspaceReducer,
};
